{"version":3,"file":"static/js/992.e89db0f3.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 100px);\n  grid-gap: 20px;\n  list-style: none;\n  justify-content: center;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  height: 150px;\n  background-color: lightslategrey;\n\n  img{\n    width: 100px;\n    height: 150px;\n    object-fit: cover;\n  }\n`;\n\nexport const CastItem = styled.li`\n  text-align: center;\n\n  h3 {\n    font-weight: 500;\n  }\n\n  p {\n    font-style: italic;\n    color: #00b6b6;\n  }\n`;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastById } from '../../services/moviesApi';\nimport { CastItem, CastList, ImageWrapper } from './Cast.styled';\nimport maleAvatar from '../../images/man.webp';\nimport femaleAvatar from '../../images/woman.webp';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  const getData = useCallback(async (id) => {\n    const data = await fetchCastById(id);\n    setCast(data);\n  }, []);\n\n  useEffect(() => {\n    try {\n      getData(movieId);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [movieId, getData]);\n\n  return (\n    <CastList>\n      {cast.map(({ name, character, photo, gender, id }) => (\n        <CastItem key={id}>\n          <ImageWrapper>\n            <img\n              src={photo ? photo : gender === 1 ? femaleAvatar : maleAvatar}\n              alt={name}\n            />\n          </ImageWrapper>\n          <h3>{name}</h3>\n          <p>({character})</p>\n        </CastItem>\n      ))}\n    </CastList>\n  );\n}\n\nexport default Cast\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst ACCESS_KEY = 'fde4dd89a2c817f4c4efb19732e7d4a1';\nconst IMG_BASE_URL = 'http://image.tmdb.org/t/p/w500';\n\nexport async function fetchPopularMovies() {\n  const res = await axios.get('trending/movie/day', {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return filterMoviesData(res.data.results);\n}\n\nexport async function fetchMovieData(id) {\n  const res = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n  const { title, overview, poster_path, vote_average, genres } = res.data;\n\n  return {\n    title,\n    overview,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n    score: Math.floor(vote_average * 10),\n    genres,\n  };\n}\n\nexport async function fetchCastById(id) {\n  const res = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return res.data?.cast.map(({\n                               profile_path,\n                               name,\n                               character,\n                               gender,\n                               id,\n                             }) => ({\n    id,\n    photo: profile_path ? IMG_BASE_URL + profile_path : null,\n    name,\n    character,\n    gender,\n  }));\n}\n\nexport async function fetchReviewsById(id) {\n  const res = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return res.data?.results;\n}\n\nexport async function fetchMoviesByQuery(query) {\n  const res = await axios.get('search/movie', {\n    params: {\n      api_key: ACCESS_KEY,\n      query: query,\n    },\n  });\n\n  return filterMoviesData(res.data.results);\n}\n\nfunction filterMoviesData(movies) {\n  return movies.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n  }));\n}\n"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","ImageWrapper","_templateObject2","CastItem","_templateObject3","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","getData","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","data","_context","prev","next","fetchCastById","sent","stop","_x","apply","arguments","useEffect","err","console","log","_jsx","children","map","_ref2","name","character","photo","gender","_jsxs","src","femaleAvatar","maleAvatar","alt","axios","ACCESS_KEY","IMG_BASE_URL","fetchPopularMovies","_fetchPopularMovies","res","params","api_key","abrupt","filterMoviesData","results","fetchMovieData","_fetchMovieData","_callee2","_res$data","title","overview","poster_path","vote_average","genres","_context2","concat","poster","score","Math","floor","_x2","_fetchCastById","_callee3","_res$data2","_context3","profile_path","fetchReviewsById","_x3","_fetchReviewsById","_callee4","_res$data3","_context4","fetchMoviesByQuery","_x4","_fetchMoviesByQuery","_callee5","query","_context5","movies"],"sourceRoot":""}