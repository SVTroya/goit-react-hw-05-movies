{"version":3,"file":"static/js/142.23df70d5.chunk.js","mappings":"iQAGaA,EAAqBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yFAO/BC,EAASH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8EAKnBG,EAAmBL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4RAsB7BK,EAAYP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sFAOtBO,GAAiBT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAeW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,+LAYhCU,GAAWZ,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAea,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,uQ,qDCxD1BY,EAAsB,CACjCC,QAAQ,SAACC,GAAM,MAAI,CACjBC,QAAQ,EACRC,EAAE,EACFC,WAAa,CACXC,SAAU,GACVC,MAAgB,GAATL,GAEV,EACDM,OAAO,CACLL,QAAQ,EACRC,GAAG,MAIMK,EAAuB,CAClCR,QAAQ,SAACC,GAAM,MAAI,CACjBC,QAAQ,EACRC,EAAE,EACFC,WAAa,CACXC,SAAU,GACVC,MAAgB,GAATL,GAEV,EACDM,OAAO,CACLL,QAAQ,EACRC,EAAE,M,SCyCN,MApDA,WAAyB,IAADM,EAAAC,EAAAC,EAAAC,EACdC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAkCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAExBI,GAAWC,EAAAA,EAAAA,MAEXC,GAAUC,EAAAA,EAAAA,aAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAC,EAAOC,GAAE,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GAChBC,EAAAA,EAAAA,IAAeL,GAAI,KAAD,EAA/BC,EAAIC,EAAAI,KACVf,EAAaU,GAAM,wBAAAC,EAAAK,OAAA,GAAAR,EAAA,KACpB,gBAAAS,GAAA,OAAAZ,EAAAa,MAAA,KAAAC,UAAA,EAH0B,GAGxB,IAUH,OARAC,EAAAA,EAAAA,YAAU,WACR,IACEjB,EAAQV,EAGV,CAFE,MAAO4B,GACPC,QAAQC,IAAIF,EACd,CACF,GAAG,CAAC5B,EAASU,KAGXqB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAC5D,EAAkB,CAAA8D,SAAA,EACjBC,EAAAA,EAAAA,KAAC3D,EAAM,CAAC4D,IAAK7B,EAAU8B,OAAS9B,EAAU8B,OAASC,EAAiBC,IAAKhC,EAAUiC,MAAOC,MAAO,OACjGT,EAAAA,EAAAA,MAACtD,EAAgB,CAAAwD,SAAA,EACfC,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,GAAS,CAACC,QAAQ,SAAStD,OAAQ,EAAGuD,YAAY,UAAUC,SAAU1D,EAAoB+C,SAAE3B,EAAUiC,SACvGR,EAAAA,EAAAA,MAACU,EAAAA,EAAAA,EAAQ,CAACC,QAAQ,SAAStD,OAAQ,EAAGuD,YAAY,UAAUC,SAAUjD,EAAqBsC,SAAA,CAAC,eAAa3B,EAAUuC,MAAM,QACzHX,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,GAAS,CAACC,QAAQ,SAAStD,OAAQ,EAAGuD,YAAY,UAAUC,SAAU1D,EAAoB+C,SAAC,cAC5FC,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,EAAQ,CAACC,QAAQ,SAAStD,OAAQ,EAAGuD,YAAY,UAAUC,SAAUjD,EAAqBsC,SAAE3B,EAAUwC,YACvGZ,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,GAAS,CAACC,QAAQ,SAAStD,OAAQ,GAAIuD,YAAY,UAAUC,SAAU1D,EAAoB+C,SAAC,YAC7FC,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,EAAQ,CAACC,QAAQ,SAAStD,OAAQ,GAAIuD,YAAY,UAAUC,SAAUjD,EAAqBsC,SAAW,OAAT3B,QAAS,IAATA,GAAiB,QAARV,EAATU,EAAWyC,cAAM,IAAAnD,OAAR,EAATA,EAAmBoD,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAAEC,KAAK,eAGnJpB,EAAAA,EAAAA,MAAC/C,EAAQ,CAACoE,IAAY,OAAR5C,QAAQ,IAARA,GAAe,QAAPX,EAARW,EAAU6C,aAAK,IAAAxD,OAAP,EAARA,EAAiByD,OAAQ,SAASrB,SAAA,EAACC,EAAAA,EAAAA,KAACqB,EAAAA,IAAe,IAAI,eACrErB,EAAAA,EAAAA,KAAA,MAAIsB,MAAO,CACThB,MAAO,OACPiB,UAAW,aAEb1B,EAAAA,EAAAA,MAACpD,EAAS,CAAAsD,SAAA,EACRC,EAAAA,EAAAA,KAACrD,EAAc,CAACuE,GAAG,OAAOC,MAAO,CAAEC,MAAc,OAAR9C,QAAQ,IAARA,GAAe,QAAPV,EAARU,EAAU6C,aAAK,IAAAvD,OAAP,EAARA,EAAiBwD,OAAQ,UAAUrB,SAAC,UAC7EC,EAAAA,EAAAA,KAACrD,EAAc,CAACuE,GAAG,UAAUC,MAAO,CAAEC,MAAc,OAAR9C,QAAQ,IAARA,GAAe,QAAPT,EAARS,EAAU6C,aAAK,IAAAtD,OAAP,EAARA,EAAiBuD,OAAQ,UAAUrB,SAAC,gBAElFC,EAAAA,EAAAA,KAAA,MAAIsB,MAAO,CACThB,MAAO,OACPiB,UAAW,aAEbvB,EAAAA,EAAAA,KAACwB,EAAAA,SAAQ,CAACC,UAAUzB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BAA4BA,UAClDC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAM,QAIf,C,+LC/DAC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAa,mCACbC,EAAe,iCAEd,SAAeC,IAAkB,OAAAC,EAAAxC,MAAC,KAADC,UAAA,CAQvC,SAAAuC,IAAA,OAAAA,GAAApD,EAAAA,EAAAA,GAAAC,IAAAA,MARM,SAAAC,IAAA,IAAAmD,EAAA,OAAApD,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACayC,EAAAA,EAAAA,IAAU,qBAAsB,CAChDM,OAAQ,CACNC,QAASN,KAEV,KAAD,EAJO,OAAHI,EAAGhD,EAAAI,KAAAJ,EAAAmD,OAAA,SAMFC,EAAiBJ,EAAIjD,KAAKsD,UAAQ,wBAAArD,EAAAK,OAAA,GAAAR,EAAA,MAC1CU,MAAA,KAAAC,UAAA,CAEM,SAAeL,EAAcG,GAAA,OAAAgD,EAAA/C,MAAC,KAADC,UAAA,CAenC,SAAA8C,IAAA,OAAAA,GAAA3D,EAAAA,EAAAA,GAAAC,IAAAA,MAfM,SAAA2D,EAA8BzD,GAAE,IAAAkD,EAAAQ,EAAAnC,EAAAO,EAAA6B,EAAAC,EAAA7B,EAAA,OAAAjC,IAAAA,MAAA,SAAA+D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,cAAAyD,EAAAzD,KAAA,EACnByC,EAAAA,EAAAA,IAAU,UAADiB,OAAW9D,GAAM,CAC1CmD,OAAQ,CACNC,QAASN,KAEV,KAAD,EACwD,OALpDI,EAAGW,EAAAvD,KAAAoD,EAKsDR,EAAIjD,KAA3DsB,EAAKmC,EAALnC,MAAOO,EAAQ4B,EAAR5B,SAAU6B,EAAWD,EAAXC,YAAaC,EAAYF,EAAZE,aAAc7B,EAAM2B,EAAN3B,OAAM8B,EAAAR,OAAA,SAEnD,CACL9B,MAAAA,EACAO,SAAAA,EACAV,OAAQuC,EAAcZ,EAAeY,EAAc,KACnD9B,MAAOkC,KAAKC,MAAqB,GAAfJ,GAClB7B,OAAAA,IACD,wBAAA8B,EAAAtD,OAAA,GAAAkD,EAAA,MACFhD,MAAA,KAAAC,UAAA,CAEM,SAAeuD,EAAaC,GAAA,OAAAC,EAAA1D,MAAC,KAADC,UAAA,CAoBlC,SAAAyD,IAAA,OAAAA,GAAAtE,EAAAA,EAAAA,GAAAC,IAAAA,MApBM,SAAAsE,EAA6BpE,GAAE,IAAAqE,EAAAnB,EAAA,OAAApD,IAAAA,MAAA,SAAAwE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAlE,KAAA,EAClByC,EAAAA,EAAAA,IAAU,UAADiB,OAAW9D,EAAE,YAAY,CAClDmD,OAAQ,CACNC,QAASN,KAEV,KAAD,EAJO,OAAHI,EAAGoB,EAAAhE,KAAAgE,EAAAjB,OAAA,SAMM,QANNgB,EAMFnB,EAAIjD,YAAI,IAAAoE,OAAA,EAARA,EAAUE,KAAKvC,KAAI,SAAAwC,GAAA,IACGC,EAAYD,EAAZC,aACAvC,EAAIsC,EAAJtC,KACAwC,EAASF,EAATE,UACAC,EAAMH,EAANG,OACE,MACG,CAChC3E,GAF6BwE,EAAFxE,GAG3B4E,MAAOH,EAAe1B,EAAe0B,EAAe,KACpDvC,KAAAA,EACAwC,UAAAA,EACAC,OAAAA,EACD,KAAE,wBAAAL,EAAA/D,OAAA,GAAA6D,EAAA,MACJ3D,MAAA,KAAAC,UAAA,CAEM,SAAemE,EAAgBC,GAAA,OAAAC,EAAAtE,MAAC,KAADC,UAAA,CAQrC,SAAAqE,IAAA,OAAAA,GAAAlF,EAAAA,EAAAA,GAAAC,IAAAA,MARM,SAAAkF,EAAgChF,GAAE,IAAAiF,EAAA/B,EAAA,OAAApD,IAAAA,MAAA,SAAAoF,GAAA,cAAAA,EAAA/E,KAAA+E,EAAA9E,MAAA,cAAA8E,EAAA9E,KAAA,EACrByC,EAAAA,EAAAA,IAAU,SAADiB,OAAU9D,EAAE,YAAY,CACjDmD,OAAQ,CACNC,QAASN,KAEV,KAAD,EAJO,OAAHI,EAAGgC,EAAA5E,KAAA4E,EAAA7B,OAAA,SAMM,QANN4B,EAMF/B,EAAIjD,YAAI,IAAAgF,OAAA,EAARA,EAAU1B,SAAO,wBAAA2B,EAAA3E,OAAA,GAAAyE,EAAA,MACzBvE,MAAA,KAAAC,UAAA,CAEM,SAAeyE,EAAkBC,GAAA,OAAAC,EAAA5E,MAAC,KAADC,UAAA,CASvC,SAAA2E,IAAA,OAAAA,GAAAxF,EAAAA,EAAAA,GAAAC,IAAAA,MATM,SAAAwF,EAAkCC,GAAK,IAAArC,EAAA,OAAApD,IAAAA,MAAA,SAAA0F,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,cAAAoF,EAAApF,KAAA,EAC1ByC,EAAAA,EAAAA,IAAU,eAAgB,CAC1CM,OAAQ,CACNC,QAASN,EACTyC,MAAOA,KAER,KAAD,EALO,OAAHrC,EAAGsC,EAAAlF,KAAAkF,EAAAnC,OAAA,SAOFC,EAAiBJ,EAAIjD,KAAKsD,UAAQ,wBAAAiC,EAAAjF,OAAA,GAAA+E,EAAA,MAC1C7E,MAAA,KAAAC,UAAA,CAED,SAAS4C,EAAiBmC,GACxB,OAAOA,EAAOzD,KAAI,SAAApC,GAAA,IAAGI,EAAEJ,EAAFI,GAAIuB,EAAK3B,EAAL2B,MAAOoC,EAAW/D,EAAX+D,YAAW,MAAQ,CACjD3D,GAAAA,EACAuB,MAAAA,EACAH,OAAQuC,EAAcZ,EAAeY,EAAc,KACpD,GACH,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","animations/animations.js","pages/MovieDetails/MovieDetails.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledMovieDetails = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 20px 0;\n  align-self: flex-start;\n`;\n\nexport const Poster = styled.img`\n  background-color: var(--color-card-bckg);\n  border-radius: 8px;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  color: var(--color-text-light);\n\n  h1{\n    font-size: 30px;\n    font-weight: 500;\n    line-height: 1.2;\n  }\n\n  h2{\n    font-size: 20px;\n    font-weight: 500;\n  }\n\n  p{\n    text-align: justify;\n  }\n`;\n\nexport const MovieMenu = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 30px;\n  justify-content: center;\n`;\n\nexport const StyledMenuLink = styled(NavLink)`\n  text-decoration: none;\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--color-text-light);\n\n  &.active {\n    position: relative;\n    color: var(--color-accent);\n  }\n`;\n\nexport const BackLink = styled(NavLink)`\n  text-decoration: none;\n  color: var(--color-text-light);\n  font-size: 25px;\n  font-weight: 500;\n  align-self: start;\n\n  transition: color 250ms ease-in-out;\n\n  &:hover, &:focus {\n    color: tomato;\n  }\n\n  svg{\n    padding-top: 6px;\n  }\n`;\n","export const animateTextFromLeft = {\n  visible:(custom)=>({\n    opacity:1,\n    x:0,\n    transition:  {\n      duration: .1,\n      delay: custom * 0.1\n    }\n  }),\n  hidden:{\n    opacity:0,\n    x:-100\n  }\n}\n\nexport const animateTextFromRight = {\n  visible:(custom)=>({\n    opacity:1,\n    x:0,\n    transition:  {\n      duration: .2,\n      delay: custom * 0.1\n    }\n  }),\n  hidden:{\n    opacity:0,\n    x:300\n  }\n}\n","import {\n  BackLink,\n  MovieInfoWrapper,\n  MovieMenu,\n  Poster,\n  StyledMenuLink,\n  StyledMovieDetails,\n} from './MovieDetails.styled';\nimport { Suspense, useCallback, useEffect, useState } from 'react';\nimport { fetchMovieData } from '../../services/moviesApi';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport movieDefaultImg from '../../images/movie.webp';\nimport { FaArrowLeftLong } from 'react-icons/fa6';\nimport {motion} from 'framer-motion'\nimport { animateTextFromLeft, animateTextFromRight } from '../../animations/animations';\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState({});\n\n  const location = useLocation();\n\n  const getData = useCallback(async (id) => {\n    const data = await fetchMovieData(id);\n    setMovieData(data);\n  }, []);\n\n  useEffect(() => {\n    try {\n      getData(movieId);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [movieId, getData]);\n\n  return (\n    <>\n      <StyledMovieDetails>\n        <Poster src={movieData.poster ? movieData.poster : movieDefaultImg} alt={movieData.title} width={300} />\n        <MovieInfoWrapper>\n          <motion.h1 initial='hidden' custom={1} whileInView='visible' variants={animateTextFromLeft}>{movieData.title}</motion.h1>\n          <motion.p initial='hidden' custom={4} whileInView='visible' variants={animateTextFromRight}>User score: {movieData.score}%</motion.p>\n          <motion.h2 initial='hidden' custom={6} whileInView='visible' variants={animateTextFromLeft}>Overview</motion.h2>\n          <motion.p initial='hidden' custom={9} whileInView='visible' variants={animateTextFromRight}>{movieData.overview}</motion.p>\n          <motion.h2 initial='hidden' custom={11} whileInView='visible' variants={animateTextFromLeft}>Genres</motion.h2>\n          <motion.p initial='hidden' custom={14} whileInView='visible' variants={animateTextFromRight}>{movieData?.genres?.map(genre => genre.name).join(', ')}</motion.p>\n        </MovieInfoWrapper>\n      </StyledMovieDetails>\n      <BackLink to={location?.state?.from || '/movie'}><FaArrowLeftLong  /> Go back</BackLink>\n      <hr style={{\n        width: '100%',\n        textAlign: 'center',\n      }} />\n      <MovieMenu>\n        <StyledMenuLink to='cast' state={{ from: location?.state?.from || '/movie'}}>Cast</StyledMenuLink>\n        <StyledMenuLink to='reviews' state={{ from: location?.state?.from || '/movie'}}>Reviews</StyledMenuLink>\n      </MovieMenu>\n      <hr style={{\n        width: '100%',\n        textAlign: 'center',\n      }} />\n      <Suspense fallback={<h2>Loading movie suspense</h2>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nexport default MovieDetails\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst ACCESS_KEY = 'fde4dd89a2c817f4c4efb19732e7d4a1';\nconst IMG_BASE_URL = 'http://image.tmdb.org/t/p/w500';\n\nexport async function fetchPopularMovies() {\n  const res = await axios.get('trending/movie/day', {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return filterMoviesData(res.data.results);\n}\n\nexport async function fetchMovieData(id) {\n  const res = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n  const { title, overview, poster_path, vote_average, genres } = res.data;\n\n  return {\n    title,\n    overview,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n    score: Math.floor(vote_average * 10),\n    genres,\n  };\n}\n\nexport async function fetchCastById(id) {\n  const res = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return res.data?.cast.map(({\n                               profile_path,\n                               name,\n                               character,\n                               gender,\n                               id,\n                             }) => ({\n    id,\n    photo: profile_path ? IMG_BASE_URL + profile_path : null,\n    name,\n    character,\n    gender,\n  }));\n}\n\nexport async function fetchReviewsById(id) {\n  const res = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return res.data?.results;\n}\n\nexport async function fetchMoviesByQuery(query) {\n  const res = await axios.get('search/movie', {\n    params: {\n      api_key: ACCESS_KEY,\n      query: query,\n    },\n  });\n\n  return filterMoviesData(res.data.results);\n}\n\nfunction filterMoviesData(movies) {\n  return movies.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n  }));\n}\n"],"names":["StyledMovieDetails","styled","_templateObject","_taggedTemplateLiteral","Poster","_templateObject2","MovieInfoWrapper","_templateObject3","MovieMenu","_templateObject4","StyledMenuLink","NavLink","_templateObject5","BackLink","_templateObject6","animateTextFromLeft","visible","custom","opacity","x","transition","duration","delay","hidden","animateTextFromRight","_movieData$genres","_location$state","_location$state2","_location$state3","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieData","setMovieData","location","useLocation","getData","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","data","_context","prev","next","fetchMovieData","sent","stop","_x","apply","arguments","useEffect","err","console","log","_jsxs","_Fragment","children","_jsx","src","poster","movieDefaultImg","alt","title","width","motion","initial","whileInView","variants","score","overview","genres","map","genre","name","join","to","state","from","FaArrowLeftLong","style","textAlign","Suspense","fallback","Outlet","axios","ACCESS_KEY","IMG_BASE_URL","fetchPopularMovies","_fetchPopularMovies","res","params","api_key","abrupt","filterMoviesData","results","_fetchMovieData","_callee2","_res$data","poster_path","vote_average","_context2","concat","Math","floor","fetchCastById","_x2","_fetchCastById","_callee3","_res$data2","_context3","cast","_ref2","profile_path","character","gender","photo","fetchReviewsById","_x3","_fetchReviewsById","_callee4","_res$data3","_context4","fetchMoviesByQuery","_x4","_fetchMoviesByQuery","_callee5","query","_context5","movies"],"sourceRoot":""}