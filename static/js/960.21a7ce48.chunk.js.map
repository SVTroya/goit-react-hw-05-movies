{"version":3,"file":"static/js/960.21a7ce48.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  list-style: none;\n`;\n\nexport const ReviewItem = styled.li`\n  width: 100%;\n  background-color: var(--color-card-bckg);\n  border-radius: 12px;\n  border: 1px solid #2e2f42;\n  color: var(--color-text-dark);\n  padding: 20px;\n\n  p{\n    text-align: justify;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Author = styled.span`\n  display: block;\n  margin-left: auto;\n  font-weight: 500;\n  text-align: right;\n`;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsById } from '../../services/moviesApi';\nimport { Author, ReviewItem, ReviewsList } from './Reviews.styled';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n   const getData = useCallback(async (id) => {\n     const data = await fetchReviewsById(id);\n     setReviews(data);\n     }, []);\n\n  useEffect(() => {\n    try {\n      getData(movieId);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [movieId, getData]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n          <ReviewsList>\n            {reviews.map(({ content, author, id }) => {\n              return <ReviewItem key={id}>\n                <p>{content}</p>\n                <Author>{author}</Author>\n              </ReviewItem>;\n            })}\n          </ReviewsList>)\n        : <p> There is no reviews yet</p>\n        }\n    </>\n  );\n}\n\nexport default Reviews\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst ACCESS_KEY = 'fde4dd89a2c817f4c4efb19732e7d4a1';\nconst IMG_BASE_URL = 'http://image.tmdb.org/t/p/w500';\n\nexport async function fetchPopularMovies() {\n  const res = await axios.get('trending/movie/day', {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return filterMoviesData(res.data.results);\n}\n\nexport async function fetchMovieData(id) {\n  const res = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n  const { title, overview, poster_path, vote_average, genres } = res.data;\n\n  return {\n    title,\n    overview,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n    score: Math.floor(vote_average * 10),\n    genres,\n  };\n}\n\nexport async function fetchCastById(id) {\n  const res = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return res.data?.cast.map(({\n                               profile_path,\n                               name,\n                               character,\n                               gender,\n                               id,\n                             }) => ({\n    id,\n    photo: profile_path ? IMG_BASE_URL + profile_path : null,\n    name,\n    character,\n    gender,\n  }));\n}\n\nexport async function fetchReviewsById(id) {\n  const res = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return res.data?.results;\n}\n\nexport async function fetchMoviesByQuery(query) {\n  const res = await axios.get('search/movie', {\n    params: {\n      api_key: ACCESS_KEY,\n      query: query,\n    },\n  });\n\n  return filterMoviesData(res.data.results);\n}\n\nfunction filterMoviesData(movies) {\n  return movies.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n  }));\n}\n"],"names":["ReviewsList","styled","_templateObject","_taggedTemplateLiteral","ReviewItem","_templateObject2","Author","_templateObject3","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","getData","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","data","_context","prev","next","fetchReviewsById","sent","stop","_x","apply","arguments","useEffect","err","console","log","_jsx","_Fragment","children","length","map","_ref2","content","author","_jsxs","axios","ACCESS_KEY","IMG_BASE_URL","fetchPopularMovies","_fetchPopularMovies","res","params","api_key","abrupt","filterMoviesData","results","fetchMovieData","_fetchMovieData","_callee2","_res$data","title","overview","poster_path","vote_average","genres","_context2","concat","poster","score","Math","floor","fetchCastById","_x2","_fetchCastById","_callee3","_res$data2","_context3","cast","profile_path","name","character","gender","photo","_x3","_fetchReviewsById","_callee4","_res$data3","_context4","fetchMoviesByQuery","_x4","_fetchMoviesByQuery","_callee5","query","_context5","movies"],"sourceRoot":""}