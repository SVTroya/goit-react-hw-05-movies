{"version":3,"file":"static/js/992.44dfccbe.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 100px);\n  grid-gap: 20px;\n  list-style: none;\n  justify-content: center;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  height: 150px;\n  background-color: lightslategrey;\n\n  img{\n    width: 100px;\n    height: 150px;\n    object-fit: cover;\n  }\n`;\n\nexport const CastItem = styled.li`\n  text-align: center;\n\n  h3 {\n    font-weight: 500;\n  }\n\n  p {\n    font-style: italic;\n    color: #00b6b6;\n  }\n`;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastById } from '../../services/moviesApi';\nimport { CastItem, CastList, ImageWrapper } from './Cast.styled';\nimport maleAvatar from '../../images/man.webp';\nimport femaleAvatar from '../../images/woman.webp';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [showNothingFoundMsg, setShowNothingFoundMsg] = useState(false);\n\n  const getData = useCallback(async (id) => {\n    const data = await fetchCastById(id);\n    if (data.length === 0) {\n      setShowNothingFoundMsg(true);\n    }\n    setCast(data);\n  }, []);\n\n  useEffect(() => {\n    try {\n      getData(movieId);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [movieId, getData]);\n\n  return (\n    <>\n      {cast.length > 0 ? (<CastList>\n          {cast.map(({ name, character, photo, gender, id }) => (\n            <CastItem key={id}>\n              <ImageWrapper>\n                <img\n                  src={photo ? photo : gender === 1 ? femaleAvatar : maleAvatar}\n                  alt={name}\n                />\n              </ImageWrapper>\n              <h3>{name}</h3>\n              <p>({character})</p>\n            </CastItem>\n          ))}\n        </CastList>)\n        : null}\n      {showNothingFoundMsg ? <p>Sorry, we don't have information about cast</p> : null}\n    </>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst ACCESS_KEY = 'fde4dd89a2c817f4c4efb19732e7d4a1';\nconst IMG_BASE_URL = 'http://image.tmdb.org/t/p/w500';\n\nexport async function fetchPopularMovies() {\n  const res = await axios.get('trending/movie/day', {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return filterMoviesData(res.data.results);\n}\n\nexport async function fetchMovieData(id) {\n  const res = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n  const { title, overview, poster_path, vote_average, genres } = res.data;\n\n  return {\n    title,\n    overview,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n    score: Math.floor(vote_average * 10),\n    genres,\n  };\n}\n\nexport async function fetchCastById(id) {\n  const res = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return res.data?.cast.map(({\n                               profile_path,\n                               name,\n                               character,\n                               gender,\n                               id,\n                             }) => ({\n    id,\n    photo: profile_path ? IMG_BASE_URL + profile_path : null,\n    name,\n    character,\n    gender,\n  }));\n}\n\nexport async function fetchReviewsById(id) {\n  const res = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return res.data?.results;\n}\n\nexport async function fetchMoviesByQuery(query) {\n  const res = await axios.get('search/movie', {\n    params: {\n      api_key: ACCESS_KEY,\n      query: query,\n    },\n  });\n\n  return filterMoviesData(res.data.results);\n}\n\nfunction filterMoviesData(movies) {\n  return movies.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n  }));\n}\n"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","ImageWrapper","_templateObject2","CastItem","_templateObject3","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","showNothingFoundMsg","setShowNothingFoundMsg","getData","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","data","_context","prev","next","fetchCastById","sent","length","stop","_x","apply","arguments","useEffect","err","console","log","_jsxs","_Fragment","children","_jsx","map","_ref2","name","character","photo","gender","src","femaleAvatar","maleAvatar","alt","axios","ACCESS_KEY","IMG_BASE_URL","fetchPopularMovies","_fetchPopularMovies","res","params","api_key","abrupt","filterMoviesData","results","fetchMovieData","_fetchMovieData","_callee2","_res$data","title","overview","poster_path","vote_average","genres","_context2","concat","poster","score","Math","floor","_x2","_fetchCastById","_callee3","_res$data2","_context3","profile_path","fetchReviewsById","_x3","_fetchReviewsById","_callee4","_res$data3","_context4","fetchMoviesByQuery","_x4","_fetchMoviesByQuery","_callee5","query","_context5","movies"],"sourceRoot":""}