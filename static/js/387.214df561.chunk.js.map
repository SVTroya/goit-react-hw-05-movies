{"version":3,"file":"static/js/387.214df561.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieDetails.styled.jsx","components/MovieInfo/MovieDetails.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledMovieDetails = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 20px 0;\n`;\n\nexport const Poster = styled.img`\n  background-color: var(--color-card-bckg);\n  border-radius: 8px;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  color: var(--color-text-light);\n\n  h1{\n    font-size: 30px;\n    font-weight: 500;\n    line-height: 1.2;\n  }\n\n  h2{\n    font-size: 20px;\n    font-weight: 500;\n  }\n\n  p{\n    text-align: justify;\n  }\n`;\n\nexport const MovieMenu = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 30px;\n  justify-content: center;\n`;\n\nexport const StyledMenuLink = styled(NavLink)`\n  text-decoration: none;\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--color-text-light);\n\n  &.active {\n    position: relative;\n    color: var(--color-accent);\n  }\n`;\n\nexport const BackLink = styled(NavLink)`\n  text-decoration: none;\n  color: var(--color-text-light);\n  font-size: 25px;\n  font-weight: 500;\n  align-self: start;\n\n  transition: color 250ms ease-in-out;\n\n  &:hover, &:focus {\n    color: tomato;\n  }\n`;\n","import {\n  BackLink,\n  MovieInfoWrapper,\n  MovieMenu,\n  Poster,\n  StyledMenuLink,\n  StyledMovieDetails,\n} from './MovieDetails.styled';\nimport { useCallback, useEffect, useState } from 'react';\nimport { fetchMovieData } from '../../services/moviesApi';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport movieDefaultImg from '../../images/movie.webp';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState({});\n\n  const location = useLocation();\n\n  const getData = useCallback(async (id) => {\n    const data = await fetchMovieData(id);\n    setMovieData(data);\n  }, []);\n\n  useEffect(() => {\n    try {\n      getData(movieId);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [movieId, getData]);\n\n\n\n  return (\n    <>\n      <StyledMovieDetails>\n        <Poster src={movieData.poster ? movieData.poster : movieDefaultImg} alt={movieData.title} width={300} />\n        <MovieInfoWrapper>\n          <h1>{movieData.title}</h1>\n          <p>User score: {movieData.score}%</p>\n          <h2>Overview</h2>\n          <p>{movieData.overview}</p>\n          <h2>Genres</h2>\n          <p>{movieData?.genres?.map(genre => genre.name).join(', ')}</p>\n        </MovieInfoWrapper>\n      </StyledMovieDetails>\n      <BackLink to={location?.state?.from}>&lt;- Go back</BackLink>\n      <hr style={{\n        width: '100%',\n        textAlign: 'center',\n      }} />\n      <MovieMenu>\n        <StyledMenuLink to='cast' state={{ from: location?.state?.from }}>Cast</StyledMenuLink>\n        <StyledMenuLink to='reviews' state={{ from: location?.state?.from }}>Reviews</StyledMenuLink>\n      </MovieMenu>\n      <hr style={{\n        width: '100%',\n        textAlign: 'center',\n      }} />\n      <Outlet />\n    </>\n  );\n}\n\nexport default MovieDetails\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst ACCESS_KEY = 'fde4dd89a2c817f4c4efb19732e7d4a1';\nconst IMG_BASE_URL = 'http://image.tmdb.org/t/p/w500';\n\nexport async function fetchPopularMovies() {\n  const res = await axios.get('trending/movie/day', {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return filterMoviesData(res.data.results);\n}\n\nexport async function fetchMovieData(id) {\n  const res = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n  const { title, overview, poster_path, vote_average, genres } = res.data;\n\n  return {\n    title,\n    overview,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n    score: Math.floor(vote_average * 10),\n    genres,\n  };\n}\n\nexport async function fetchCastById(id) {\n  const res = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return res.data?.cast.map(({\n                               profile_path,\n                               name,\n                               character,\n                               gender,\n                               id,\n                             }) => ({\n    id,\n    photo: profile_path ? IMG_BASE_URL + profile_path : null,\n    name,\n    character,\n    gender,\n  }));\n}\n\nexport async function fetchReviewsById(id) {\n  const res = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return res.data?.results;\n}\n\nexport async function fetchMoviesByQuery(query) {\n  const res = await axios.get('search/movie', {\n    params: {\n      api_key: ACCESS_KEY,\n      query: query,\n    },\n  });\n\n  return filterMoviesData(res.data.results);\n}\n\nfunction filterMoviesData(movies) {\n  return movies.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n  }));\n}\n"],"names":["StyledMovieDetails","styled","_templateObject","_taggedTemplateLiteral","Poster","_templateObject2","MovieInfoWrapper","_templateObject3","MovieMenu","_templateObject4","StyledMenuLink","NavLink","_templateObject5","BackLink","_templateObject6","_movieData$genres","_location$state","_location$state2","_location$state3","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieData","setMovieData","location","useLocation","getData","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","data","_context","prev","next","fetchMovieData","sent","stop","_x","apply","arguments","useEffect","err","console","log","_jsxs","_Fragment","children","_jsx","src","poster","movieDefaultImg","alt","title","width","score","overview","genres","map","genre","name","join","to","state","from","style","textAlign","Outlet","axios","ACCESS_KEY","IMG_BASE_URL","fetchPopularMovies","_fetchPopularMovies","res","params","api_key","abrupt","filterMoviesData","results","_fetchMovieData","_callee2","_res$data","poster_path","vote_average","_context2","concat","Math","floor","fetchCastById","_x2","_fetchCastById","_callee3","_res$data2","_context3","cast","_ref2","profile_path","character","gender","photo","fetchReviewsById","_x3","_fetchReviewsById","_callee4","_res$data3","_context4","fetchMoviesByQuery","_x4","_fetchMoviesByQuery","_callee5","query","_context5","movies"],"sourceRoot":""}