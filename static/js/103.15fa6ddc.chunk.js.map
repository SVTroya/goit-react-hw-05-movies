{"version":3,"file":"static/js/103.15fa6ddc.chunk.js","mappings":"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","sources":["components/Home/Home.styled.jsx","components/Home/Home.jsx","components/Movies/Movies.styled.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/Movies/Movies.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  font-size: 40px;\n  font-weight: 500;\n  margin: 40px auto 0;\n  color: var(--color-text-light);\n`;\n","\nimport { PageTitle } from './Home.styled';\nimport { useCallback, useEffect, useState } from 'react';\nimport { fetchPopularMovies } from '../../services/moviesApi';\nimport Movies from '../Movies/Movies';\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n\n  const getData = useCallback(async () => {\n    const data = await fetchPopularMovies();\n    setMovies(data);\n  }, []);\n\n  useEffect(() => {\n    try {\n      getData();\n    } catch (err) {\n      console.log(err);\n    }\n\n  }, [getData]);\n\n  return (\n    <>\n      <PageTitle>Trending today</PageTitle>\n      <Movies movies={movies} />\n    </>\n  );\n}\n\nexport default Home\n","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 330px));\n  grid-auto-rows: minmax(350px, auto);\n  grid-gap: 16px;\n  justify-content: center;\n  list-style: none;\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieItem = styled.li`\n  background-color: var(--color-card-bckg);\n  border-radius: 8px;\n  height: 440px;\n  transform: scale(1);\n\n  transition: transform 250ms ease-in-out;\n\n  &:hover, &:focus {\n    transform: scale(1.02);\n  }\n`;\n\nexport const MovieLink = styled(NavLink)`\n  width: 100%;\n  height: 100%;\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n  padding: 16px;\n`;\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 250px;\n  height: 350px;\n  border-radius: 8px;\n  overflow: clip;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 20px;\n  color: var(--color-text-dark);\n  text-align: center;\n  line-height: 1.2;\n`;\n","import { ImageWrapper, MovieLink, MovieTitle, MovieItem } from './MovieCard.styled';\nimport movieDefaultImg from '../../images/movie.webp';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nMovieCard.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  poster: PropTypes.string,\n}\n\nfunction MovieCard({ id, title, poster }) {\n  const location = useLocation();\n\n  return (\n    <MovieItem>\n      <MovieLink to={`/movie/${id}`} state={{ from: location }}>\n        <ImageWrapper>\n          <img src={poster ? poster : movieDefaultImg} alt={title} />\n        </ImageWrapper>\n        <MovieTitle>{title}</MovieTitle>\n      </MovieLink>\n    </MovieItem>\n  );\n}\n\nexport default MovieCard\n","import { MovieList } from './Movies.styled';\nimport MovieCard from '../MovieCard/MovieCard';\nimport PropTypes from 'prop-types';\n\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    poster: PropTypes.string,\n  })),\n}\n\nfunction Movies({ movies }) {\n\n  return (\n    <MovieList>\n      {movies.map(movie => (\n        <MovieCard key={movie.id} id={movie.id} poster={movie.poster} title={movie.title} />\n      ))}\n    </MovieList>\n\n  );\n}\n\nexport default Movies\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst ACCESS_KEY = 'fde4dd89a2c817f4c4efb19732e7d4a1';\nconst IMG_BASE_URL = 'http://image.tmdb.org/t/p/w500';\n\nexport async function fetchPopularMovies() {\n  const res = await axios.get('trending/movie/day', {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return filterMoviesData(res.data.results);\n}\n\nexport async function fetchMovieData(id) {\n  const res = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n  const { title, overview, poster_path, vote_average, genres } = res.data;\n\n  return {\n    title,\n    overview,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n    score: Math.floor(vote_average * 10),\n    genres,\n  };\n}\n\nexport async function fetchCastById(id) {\n  const res = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return res.data?.cast.map(({\n                               profile_path,\n                               name,\n                               character,\n                               gender,\n                               id,\n                             }) => ({\n    id,\n    photo: profile_path ? IMG_BASE_URL + profile_path : null,\n    name,\n    character,\n    gender,\n  }));\n}\n\nexport async function fetchReviewsById(id) {\n  const res = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return res.data?.results;\n}\n\nexport async function fetchMoviesByQuery(query) {\n  const res = await axios.get('search/movie', {\n    params: {\n      api_key: ACCESS_KEY,\n      query: query,\n    },\n  });\n\n  return filterMoviesData(res.data.results);\n}\n\nfunction filterMoviesData(movies) {\n  return movies.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n  }));\n}\n"],"names":["PageTitle","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","movies","setMovies","getData","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchPopularMovies","sent","stop","useEffect","err","console","log","_jsxs","_Fragment","children","_jsx","Movies","MovieList","MovieItem","MovieLink","NavLink","_templateObject2","ImageWrapper","_templateObject3","MovieTitle","_templateObject4","_ref","id","title","poster","location","useLocation","to","concat","state","from","src","movieDefaultImg","alt","map","movie","MovieCard","axios","ACCESS_KEY","IMG_BASE_URL","_fetchPopularMovies","apply","arguments","res","params","api_key","abrupt","filterMoviesData","results","fetchMovieData","_x","_fetchMovieData","_callee2","_res$data","overview","poster_path","vote_average","genres","_context2","score","Math","floor","fetchCastById","_x2","_fetchCastById","_callee3","_res$data2","_context3","cast","_ref2","profile_path","name","character","gender","photo","fetchReviewsById","_x3","_fetchReviewsById","_callee4","_res$data3","_context4","fetchMoviesByQuery","_x4","_fetchMoviesByQuery","_callee5","query","_context5"],"sourceRoot":""}