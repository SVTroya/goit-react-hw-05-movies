{"version":3,"file":"static/js/76.998aa0ee.chunk.js","mappings":"2LAKMA,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAoB,SAACC,GAAC,OAAKA,CAAC,EAC5BC,UAAU,EACVC,cAAe,UCNbC,GAAgBL,EAAAA,EAAAA,eAAc,CAAC,GCG/BM,GAAkBN,EAAAA,EAAAA,eAAc,MCLhCO,EAAgC,qBAAbC,SCGnBC,EAA4BF,EAAYG,EAAAA,gBAAkBC,EAAAA,UCD1DC,GAAcZ,EAAAA,EAAAA,eAAc,CAAEa,QAAQ,ICCtCC,EAAc,SAACC,GAAG,OAAKA,EAAIC,QAAQ,kBAAmB,SAASC,aAAa,ECA5EC,EAA+B,QAAUJ,EADjB,kBCF9B,SAASK,EAAYC,GACjB,MAAuB,kBAARA,GACXC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAK,UAClD,CCAA,SAASK,EAAeC,GACpB,MAAoB,kBAANA,GAAkBC,MAAMC,QAAQF,EAClD,CCLA,SAASG,EAAoBH,GACzB,MAAoB,kBAANA,GAAqC,oBAAZA,EAAEI,KAC7C,CCFA,IAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,WAASC,OAAKF,GCLpC,SAASG,EAAsBC,GAC3B,OAAQN,EAAoBM,EAAMC,UAC9BJ,EAAaK,MAAK,SAACC,GAAI,OAAKb,EAAeU,EAAMG,GAAM,GAC/D,CACA,SAASC,EAAcJ,GACnB,OAAOK,QAAQN,EAAsBC,IAAUA,EAAMM,SACzD,CCNA,SAASC,EAAuBP,GAC5B,IAAAQ,ECFJ,SAAgCR,EAAOS,GACnC,GAAIV,EAAsBC,GAAQ,CAC9B,IAAQU,EAAqBV,EAArBU,QAAST,EAAYD,EAAZC,QACjB,MAAO,CACHS,SAAqB,IAAZA,GAAqBpB,EAAeoB,GACvCA,OACAC,EACNV,QAASX,EAAeW,GAAWA,OAAUU,EAErD,CACA,OAAyB,IAAlBX,EAAMY,QAAoBH,EAAU,CAAC,CAChD,CDTiCI,CAAuBb,GAAOc,EAAAA,EAAAA,YAAW5C,IAA9DwC,EAAOF,EAAPE,QAAST,EAAOO,EAAPP,QACjB,OAAOc,EAAAA,EAAAA,UAAQ,iBAAO,CAAEL,QAAAA,EAAST,QAAAA,EAAS,GAAG,CAACe,EAA0BN,GAAUM,EAA0Bf,IAChH,CACA,SAASe,EAA0BC,GAC/B,OAAOzB,MAAMC,QAAQwB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,IAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAAEC,EAAA,SACnBC,GACPF,EAAmBE,GAAO,CACtBC,UAAW,SAAChC,GAAK,OAAKmB,EAAaY,GAAK7B,MAAK,SAACC,GAAI,QAAOH,EAAMG,EAAK,GAAC,EACvE,EAHN,IAAK,IAAM4B,KAAOZ,EAAcW,EAArBC,GCnBX,IAAME,GAAqBpE,EAAAA,EAAAA,eAAc,CAAC,GCGpCqE,GAA2BrE,EAAAA,EAAAA,eAAc,CAAC,GCL1CsE,EAAwBC,OAAOC,IAAI,yBCuBzC,SAASC,EAAqBC,GAAoF,IAAjFC,EAAiBD,EAAjBC,kBAAmBC,EAAmBF,EAAnBE,oBAAqBC,EAASH,EAATG,UAAWC,EAAcJ,EAAdI,eAAgBC,EAASL,EAATK,UAChGJ,GCtBJ,SAAsBK,GAClB,IAAK,IAAMd,KAAOc,EACdhB,EAAmBE,IAAIe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBjB,EAAmBE,IACnBc,EAASd,GAGxB,CDeyBgB,CAAaP,GA2ClC,IAAMQ,GAAsBC,EAAAA,EAAAA,aA1C5B,SAAyBjD,EAAOkD,GAK5B,IAAIC,EACEC,GAAcN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACbhC,EAAAA,EAAAA,YAAWlD,IACXoC,GAAK,IACRqD,SAAUC,EAAYtD,KAElBhC,EAAaoF,EAAbpF,SACFyC,EAAUF,EAAuBP,GACjCuD,EAAcZ,EAAe3C,EAAOhC,GAC1C,IAAKA,GAAYI,EAAW,CAOxBqC,EAAQ+C,cEtCpB,SAA0BZ,EAAWW,EAAavD,EAAOyC,GACrD,IAAuBgB,GAAW3C,EAAAA,EAAAA,YAAW5C,GAArCsF,cACFE,GAAc5C,EAAAA,EAAAA,YAAWrC,GACzBkF,GAAkB7C,EAAAA,EAAAA,YAAW3C,GAC7ByF,GAAsB9C,EAAAA,EAAAA,YAAWlD,GAAqBK,cACtD4F,GAAmBC,EAAAA,EAAAA,UAIzBrB,EAAsBA,GAAuBiB,EAAYK,UACpDF,EAAiBG,SAAWvB,IAC7BoB,EAAiBG,QAAUvB,EAAoBG,EAAW,CACtDW,YAAAA,EACAE,OAAAA,EACAzD,MAAAA,EACA2D,gBAAAA,EACAM,wBAAuBN,IACW,IAA5BA,EAAgBjD,QAEtBkD,oBAAAA,KAGR,IAAMJ,EAAgBK,EAAiBG,SACvCE,EAAAA,EAAAA,qBAAmB,WACfV,GAAiBA,EAAcW,OAAOnE,EAAO2D,EACjD,IAKA,IAAMS,GAAeN,EAAAA,EAAAA,QAAOzD,QAAQL,EAAMjB,KAAkCsF,OAAOC,kBAgCnF,OA/BAhG,GAA0B,WACjBkF,IAELA,EAAce,SAWVH,EAAaJ,SAAWR,EAAcgB,gBACtChB,EAAcgB,eAAeC,iBAErC,KACAjG,EAAAA,EAAAA,YAAU,WACDgF,IAELA,EAAckB,kBACTN,EAAaJ,SAAWR,EAAcgB,gBACvChB,EAAcgB,eAAeC,iBAE7BL,EAAaJ,UACbI,EAAaJ,SAAU,EAEvBK,OAAOC,iBAAkB,GAEjC,IACOd,CACX,CFzBoCmB,CAAiB/B,EAAWW,EAAaH,EAAgBX,GAKjF,IAAMmC,GAA2B9D,EAAAA,EAAAA,YAAWoB,GACtC2C,GAAW/D,EAAAA,EAAAA,YAAWrC,GAAaC,OACrC+B,EAAQ+C,gBACRL,EAAgB1C,EAAQ+C,cAAcT,aAEtCK,EAAgByB,EAAUrC,EAAmBoC,GAErD,CAKA,OAAQE,EAAAA,cAAoB5G,EAAc6G,SAAU,CAAEC,MAAOvE,GACzD0C,GAAiB1C,EAAQ+C,cAAiBsB,EAAAA,cAAoB3B,GAAaL,EAAAA,EAAAA,GAAA,CAAIU,cAAe/C,EAAQ+C,eAAkBJ,IAAqB,KAC7IV,EAAUE,EAAW5C,EG1DjC,SAAsBuD,EAAaC,EAAeN,GAC9C,OAAO+B,EAAAA,EAAAA,cAAY,SAACC,GAChBA,GAAY3B,EAAY4B,OAAS5B,EAAY4B,MAAMD,GAC/C1B,IACA0B,EACM1B,EAAc2B,MAAMD,GACpB1B,EAAc4B,WAEpBlC,IAC2B,oBAAhBA,EACPA,EAAYgC,GAEPlG,EAAYkE,KACjBA,EAAYc,QAAUkB,GAGlC,GAMA,CAAC1B,GACL,CHmCwC6B,CAAa9B,EAAa9C,EAAQ+C,cAAeN,GAAcK,EAAavF,EAAUyC,EAAQ+C,eAClI,IAGA,OADAR,EAAoBb,GAAyBS,EACtCI,CACX,CACA,SAASM,EAAWgC,GAAe,IAAZjC,EAAQiC,EAARjC,SACbkC,GAAgBzE,EAAAA,EAAAA,YAAWmB,GAAoBuD,GACrD,OAAOD,QAA8B5E,IAAb0C,EAClBkC,EAAgB,IAAMlC,EACtBA,CACV,CI5DA,SAASoC,EAAkBC,GACvB,SAASC,EAAO/C,GAA6C,IAAlCgD,EAA2BC,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtD,OAAOvD,EAAsBoD,EAAa9C,EAAWgD,GACzD,CACA,GAAqB,qBAAVG,MACP,OAAOJ,EAMX,IAAMK,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMJ,EAAQ,CAMrBO,IAAK,SAACC,EAASpE,GAOX,OAHKiE,EAAeI,IAAIrE,IACpBiE,EAAeK,IAAItE,EAAK4D,EAAO5D,IAE5BiE,EAAeE,IAAInE,EAC9B,GAER,CCxCA,IAAMuE,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAe3D,GACpB,MAKqB,kBAAdA,IAIHA,EAAU4D,SAAS,SAOvBF,EAAqBG,QAAQ7D,IAAc,GAIvC,QAAQ8D,KAAK9D,GAIrB,CC3BA,IAAM+D,EAAkB,CAAC,ECGzB,IAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoBhF,EAAGQ,GAAwB,IAApBX,EAAMW,EAANX,OAAQyB,EAAQd,EAARc,SACxC,OAAQwD,EAAeT,IAAIrE,IACvBA,EAAIiF,WAAW,YACbpF,QAAuBjB,IAAb0C,OACLsD,EAAgB5E,IAAgB,YAARA,EACvC,CCRA,IAAMkF,EAAgB,SAACjC,GAAK,OAAK3E,QAAQ2E,GAASA,EAAMkC,YAAY,ECE9DC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBZ,EAAmBd,OCRzC,IAAM2B,EAAwB,SAACC,GAAK,OAAK,SAAC3F,GAAG,MAAoB,kBAARA,GAAoBA,EAAIiF,WAAWU,EAAM,GAC5FC,EAAoBF,EAAsB,MAC1CG,EAAqBH,EAAsB,UCC3CI,EAAiB,SAAC7C,EAAO8C,GAC3B,OAAOA,GAAyB,kBAAV9C,EAChB8C,EAAKC,UAAU/C,GACfA,CACV,ECPMgD,EAAQ,SAACC,EAAKC,EAAK3I,GAAC,OAAK4I,KAAKF,IAAIE,KAAKD,IAAI3I,EAAG0I,GAAMC,EAAI,ECExDE,EAAS,CACX1B,KAAM,SAACnH,GAAC,MAAkB,kBAANA,CAAc,EAClC8I,MAAOC,WACPP,UAAW,SAACxI,GAAC,OAAKA,CAAC,GAEjBgJ,GAAKzF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJsF,GAAM,IACTL,UAAW,SAACxI,GAAC,OAAKyI,EAAM,EAAG,EAAGzI,EAAE,IAE9BiJ,GAAK1F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJsF,GAAM,IACTK,QAAS,ICPPC,EAAW,SAACnJ,GAAC,OAAK4I,KAAKQ,MAAU,IAAJpJ,GAAc,GAAM,EACjDqJ,EAAa,uBACbC,EAAa,8FACbC,EAAmB,+FACzB,SAASC,EAASxJ,GACd,MAAoB,kBAANA,CAClB,CCVA,IAAMyJ,GAAiB,SAACC,GAAI,MAAM,CAC9BvC,KAAM,SAACnH,GAAC,OAAKwJ,EAASxJ,IAAMA,EAAE2J,SAASD,IAAiC,IAAxB1J,EAAE4J,MAAM,KAAKrD,MAAY,EACzEuC,MAAOC,WACPP,UAAW,SAACxI,GAAC,SAAAO,OAAQP,GAACO,OAAGmJ,EAAI,EAChC,EACKG,GAAUJ,GAAe,OACzBK,GAAUL,GAAe,KACzBM,GAAKN,GAAe,MACpBO,GAAKP,GAAe,MACpBQ,GAAKR,GAAe,MACpBS,IAAkB3G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjBuG,IAAO,IACVhB,MAAO,SAAC9I,GAAC,OAAK8J,GAAQhB,MAAM9I,GAAK,GAAG,EACpCwI,UAAW,SAACxI,GAAC,OAAK8J,GAAQtB,UAAc,IAAJxI,EAAQ,ICb1CmK,IAAG5G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACFsF,GAAM,IACTL,UAAWI,KAAKQ,QCAdgB,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBW,aAAcX,GACdY,OAAQZ,GACRa,oBAAqBb,GACrBc,qBAAsBd,GACtBe,wBAAyBf,GACzBgB,uBAAwBhB,GAExBiB,MAAOjB,GACPkB,SAAUlB,GACVmB,OAAQnB,GACRoB,UAAWpB,GACXqB,KAAMrB,GACNsB,IAAKtB,GACLuB,MAAOvB,GACPwB,OAAQxB,GACRyB,KAAMzB,GAEN0B,QAAS1B,GACT2B,WAAY3B,GACZ4B,aAAc5B,GACd6B,cAAe7B,GACf8B,YAAa9B,GACb+B,OAAQ/B,GACRgC,UAAWhC,GACXiC,YAAajC,GACbkC,aAAclC,GACdmC,WAAYnC,GAEZoC,OAAQtC,GACRuC,QAASvC,GACTwC,QAASxC,GACTyC,QAASzC,GACTZ,MAAAA,EACAsD,OAAQtD,EACRuD,OAAQvD,EACRwD,OAAQxD,EACRyD,KAAM7C,GACN8C,MAAO9C,GACP+C,MAAO/C,GACPgD,SAAU9C,GACV+C,WAAY/C,GACZgD,WAAYhD,GACZiD,WAAYjD,GACZlC,EAAGkC,GACHjC,EAAGiC,GACHhC,EAAGgC,GACHkD,YAAalD,GACb/B,qBAAsB+B,GACtBmD,QAASlE,EACTmE,QAASjD,GACTkD,QAASlD,GACTmD,QAAStD,GAETuD,OAAQnD,GAERoD,YAAavE,EACbwE,cAAexE,EACfyE,WAAYtD,IC9DhB,SAASuD,GAAgBC,EAAOC,EAAcC,EAASC,GACnD,IAAQC,EAA4CJ,EAA5CI,MAAOC,EAAqCL,EAArCK,KAAMxF,EAA+BmF,EAA/BnF,UAAWyF,EAAoBN,EAApBM,gBAE5BC,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,IAAM5L,KAAOoL,EAAc,CAC5B,IAAMnI,EAAQmI,EAAapL,GAI3B,GAAI4F,EAAkB5F,GAClBwL,EAAKxL,GAAOiD,MADhB,CAKA,IAAM4I,EAAYjE,GAAiB5H,GAC7B8L,EAAchG,EAAe7C,EAAO4I,GAC1C,GAAI/G,EAAeT,IAAIrE,GAAM,CAKzB,GAHA0L,GAAe,EACf1F,EAAUhG,GAAO8L,GAEZF,EACD,SAEA3I,KAAW4I,EAAUnF,SAAW,KAChCkF,GAAkB,EAC1B,MACS5L,EAAIiF,WAAW,WAEpB0G,GAAqB,EACrBF,EAAgBzL,GAAO8L,GAGvBP,EAAMvL,GAAO8L,CArBjB,CAuBJ,CAiBA,GAhBKV,EAAapF,YACV0F,GAAgBJ,EAChBC,EAAMvF,UTtClB,SAAwBA,EAASxF,EAAqEuL,EAAoBT,GAOtH,IAPyI,IAAAU,EAAAxL,EAAxGyL,2BAAAA,OAA0B,IAAAD,GAAOA,EAAAE,EAAA1L,EAAE2L,mBAAAA,OAAkB,IAAAD,GAAOA,EAEzFE,EAAkB,GAKbC,EAAI,EAAGA,EAAI5G,EAAe4G,IAAK,CACpC,IAAMrM,EAAM6E,EAAmBwH,QACRzN,IAAnBoH,EAAUhG,KAEVoM,GAAmB,GAAJrO,OADOqH,EAAepF,IAAQA,EACV,KAAAjC,OAAIiI,EAAUhG,GAAI,MAE7D,CAaA,OAZIiM,IAA+BjG,EAAUT,IACzC6G,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9BhB,EACAc,EAAkBd,EAAkBtF,EAAW+F,EAAqB,GAAKK,GAEpED,GAAsBJ,IAC3BK,EAAkB,QAEfA,CACX,CSW8BG,CAAepB,EAAMnF,UAAWqF,EAASO,EAAiBN,GAEvEC,EAAMvF,YAKXuF,EAAMvF,UAAY,SAOtB2F,EAAoB,CACpB,IAAAa,EAA2Df,EAAnDd,QAAAA,OAAO,IAAA6B,EAAG,MAAKA,EAAAC,EAAoChB,EAAlCb,QAAAA,OAAO,IAAA6B,EAAG,MAAKA,EAAAC,EAAmBjB,EAAjBZ,QAAAA,OAAO,IAAA6B,EAAG,EAACA,EACrDnB,EAAME,gBAAkB,GAAH1N,OAAM4M,EAAO,KAAA5M,OAAI6M,EAAO,KAAA7M,OAAI8M,EACrD,CACJ,CCvEA,IAAM8B,GAAwB,WAAH,MAAU,CACjCpB,MAAO,CAAC,EACRvF,UAAW,CAAC,EACZyF,gBAAiB,CAAC,EAClBD,KAAM,CAAC,EACV,ECCD,SAASoB,GAAkBC,EAAQC,EAAQ7O,GACvC,IAAK,IAAM+B,KAAO8M,EACT5H,EAAc4H,EAAO9M,KAAUgF,EAAoBhF,EAAK/B,KACzD4O,EAAO7M,GAAO8M,EAAO9M,GAGjC,CAQA,SAAS+M,GAAS9O,EAAOuD,EAAavF,GAClC,IACMsP,EAAQ,CAAC,EAMf,OAFAqB,GAAkBrB,EALAtN,EAAMsN,OAAS,CAAC,EAKEtN,GACpCd,OAAO6P,OAAOzB,EAdlB,SAA+B/K,EAAwBgB,EAAavF,GAAU,IAA5CqP,EAAiB9K,EAAjB8K,kBAC9B,OAAOtM,EAAAA,EAAAA,UAAQ,WACX,IAAMmM,EDfuB,CACjCI,MAAO,CAAC,EACRvF,UAAW,CAAC,EACZyF,gBAAiB,CAAC,EAClBD,KAAM,CAAC,GCaH,OADAN,GAAgBC,EAAO3J,EAAa,CAAEyK,4BAA6BhQ,GAAYqP,GACxEnO,OAAO6P,OAAO,CAAC,EAAG7B,EAAMK,KAAML,EAAMI,MAC/C,GAAG,CAAC/J,GACR,CAQyByL,CAAuBhP,EAAOuD,EAAavF,IACzDgC,EAAMiP,gBAAkBjP,EAAMiP,gBAAgB3B,GAASA,CAClE,CACA,SAAS4B,GAAalP,EAAOuD,EAAavF,GAEtC,IAAMmR,EAAY,CAAC,EACb7B,EAAQwB,GAAS9O,EAAOuD,EAAavF,GAoB3C,OAnBIgC,EAAMsB,OAA+B,IAAvBtB,EAAMoP,eAEpBD,EAAUE,WAAY,EAEtB/B,EAAMgC,WACFhC,EAAMiC,iBACFjC,EAAMkC,mBACF,OAEZlC,EAAMmC,aACa,IAAfzP,EAAMsB,KACA,OAAM,OAAAxB,OACgB,MAAfE,EAAMsB,KAAe,IAAM,WAEzBX,IAAnBX,EAAM0P,WACL1P,EAAM2P,OAAS3P,EAAM4P,YAAc5P,EAAM6P,YAC1CV,EAAUO,SAAW,GAEzBP,EAAU7B,MAAQA,EACX6B,CACX,CChDA,IAAMW,GAAmB,IAAIhJ,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,eACA,aAUJ,SAASiJ,GAAkBhO,GACvB,OAAQA,EAAIiF,WAAW,UAClBjF,EAAIiF,WAAW,SAAmB,cAARjF,GAC3BA,EAAIiF,WAAW,WACfjF,EAAIiF,WAAW,UACfjF,EAAIiF,WAAW,UACf8I,GAAiB1J,IAAIrE,EAC7B,CCtDA,IACiCiO,GAD7BC,GAAgB,SAAClO,GAAG,OAAMgO,GAAkBhO,EAAI,EAoBpD,KAnBiCiO,GAyBLE,QAAQ,0BAA0BzH,WArB1DwH,GAAgB,SAAClO,GAAG,OAAKA,EAAIiF,WAAW,OAAS+I,GAAkBhO,GAAOiO,GAAYjO,EAAI,EAwB1F,CADJ,MAAOoO,IACH,CAEJ,SAASC,GAAYpQ,EAAOqQ,EAAOC,GAC/B,IAAMC,EAAgB,CAAC,EACvB,IAAK,IAAMxO,KAAO/B,EAQF,WAAR+B,GAA4C,kBAAjB/B,EAAMwQ,SAEjCP,GAAclO,KACU,IAAvBuO,GAA+BP,GAAkBhO,KAChDsO,IAAUN,GAAkBhO,IAE7B/B,EAAiB,WAAK+B,EAAIiF,WAAW,aACtCuJ,EAAcxO,GAAO/B,EAAM+B,IAGnC,OAAOwO,CACX,CCrDe,SAASE,GAAyB5B,EAAQ6B,GACvD,GAAc,MAAV7B,EAAgB,MAAO,CAAC,EAC5B,IACI9M,EAAKqM,EADLQ,ECHS,SAAuCC,EAAQ6B,GAC5D,GAAc,MAAV7B,EAAgB,MAAO,CAAC,EAC5B,IAEI9M,EAAKqM,EAFLQ,EAAS,CAAC,EACV+B,EAAazR,OAAO0R,KAAK/B,GAG7B,IAAKT,EAAI,EAAGA,EAAIuC,EAAW7K,OAAQsI,IACjCrM,EAAM4O,EAAWvC,GACbsC,EAASjK,QAAQ1E,IAAQ,IAC7B6M,EAAO7M,GAAO8M,EAAO9M,IAGvB,OAAO6M,CACT,CDVe,CAA6BC,EAAQ6B,GAGlD,GAAIxR,OAAO2R,sBAAuB,CAChC,IAAIC,EAAmB5R,OAAO2R,sBAAsBhC,GAEpD,IAAKT,EAAI,EAAGA,EAAI0C,EAAiBhL,OAAQsI,IACvCrM,EAAM+O,EAAiB1C,GACnBsC,EAASjK,QAAQ1E,IAAQ,GACxB7C,OAAOC,UAAU4R,qBAAqB1R,KAAKwP,EAAQ9M,KACxD6M,EAAO7M,GAAO8M,EAAO9M,GAEzB,CAEA,OAAO6M,CACT,CEhBA,SAASoC,GAAWC,EAAQC,EAAQvG,GAChC,MAAyB,kBAAXsG,EACRA,EACA3H,GAAGvB,UAAUmJ,EAASvG,EAAOsG,EACvC,CCJA,IAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mB,iGCDX,SAASE,GAAcpE,EAAK3K,EAEf6K,EAASmE,EAAUlE,GAAmB,IAFnBmE,EAAKjP,EAALiP,MAAOC,EAAKlP,EAALkP,MAAOC,EAASnP,EAATmP,UAAWhF,EAAOnK,EAAPmK,QAASC,EAAOpK,EAAPoK,QAASgF,EAAUpP,EAAVoP,WAAUC,EAAArP,EAAEsP,YAAAA,OAAW,IAAAD,EAAG,EAACA,EAAAE,EAAAvP,EAAEwP,WAAAA,OAAU,IAAAD,EAAG,EAACA,EAQlH,GALA7E,GAAgBC,EADXuD,GAAAlO,EAAAyP,IAC0B5E,EAASC,GAKpCkE,EACIrE,EAAMI,MAAM2E,UACZ/E,EAAMgF,MAAMD,QAAU/E,EAAMI,MAAM2E,aAF1C,CAMA/E,EAAMgF,MAAQhF,EAAMI,MACpBJ,EAAMI,MAAQ,CAAC,EACf,IAAQ4E,EAA6BhF,EAA7BgF,MAAO5E,EAAsBJ,EAAtBI,MAAO6E,EAAejF,EAAfiF,WAKlBD,EAAMnK,YACFoK,IACA7E,EAAMvF,UAAYmK,EAAMnK,kBACrBmK,EAAMnK,WAGboK,SACaxR,IAAZ+L,QAAqC/L,IAAZgM,GAAyBW,EAAMvF,aACzDuF,EAAME,gBFzBd,SAAgC2E,EAAYzF,EAASC,GACjD,IAAMyF,EAAYpB,GAAWtE,EAASyF,EAAW/K,EAAG+K,EAAW5H,OACzD8H,EAAYrB,GAAWrE,EAASwF,EAAW9K,EAAG8K,EAAW1H,QAC/D,MAAO,GAAP3K,OAAUsS,EAAS,KAAAtS,OAAIuS,EAC3B,CEqBgCC,CAAuBH,OAAwBxR,IAAZ+L,EAAwBA,EAAU,QAAiB/L,IAAZgM,EAAwBA,EAAU,UAG1HhM,IAAV6Q,IACAU,EAAM9K,EAAIoK,QACA7Q,IAAV8Q,IACAS,EAAM7K,EAAIoK,QACI9Q,IAAd+Q,IACAQ,EAAM1J,MAAQkJ,QAEC/Q,IAAfgR,GD7BR,SAAsBO,EAAOpM,GAAqD,IAA7CyM,EAAO1M,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAAGqL,EAAMrL,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAAG2M,IAAW3M,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,KAAAA,UAAA,GAErEqM,EAAMP,WAAa,EAGnB,IAAMf,EAAO4B,EAAcrB,GAAWE,GAEtCa,EAAMtB,EAAKM,QAAU5H,GAAGvB,WAAWmJ,GAEnC,IAAMS,EAAarI,GAAGvB,UAAUjC,GAC1B+L,EAAcvI,GAAGvB,UAAUwK,GACjCL,EAAMtB,EAAKQ,OAAS,GAAHtR,OAAM6R,EAAU,KAAA7R,OAAI+R,EACzC,CCkBQY,CAAaP,EAAOP,EAAYE,EAAaE,GAAY,EA3B7D,CA6BJ,CC/CA,IAAMW,GAAuB,WAAH,OAAA5P,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GTFW,CACjCwK,MAAO,CAAC,EACRvF,UAAW,CAAC,EACZyF,gBAAiB,CAAC,EAClBD,KAAM,CAAC,ISDmB,IAC1B2E,MAAO,CAAC,GAAC,ECJPX,GAAW,SAACoB,GAAG,MAAoB,kBAARA,GAA0C,QAAtBA,EAAI7T,aAAuB,ECMhF,SAAS8T,GAAY5S,EAAOuD,EAAasP,EAAWjQ,GAChD,IAAMkQ,GAAc/R,EAAAA,EAAAA,UAAQ,WACxB,IAAMmM,EAAQwF,KAEd,OADApB,GAAcpE,EAAO3J,EAAa,CAAEyK,4BAA4B,GAASuD,GAAS3O,GAAY5C,EAAMqN,oBACpGvK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOoK,EAAMgF,OAAK,IACd5E,OAAKxK,EAAAA,EAAAA,GAAA,GAAOoK,EAAMI,QAE1B,GAAG,CAAC/J,IACJ,GAAIvD,EAAMsN,MAAO,CACb,IAAMyF,EAAY,CAAC,EACnBpE,GAAkBoE,EAAW/S,EAAMsN,MAAOtN,GAC1C8S,EAAYxF,OAAKxK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQiQ,GAAcD,EAAYxF,MACvD,CACA,OAAOwF,CACX,CCdA,SAASE,KAA4C,IAA5B1C,EAAkBzK,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,IAAAA,UAAA,GACjCnD,EAAY,SAACE,EAAW5C,EAAOf,EAAGsD,EAAoBvE,GAAa,IAA7BmP,EAAY5K,EAAZ4K,aAIlC2F,GAHiBvM,EAAe3D,GAChCgQ,GACA1D,IAC6BlP,EAAOmN,EAAcnP,EAAU4E,GAC5D2N,EAAgBH,GAAYpQ,EAA4B,kBAAd4C,EAAwB0N,GAClE2C,GAAYnQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXyN,GACAuC,GAAW,IACd7T,IAAAA,IAOIiU,EAAalT,EAAbkT,SACFC,GAAmBpS,EAAAA,EAAAA,UAAQ,kBAAOkG,EAAciM,GAAYA,EAAShN,MAAQgN,CAAQ,GAAG,CAACA,IAC/F,OAAOE,EAAAA,EAAAA,eAAcxQ,GAASE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvBmQ,GAAY,IACfC,SAAUC,IAElB,EACA,OAAOzQ,CACX,CChCA,SAAS2Q,GAAWC,EAAO/Q,EAAmBgR,EAAWC,GAAY,IAAtClG,EAAK/K,EAAL+K,MAAOC,EAAIhL,EAAJgL,KAGlC,IAAK,IAAMxL,KAFX7C,OAAO6P,OAAOuE,EAAQhG,MAAOA,EAAOkG,GAAcA,EAAWC,oBAAoBF,IAE/DhG,EACd+F,EAAQhG,MAAMoG,YAAY3R,EAAKwL,EAAKxL,GAE5C,CCHA,IAAM4R,GAAsB,IAAI7M,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS8M,GAAUN,EAASO,EAAaC,EAAYN,GAEjD,IAAK,IAAMzR,KADXsR,GAAWC,EAASO,OAAalT,EAAW6S,GAC1BK,EAAY3B,MAC1BoB,EAAQS,aAAcJ,GAAoBvN,IAAIrE,GAA0BA,EAAnBpD,EAAYoD,GAAY8R,EAAY3B,MAAMnQ,GAEvG,CCNA,SAASiS,GAA4BhU,EAAOiU,GACxC,IAAQ3G,EAAUtN,EAAVsN,MACF4G,EAAY,CAAC,EACnB,IAAK,IAAMnS,KAAOuL,GACVrG,EAAcqG,EAAMvL,KACnBkS,EAAU3G,OAASrG,EAAcgN,EAAU3G,MAAMvL,KAClDgF,EAAoBhF,EAAK/B,MACzBkU,EAAUnS,GAAOuL,EAAMvL,IAG/B,OAAOmS,CACX,CCVA,SAASF,GAA4BhU,EAAOiU,GACxC,IAAMC,EAAYC,GAA8BnU,EAAOiU,GACvD,IAAK,IAAMlS,KAAO/B,EAAO,CACrB,GAAIiH,EAAcjH,EAAM+B,KAASkF,EAAcgN,EAAUlS,IAIrDmS,GAHuD,IAArCtN,EAAmBH,QAAQ1E,GACvC,OAASA,EAAIqS,OAAO,GAAGC,cAAgBtS,EAAIuS,UAAU,GACrDvS,GACiB/B,EAAM+B,EAErC,CACA,OAAOmS,CACX,CCfA,SAASK,GAAwBvU,EAAOwU,EAAY7O,GAAkD,IAA1C8O,EAAa5O,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG6O,EAAe7O,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAsB/F,MAlB0B,oBAAf2O,IACPA,EAAaA,OAAsB7T,IAAXgF,EAAuBA,EAAS3F,EAAM2F,OAAQ8O,EAAeC,IAM/D,kBAAfF,IACPA,EAAaxU,EAAMM,UAAYN,EAAMM,SAASkU,IAOxB,oBAAfA,IACPA,EAAaA,OAAsB7T,IAAXgF,EAAuBA,EAAS3F,EAAM2F,OAAQ8O,EAAeC,IAElFF,CACX,CCvBA,IAAMG,GAAoB,SAACpV,GACvB,OAAOC,MAAMC,QAAQF,EACzB,ECMA,SAASqV,GAAmB5P,GACxB,ICPmBzF,EDObsV,EAAiB5N,EAAcjC,GAASA,EAAMkB,MAAQlB,EAC5D,OCRmBzF,EDQEsV,ECPdxU,QAAQd,GAAkB,kBAANA,GAAkBA,EAAEuV,KAAOvV,EAAEwV,SDQlDF,EAAeE,UACfF,CACV,C,sCEMA,IAAMG,GAAqB,SAACC,GAAM,OAAK,SAACjV,EAAOhC,GAC3C,IAAMyC,GAAUK,EAAAA,EAAAA,YAAW5C,GACrByF,GAAkB7C,EAAAA,EAAAA,YAAW3C,GAC7B+W,EAAO,WAAH,OAbd,SAAkB3S,EAA+DvC,EAAOS,EAASkD,GAAiB,IAA7FqQ,EAA2BzR,EAA3ByR,4BAA6BmB,EAAiB5S,EAAjB4S,kBAAmBC,EAAO7S,EAAP6S,QAC3DlI,EAAQ,CACVC,aAAckI,GAAiBrV,EAAOS,EAASkD,EAAiBqQ,GAChEH,YAAasB,KAKjB,OAHIC,IACAlI,EAAM/H,MAAQ,SAACD,GAAQ,OAAKkQ,EAAQpV,EAAOkF,EAAUgI,EAAM,GAExDA,CACX,CAIuBoI,CAAUL,EAAQjV,EAAOS,EAASkD,EAAgB,EACrE,OAAO3F,EAAWkX,ICdtB,SAAqBK,GACjB,IAAMtW,GAAM6E,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhB7E,EAAI+E,UACJ/E,EAAI+E,QAAUuR,KAEXtW,EAAI+E,OACf,CDQ+BwR,CAAYN,EAC3C,CAAC,EACD,SAASG,GAAiBrV,EAAOS,EAASkD,EAAiB8R,GACvD,IAAMjF,EAAS,CAAC,EACVkF,EAAeD,EAAmBzV,EAAO,CAAC,GAChD,IAAK,IAAM+B,KAAO2T,EACdlF,EAAOzO,GAAO6S,GAAmBc,EAAa3T,IAElD,IAAMrB,EAAqBV,EAArBU,QAAST,EAAYD,EAAZC,QACT0V,EAA0B5V,EAAsBC,GAChD4V,EAAkBxV,EAAcJ,GAClCS,GACAmV,IACCD,IACiB,IAAlB3V,EAAMY,eACUD,IAAZD,IACAA,EAAUD,EAAQC,cACNC,IAAZV,IACAA,EAAUQ,EAAQR,UAE1B,IAAI4V,IAA4BlS,IACE,IAA5BA,EAAgBjD,QAGhBoV,GADND,EAA4BA,IAAyC,IAAZnV,GACRT,EAAUS,EACvDoV,GACwB,mBAAjBA,IACNpW,EAAoBoW,KACRtW,MAAMC,QAAQqW,GAAgBA,EAAe,CAACA,IACtDC,SAAQ,SAACvB,GACV,IAAMwB,EAAWzB,GAAwBvU,EAAOwU,GAChD,GAAKwB,EAAL,CAEA,IAAQC,EAAyCD,EAAzCC,cAA8BrH,GAAWoH,EAA1BE,WAAqBzF,GAAKuF,EAAQhE,KACzD,IAAK,IAAMjQ,KAAO6M,EAAQ,CACtB,IAAIuH,EAAcvH,EAAO7M,GACzB,GAAIvC,MAAMC,QAAQ0W,GAQdA,EAAcA,EAHAN,EACRM,EAAYrQ,OAAS,EACrB,GAGU,OAAhBqQ,IACA3F,EAAOzO,GAAOoU,EAEtB,CACA,IAAK,IAAMpU,KAAOkU,EACdzF,EAAOzO,GAAOkU,EAAclU,EAnBtB,CAoBd,IAEJ,OAAOyO,CACX,CE9EA,IAAM4F,GAAO,SAACC,GAAG,OAAKA,CAAG,E,oBCAnBC,GAAK,WACP,SAAAA,KAAcC,EAAAA,GAAAA,GAAA,KAAAD,GACVE,KAAKC,MAAQ,GACbD,KAAKE,UAAY,IAAI5P,GACzB,CAkBC,OAlBA6P,EAAAA,GAAAA,GAAAL,EAAA,EAAAvU,IAAA,MAAAiD,MACD,SAAI4R,GACA,IAAKJ,KAAKE,UAAUtQ,IAAIwQ,GAGpB,OAFAJ,KAAKE,UAAUG,IAAID,GACnBJ,KAAKC,MAAMK,KAAKF,IACT,CAEf,GAAC,CAAA7U,IAAA,SAAAiD,MACD,SAAO4R,GACH,IAAMG,EAAQP,KAAKC,MAAMhQ,QAAQmQ,IAClB,IAAXG,IACAP,KAAKC,MAAMO,OAAOD,EAAO,GACzBP,KAAKE,UAAUO,OAAOL,GAE9B,GAAC,CAAA7U,IAAA,QAAAiD,MACD,WACIwR,KAAKC,MAAM3Q,OAAS,EACpB0Q,KAAKE,UAAUQ,OACnB,KAACZ,CAAA,CAtBM,GCEX,IAAMa,GAAa,CACf,UACA,OACA,SACA,YACA,SACA,cCLJ,IAAAC,GDQA,SAA6BC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EAClBtK,EAAQ,CACVuK,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZC,EAAQT,GAAWU,QAAO,SAACC,EAAK/V,GAElC,OADA+V,EAAI/V,GDIZ,SAA0BwV,GAKtB,IAAIQ,EAAY,IAAIzB,GAChB0B,EAAY,IAAI1B,GAChB2B,EAAW,EAKXN,GAAe,EACfO,GAAiB,EAIfC,EAAc,IAAIC,QAClBC,EAAO,CAITC,SAAU,SAACC,GAAmD,IACpDC,EADuC3S,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,IAAAA,UAAA,IACN8R,EACjCc,EAAQD,EAAoBT,EAAYC,EAO9C,OAT0BnS,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,IAAAA,UAAA,IAItBsS,EAAYtB,IAAI0B,GAChBE,EAAM5B,IAAI0B,IAAaC,GAAqBb,IAE5CM,EAAWF,EAAUtB,MAAM3Q,QAExByS,CACX,EAIAG,OAAQ,SAACH,GACLP,EAAUW,OAAOJ,GACjBJ,EAAYlB,OAAOsB,EACvB,EAIA3B,QAAS,SAACgC,GAMN,GAAIjB,EACAO,GAAiB,MADrB,CAIAP,GAAe,EAEf,IAAApV,EADyB,CAACyV,EAAWD,GAKrC,GALCA,EAASxV,EAAA,IAAEyV,EAASzV,EAAA,IAEX2U,QAEVe,EAAWF,EAAUtB,MAAM3Q,OAEvB,IAAK,IAAIsI,EAAI,EAAGA,EAAI6J,EAAU7J,IAAK,CAC/B,IAAMmK,EAAWR,EAAUtB,MAAMrI,GACjCmK,EAASK,GACLT,EAAY/R,IAAImS,KAChBF,EAAKC,SAASC,GACdhB,IAER,CAEJI,GAAe,EACXO,IACAA,GAAiB,EACjBG,EAAKzB,QAAQgC,GApBjB,CAsBJ,GAEJ,OAAOP,CACX,CCjFmBQ,EAAiB,kBAAOtB,GAAe,CAAI,IAC/CO,CACX,GAAG,CAAC,GACEgB,EAAc,SAACC,GAAM,OAAKnB,EAAMmB,GAAQnC,QAAQ1J,EAAM,EACtD8L,EAAe,SAAfA,IACF,IAAMtB,EAAYuB,YAAYC,MAC9B3B,GAAe,EACfrK,EAAMuK,MAAQD,EACR,IAAO,GACPrP,KAAKD,IAAIC,KAAKF,IAAIyP,EAAYxK,EAAMwK,UAnB/B,IAmBuD,GAClExK,EAAMwK,UAAYA,EAClBxK,EAAMyK,cAAe,EACrBR,GAAWpB,QAAQ+C,GACnB5L,EAAMyK,cAAe,EACjBJ,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkB2B,GAE1B,EACMG,EAAO,WACT5B,GAAe,EACfC,GAAoB,EACftK,EAAMyK,cACPN,EAAkB2B,EAE1B,EACMV,EAAWnB,GAAWU,QAAO,SAACC,EAAK/V,GACrC,IAAMsW,EAAOT,EAAM7V,GAMnB,OALA+V,EAAI/V,GAAO,SAAC6U,GAAkD,IAAzCwC,EAASvT,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,IAAAA,UAAA,GAAUwT,EAASxT,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,IAAAA,UAAA,GAG7C,OAFK0R,GACD4B,IACGd,EAAKC,SAAS1B,EAASwC,EAAWC,EAC7C,EACOvB,CACX,GAAG,CAAC,GAEJ,MAAO,CAAEQ,SAAAA,EAAUI,OADJ,SAAC9B,GAAO,OAAKO,GAAWpB,SAAQ,SAAChU,GAAG,OAAK6V,EAAM7V,GAAK2W,OAAO9B,EAAQ,GAAC,EACxD1J,MAAAA,EAAO0K,MAAAA,EACtC,CCtD2E0B,CAAqD,qBAA1BC,sBAAwCA,sBAAwBnD,IAAM,GAA1JoD,GAAKpC,GAAfkB,SAAyBmB,GAAWrC,GAAnBsB,OAA4BE,GAASxB,GAAhBlK,MAAkB0K,GAAKR,GAALQ,MCK1D8B,GAAkB,CACpB/W,eAAgBqS,GAAmB,CAC/BhB,4BAA6BA,GAC7BmB,kBAAmBzC,GACnB0C,QAAS,SAACpV,EAAOkF,EAAQ3C,GAAoC,IAAhCsR,EAAWtR,EAAXsR,YAAa1G,EAAY5K,EAAZ4K,aACtCqM,GAAAA,MAAW,WACP,IACI3F,EAAY1B,WAEJ,oBADGjN,EAASyU,QAEVzU,EAASyU,UACTzU,EAAS0U,uBAUvB,CARA,MAAOC,GAEHhG,EAAY1B,WAAa,CACrB/K,EAAG,EACHC,EAAG,EACHkD,MAAO,EACPE,OAAQ,EAEhB,CACJ,IACA+O,GAAAA,QAAa,WACTlI,GAAcuC,EAAa1G,EAAc,CAAEa,4BAA4B,GAASuD,GAASrM,EAAS4U,SAAU9Z,EAAMqN,mBAClHuG,GAAU1O,EAAU2O,EACxB,GACJ,KC/BFkG,GAAmB,CACrBpX,eAAgBqS,GAAmB,CAC/BhB,4BAAAA,GACAmB,kBAAmBzG,M,wBCP3B,SAASsL,GAAYpL,EAAQqL,EAAWC,GAAsC,IAA7B9M,EAAOvH,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,CAAEsU,SAAS,GAElE,OADAvL,EAAOwL,iBAAiBH,EAAWC,EAAS9M,GACrC,kBAAMwB,EAAOyL,oBAAoBJ,EAAWC,EAAQ,CAC/D,CCHA,IAAMI,GAAmB,SAACC,GACtB,MAA0B,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,SAErB,ECbA,SAASC,GAAiBJ,GAA2B,IAApBK,EAAS/U,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,OACzC,MAAO,CACHgV,MAAO,CACHzT,EAAGmT,EAAMK,EAAY,KACrBvT,EAAGkT,EAAMK,EAAY,MAGjC,CCNA,SAASE,GAAgBlM,EAAQqL,EAAWC,EAAS9M,GACjD,OAAO4M,GAAYpL,EAAQqL,EDMR,SAACC,GACpB,OAAO,SAACK,GAAK,OAAKD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,GAAO,CACxF,CCR0CQ,CAAeb,GAAU9M,EACnE,CCEA,IAAM4N,GAAmB,SAACC,EAAGC,GAAC,OAAK,SAAC3b,GAAC,OAAK2b,EAAED,EAAE1b,GAAG,GAC3C4b,GAAO,WAAH,QAAAC,EAAAvV,UAAAC,OAAOuV,EAAY,IAAA7b,MAAA4b,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,GAAAzV,UAAAyV,GAAA,OAAKD,EAAaxD,OAAOmD,GAAiB,ECRvE,SAASO,GAAWpb,GAChB,IAAIqb,EAAO,KACX,OAAO,WAIH,OAAa,OAATA,IACAA,EAAOrb,EAJM,WACbqb,EAAO,IACX,EAMJ,CACJ,CACA,IAAMC,GAAuBF,GAAW,kBAClCG,GAAqBH,GAAW,gBACtC,SAASI,GAAcra,GACnB,IAAIka,GAAO,EACX,GAAa,MAATla,EACAka,EAAOE,UAEN,GAAa,MAATpa,EACLka,EAAOC,SAEN,CACD,IAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBL,EAAO,WACHI,IACAC,GACJ,GAIID,GACAA,IACAC,GACAA,IAEZ,CACA,OAAOL,CACX,CACA,SAASM,KAGL,IAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,C,IClDMC,GAAO,WACT,SAAAA,EAAYC,IAAM1F,EAAAA,GAAAA,GAAA,KAAAyF,GACdxF,KAAK0F,WAAY,EACjB1F,KAAKyF,KAAOA,CAChB,CACY,OADXtF,EAAAA,GAAAA,GAAAqF,EAAA,EAAAja,IAAA,SAAAiD,MACD,WAAW,KAACgX,CAAA,CALH,GCMb,SAASG,GAAcF,EAAMG,GACzB,IAAMnC,EAAY,WAAamC,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOtB,GAAgBmB,EAAKjY,QAASiW,GAXjB,SAACM,EAAO+B,GACxB,GAAmB,UAAf/B,EAAMzS,OAAoBgU,KAA9B,CAEA,IAAM9b,EAAQic,EAAKM,WACfN,EAAKzX,gBAAkBxE,EAAMwc,YAC7BP,EAAKzX,eAAeiY,UAAU,aAAcL,GAE5Cpc,EAAMqc,IACN7C,GAAAA,QAAa,kBAAMxZ,EAAMqc,GAAc9B,EAAO+B,EAAK,GAN7C,CAQd,GAC6D,CACzDnC,SAAU8B,EAAKM,WAAWF,IAElC,CAAC,IACKK,GAAY,SAAAC,IAAAC,EAAAA,GAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAnG,EAAAA,GAAAA,GAAA,KAAAmG,GAAAG,EAAAE,MAAA,KAAAlX,UAAA,CAID,OAJC8Q,EAAAA,GAAAA,GAAA+F,EAAA,EAAA3a,IAAA,QAAAiD,MACd,WACIwR,KAAKpR,QAAU+V,GAAKgB,GAAc3F,KAAKyF,MAAM,GAAOE,GAAc3F,KAAKyF,MAAM,GACjF,GAAC,CAAAla,IAAA,UAAAiD,MACD,WAAY,KAAC0X,CAAA,CAJC,CAASV,ICpBrBgB,GAAY,SAAAL,IAAAC,EAAAA,GAAAA,GAAAI,EAAAL,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAE,GACd,SAAAA,IAAc,IAAAC,EAEY,OAFZ1G,EAAAA,GAAAA,GAAA,KAAAyG,IACVC,EAAAJ,EAAAE,MAAA,KAASlX,YACJuW,UAAW,EAAMa,CAC1B,CA6Ba,OA7BZtG,EAAAA,GAAAA,GAAAqG,EAAA,EAAAjb,IAAA,UAAAiD,MACD,WACI,IAAIkY,GAAiB,EAOrB,IACIA,EAAiB1G,KAAKyF,KAAKjY,QAAQmZ,QAAQ,iBAI/C,CAFA,MAAOtD,GACHqD,GAAiB,CACrB,CACKA,GAAmB1G,KAAKyF,KAAKzX,iBAElCgS,KAAKyF,KAAKzX,eAAeiY,UAAU,cAAc,GACjDjG,KAAK4F,UAAW,EACpB,GAAC,CAAAra,IAAA,SAAAiD,MACD,WACSwR,KAAK4F,UAAa5F,KAAKyF,KAAKzX,iBAEjCgS,KAAKyF,KAAKzX,eAAeiY,UAAU,cAAc,GACjDjG,KAAK4F,UAAW,EACpB,GAAC,CAAAra,IAAA,QAAAiD,MACD,WAAQ,IAAAoY,EAAA,KACJ5G,KAAKpR,QAAU+V,GAAKnB,GAAYxD,KAAKyF,KAAKjY,QAAS,SAAS,kBAAMoZ,EAAKC,SAAS,IAAGrD,GAAYxD,KAAKyF,KAAKjY,QAAS,QAAQ,kBAAMoZ,EAAKE,QAAQ,IACjJ,GAAC,CAAAvb,IAAA,UAAAiD,MACD,WAAY,KAACgY,CAAA,CAjCC,CAAShB,ICGrBuB,GAAgB,SAAhBA,EAAiB9Z,EAAQ+Z,GAC3B,QAAKA,IAGI/Z,IAAW+Z,GAITD,EAAc9Z,EAAQ+Z,EAAMC,eAE3C,ECPA,SAASC,GAA0Bvd,EAAM+Z,GACrC,GAAKA,EAAL,CAEA,IAAMyD,EAAwB,IAAIC,aAAa,UAAYzd,GAC3D+Z,EAAQyD,EAAuBhD,GAAiBgD,GAFtC,CAGd,CAAC,IACKE,GAAY,SAAAlB,IAAAC,EAAAA,GAAAA,GAAAiB,EAAAlB,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAe,GACd,SAAAA,IAAc,IAAAZ,EAyDR,OAzDQ1G,EAAAA,GAAAA,GAAA,KAAAsH,IACVZ,EAAAJ,EAAAE,MAAA,KAASlX,YACJiY,qBAAuB1H,GAC5B6G,EAAKc,mBAAqB3H,GAC1B6G,EAAKe,0BAA4B5H,GACjC6G,EAAKgB,kBAAoB,SAACC,EAAYC,GAElC,GADAlB,EAAKc,sBACDd,EAAKmB,WAAT,CAEA,IAAMpe,EAAQid,EAAKhB,KAAKM,WAelB8B,EAA0BvD,GAAgBzW,OAAQ,aAdhC,SAACia,EAAUC,GAC/B,GAAKtB,EAAKuB,gBAAV,CAEA,IAAAC,EAA+BxB,EAAKhB,KAAKM,WAAjC5M,EAAK8O,EAAL9O,MAAO+O,EAAWD,EAAXC,YACflF,GAAAA,QAAa,WAKR+D,GAAcN,EAAKhB,KAAKjY,QAASsa,EAAS1P,QAErCe,GAASA,EAAM2O,EAAUC,GADzBG,GAAeA,EAAYJ,EAAUC,EAE/C,GAVU,CAWd,GACsF,CAAEpE,UAAWna,EAAM2P,OAAS3P,EAAmB,eAC/H2e,EAA8B7D,GAAgBzW,OAAQ,iBAAiB,SAACua,EAAaC,GAAU,OAAK5B,EAAK6B,YAAYF,EAAaC,EAAW,GAAE,CAAE1E,UAAWna,EAAM0e,aAAe1e,EAAuB,mBAC9Mid,EAAKc,mBAAqB5C,GAAKkD,EAAyBM,GACxD1B,EAAK8B,WAAWb,EAAYC,EAnBlB,CAoBd,EACAlB,EAAK+B,qBAAuB,WACxB,IAmBMC,EAAwBjF,GAAYiD,EAAKhB,KAAKjY,QAAS,WAnBvC,SAACkb,GACnB,GAAyB,UAArBA,EAAand,MAAmBkb,EAAKmB,WAAzC,CAYAnB,EAAKc,qBACLd,EAAKc,mBAAqB/D,GAAYiD,EAAKhB,KAAKjY,QAAS,SAXrC,SAACmb,GACM,UAAnBA,EAAWpd,KAAoBkb,EAAKuB,iBAExCd,GAA0B,MAAM,SAACnD,EAAO+B,GACpC,IAAQ3M,EAAUsN,EAAKhB,KAAKM,WAApB5M,MACJA,GACA6J,GAAAA,QAAa,kBAAM7J,EAAM4K,EAAO+B,EAAK,GAE7C,GACJ,IAGAoB,GAA0B,QAAQ,SAACnD,EAAO+B,GACtCW,EAAK8B,WAAWxE,EAAO+B,EAC3B,GAfU,CAgBd,IAOM8C,EAAqBpF,GAAYiD,EAAKhB,KAAKjY,QAAS,QALvC,WACViZ,EAAKmB,YAEVV,GAA0B,UAAU,SAACkB,EAAaC,GAAU,OAAK5B,EAAK6B,YAAYF,EAAaC,EAAW,GAC9G,IAEA5B,EAAKe,0BAA4B7C,GAAK8D,EAAuBG,EACjE,EAAEnC,CACN,CAyCC,OAzCAtG,EAAAA,GAAAA,GAAAkH,EAAA,EAAA9b,IAAA,aAAAiD,MACD,SAAWuV,EAAO+B,GACd9F,KAAK4H,YAAa,EAClB,IAAAiB,EAAiC7I,KAAKyF,KAAKM,WAAnC3M,EAAUyP,EAAVzP,WAAoByP,EAARxP,UAIJ2G,KAAKyF,KAAKzX,gBACtBgS,KAAKyF,KAAKzX,eAAeiY,UAAU,YAAY,GAE/C7M,GACA4J,GAAAA,QAAa,kBAAM5J,EAAW2K,EAAO+B,EAAK,GAElD,GAAC,CAAAva,IAAA,gBAAAiD,MACD,WAOI,OANAwR,KAAKuH,qBACLvH,KAAK4H,YAAa,EACJ5H,KAAKyF,KAAKM,WACd1M,UAAY2G,KAAKyF,KAAKzX,gBAC5BgS,KAAKyF,KAAKzX,eAAeiY,UAAU,YAAY,IAE3CX,IACZ,GAAC,CAAA/Z,IAAA,cAAAiD,MACD,SAAYuV,EAAO+B,GACf,GAAK9F,KAAKgI,gBAAV,CAEA,IAAQE,EAAgBlI,KAAKyF,KAAKM,WAA1BmC,YACJA,GACAlF,GAAAA,QAAa,kBAAMkF,EAAYnE,EAAO+B,EAAK,GAHrC,CAKd,GAAC,CAAAva,IAAA,QAAAiD,MACD,WACI,IAAMhF,EAAQwW,KAAKyF,KAAKM,WAClB+C,EAAwBxE,GAAgBtE,KAAKyF,KAAKjY,QAAS,cAAewS,KAAKyH,kBAAmB,CAAE9D,UAAWna,EAAM4P,YAAc5P,EAAsB,kBACzJuf,EAAsBvF,GAAYxD,KAAKyF,KAAKjY,QAAS,QAASwS,KAAKwI,sBACzExI,KAAKsH,qBAAuB3C,GAAKmE,EAAuBC,EAC5D,GAAC,CAAAxd,IAAA,UAAAiD,MACD,WACIwR,KAAKsH,uBACLtH,KAAKuH,qBACLvH,KAAKwH,2BACT,KAACH,CAAA,CApGa,CAAS7B,I,YCXrBwD,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAuB,SAACC,GAC1B,IAAMrH,EAAWiH,GAAkBtZ,IAAI0Z,EAAMhR,QAC7C2J,GAAYA,EAASqH,EACzB,EACMC,GAA2B,SAACC,GAC9BA,EAAQ/J,QAAQ4J,GACpB,EAoBA,SAASI,GAAoBzM,EAASlG,EAASmL,GAC3C,IAAMyH,EApBV,SAAiCzd,GAAuB,IAApB0d,EAAI1d,EAAJ0d,KAAS7S,EAAOqD,GAAAlO,EAAAyP,IAC1CkO,EAAaD,GAAQ5hB,SAItBqhB,GAAUtZ,IAAI8Z,IACfR,GAAUrZ,IAAI6Z,EAAY,CAAC,GAE/B,IAAMC,EAAgBT,GAAUxZ,IAAIga,GAC9Bne,EAAMqe,KAAKC,UAAUjT,GAQ3B,OAHK+S,EAAcpe,KACfoe,EAAcpe,GAAO,IAAIue,qBAAqBT,IAAwB/c,EAAAA,EAAAA,GAAA,CAAImd,KAAAA,GAAS7S,KAEhF+S,EAAcpe,EACzB,CAEsCwe,CAAyBnT,GAG3D,OAFAoS,GAAkBnZ,IAAIiN,EAASiF,GAC/ByH,EAA0BQ,QAAQlN,GAC3B,WACHkM,GAAkBvI,OAAO3D,GACzB0M,EAA0BS,UAAUnN,EACxC,CACJ,CC3CA,IAAMoN,GAAiB,CACnBxgB,KAAM,EACNygB,IAAK,GAEHC,GAAa,SAAAjE,IAAAC,EAAAA,GAAAA,GAAAgE,EAAAjE,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAA8D,GACf,SAAAA,IAAc,IAAA3D,EAGY,OAHZ1G,EAAAA,GAAAA,GAAA,KAAAqK,IACV3D,EAAAJ,EAAAE,MAAA,KAASlX,YACJgb,gBAAiB,EACtB5D,EAAK6D,UAAW,EAAM7D,CAC1B,CAqDa,OArDZtG,EAAAA,GAAAA,GAAAiK,EAAA,EAAA7e,IAAA,gBAAAiD,MACD,WAAgB,IAAAoY,EAAA,KACZ5G,KAAKpR,UACL,IAA8C2b,EAApBvK,KAAKyF,KAAKM,WAA5ByE,SAAAA,OAAQ,IAAAD,EAAG,CAAC,EAACA,EACbd,EAAoDe,EAApDf,KAAcgB,EAAsCD,EAA9C3V,OAAM6V,EAAwCF,EAA1BG,OAAAA,OAAM,IAAAD,EAAG,OAAMA,EAAEE,EAASJ,EAATI,KAC7ChU,EAAU,CACZ6S,KAAMA,EAAOA,EAAKjc,aAAUrD,EAC5BsgB,WAAAA,EACAI,UAA6B,kBAAXF,EAAsBA,EAAST,GAAeS,IA+BpE,OAAOpB,GAAoBvJ,KAAKyF,KAAKjY,QAASoJ,GA7BjB,SAACwS,GAC1B,IAAQ0B,EAAmB1B,EAAnB0B,eAIR,GAAIlE,EAAK0D,WAAaQ,IAEtBlE,EAAK0D,SAAWQ,GAKZF,GAASE,IAAkBlE,EAAKyD,gBAApC,CAGSS,IACLlE,EAAKyD,gBAAiB,GAEtBzD,EAAKnB,KAAKzX,gBACV4Y,EAAKnB,KAAKzX,eAAeiY,UAAU,cAAe6E,GAMtD,IAAAC,EAA6CnE,EAAKnB,KAAKM,WAA/CiF,EAAeD,EAAfC,gBAAiBC,EAAeF,EAAfE,gBACnBlJ,EAAW+I,EAAiBE,EAAkBC,EACpDlJ,GAAYA,EAASqH,EAVrB,CAWJ,GAEJ,GAAC,CAAA7d,IAAA,QAAAiD,MACD,WACIwR,KAAKkL,eACT,GAAC,CAAA3f,IAAA,SAAAiD,MACD,WACI,GAAoC,qBAAzBsb,qBAAX,CAEA,IAAAqB,EAA6BnL,KAAKyF,KAA1Bjc,EAAK2hB,EAAL3hB,MAAOiU,EAAS0N,EAAT1N,UACT2N,EAAoB,CAAC,SAAU,SAAU,QAAQ1hB,KAO/D,SAAiCqC,GAA0D,IAAAsf,EAAAtf,EAAvDye,SAAAA,OAAQ,IAAAa,EAAG,CAAC,EAACA,EAAwCC,GAAxCjc,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAsC,CAAC,GAAjCmb,SAAUe,OAAY,IAAAD,EAAG,CAAC,EAACA,EAC9E,OAAO,SAAC3hB,GAAI,OAAK6gB,EAAS7gB,KAAU4hB,EAAa5hB,EAAK,CAC1D,CAToE6hB,CAAyBhiB,EAAOiU,IACxF2N,GACApL,KAAKkL,eAJC,CAMd,GAAC,CAAA3f,IAAA,UAAAiD,MACD,WAAY,KAAC4b,CAAA,CA1DE,CAAS5E,ICF5B,IAAMiG,GAAoB,CACtBtgB,OAAQ,CACJqa,QAAS4E,IAEbnf,IAAK,CACDua,QAAS6B,IAEbtc,MAAO,CACHya,QAASgB,IAEbxb,MAAO,CACHwa,QAASU,K,UChBjB,SAASwF,GAAeC,EAAMC,GAC1B,IAAK5iB,MAAMC,QAAQ2iB,GACf,OAAO,EACX,IAAMC,EAAaD,EAAKtc,OACxB,GAAIuc,IAAeF,EAAKrc,OACpB,OAAO,EACX,IAAK,IAAIsI,EAAI,EAAGA,EAAIiU,EAAYjU,IAC5B,GAAIgU,EAAKhU,KAAO+T,EAAK/T,GACjB,OAAO,EAEf,OAAO,CACX,CCOA,SAASkU,GAAe9e,EAAegR,EAAY7O,GAC/C,IAAM3F,EAAQwD,EAAc+Y,WAC5B,OAAOhI,GAAwBvU,EAAOwU,OAAuB7T,IAAXgF,EAAuBA,EAAS3F,EAAM2F,OAf5F,SAAoBnC,GAChB,IAAMQ,EAAU,CAAC,EAEjB,OADAR,EAAcgN,OAAOuF,SAAQ,SAAC/Q,EAAOjD,GAAG,OAAMiC,EAAQjC,GAAOiD,EAAMkB,KAAK,IACjElC,CACX,CAWoGue,CAAW/e,GAP/G,SAAqBA,GACjB,IAAMgf,EAAW,CAAC,EAElB,OADAhf,EAAcgN,OAAOuF,SAAQ,SAAC/Q,EAAOjD,GAAG,OAAMygB,EAASzgB,GAAOiD,EAAMkC,aAAa,IAC1Esb,CACX,CAG+Htb,CAAY1D,GAC3I,CCnBA,IAAIif,GAAUrM,GACVsM,GAAYtM,GCGhB,IAAMuM,GAAwB,SAACC,GAAO,OAAe,IAAVA,CAAc,EACnDC,GAAwB,SAACC,GAAY,OAAKA,EAAe,GAAI,ECP7DC,IACO,E,oBCDPC,GAAqB,SAACC,GAAM,OAAKzjB,MAAMC,QAAQwjB,IAAgC,kBAAdA,EAAO,EAAe,ECE7F,SAASC,GAAuBD,GAC5B,OAAO5iB,SAAS4iB,GACO,kBAAXA,GAAuBE,GAAqBF,IACpDD,GAAmBC,IAClBzjB,MAAMC,QAAQwjB,IAAWA,EAAOG,MAAMF,IAC/C,CACA,IAAMG,GAAsB,SAAH9gB,GAAA,IAAA+C,GAAAge,EAAAA,GAAAA,GAAA/gB,EAAA,GAAK0Y,EAAC3V,EAAA,GAAE4V,EAAC5V,EAAA,GAAEie,EAACje,EAAA,GAAEke,EAACle,EAAA,yBAAAxF,OAAsBmb,EAAC,MAAAnb,OAAKob,EAAC,MAAApb,OAAKyjB,EAAC,MAAAzjB,OAAK0jB,EAAC,MAC3EL,GAAuB,CACzBM,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQT,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CU,QAASV,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CW,OAAQX,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDY,QAASZ,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASa,GAAwBjB,GAC7B,GAAKA,EAEL,OAAOD,GAAmBC,GACpBI,GAAoBJ,GACpBzjB,MAAMC,QAAQwjB,GACVA,EAAOkB,IAAID,IACXf,GAAqBF,EACnC,CCRA,IAAMmB,GAAa,SAACC,EAAGC,EAAIC,GAAE,SAAQ,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,CAAC,EAoBL,SAASG,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOxO,GACX,IAAMyO,EAAW,SAACC,GAAE,OArBxB,SAAyB1d,EAAG2d,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACA9W,EAAI,EACR,IAEI6W,EAAWb,GADXc,EAAWH,GAAcC,EAAaD,GAAc,EACpBN,EAAKE,GAAOvd,GAC7B,EACX4d,EAAaE,EAGbH,EAAaG,QAEZ/c,KAAKgd,IAAIF,GAfO,QAgBnB7W,EAfuB,IAgB7B,OAAO8W,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,EAAI,EAE5D,OAAO,SAACN,GAAC,OAAW,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWS,EAASR,GAAIK,EAAKE,EAAI,CAC5E,CC9CA,IAAMjB,GAASa,GAAY,IAAM,EAAG,EAAG,GACjCZ,GAAUY,GAAY,EAAG,EAAG,IAAM,GAClCX,GAAYW,GAAY,IAAM,EAAG,IAAM,GCFvCa,GAAe,SAACpC,GAAM,OAAK,SAACllB,GAAC,OAAKA,GAAK,GAAMklB,EAAO,EAAIllB,GAAK,GAAK,EAAIklB,EAAO,GAAK,EAAIllB,KAAO,CAAC,GCA9FunB,GAAgB,SAACrC,GAAM,OAAK,SAACllB,GAAC,OAAK,EAAIklB,EAAO,EAAIllB,EAAE,GCCpD+lB,GAAS,SAAC/lB,GAAC,OAAK,EAAIoK,KAAKod,IAAIpd,KAAKqd,KAAKznB,GAAG,EAC1CgmB,GAAUuB,GAAcxB,IACxB2B,GAAYJ,GAAavB,ICDzBG,GAAUO,GAAY,IAAM,KAAM,IAAM,KACxCR,GAASsB,GAAcrB,IACvByB,GAAYL,GAAarB,ICEzB2B,GAAe,CACjBlC,OAAQrN,GACRuN,OAAAA,GACAE,UAAAA,GACAD,QAAAA,GACAE,OAAAA,GACA2B,UAAAA,GACA1B,QAAAA,GACAC,OAAAA,GACA0B,UAAAA,GACAzB,QAAAA,GACA2B,WCjBe,SAAC7nB,GAAC,OAAMA,GAAK,GAAK,EAAI,GAAMimB,GAAOjmB,GAAK,IAAO,EAAIoK,KAAK0d,IAAI,GAAI,IAAM9nB,EAAI,IAAI,GDmB3F+nB,GAA6B,SAACtR,GAChC,GAAIhV,MAAMC,QAAQ+U,GAAa,CAE3BkO,GAAgC,IAAtBlO,EAAW1O,OAAc,2DACnC,IAAAigB,GAAAzC,EAAAA,GAAAA,GAAyB9O,EAAU,GACnC,OAAOgQ,GADEuB,EAAA,GAAIA,EAAA,GAAIA,EAAA,GAAIA,EAAA,GAEzB,CACK,MAA0B,kBAAfvR,GAEZkO,QAAuC/hB,IAA7BglB,GAAanR,GAA2B,wBAAF1U,OAA0B0U,EAAU,MAC7EmR,GAAanR,IAEjBA,CACX,EE5BMwR,GAAgB,SAACle,EAAMme,GAAQ,OAAK,SAAC1mB,GACvC,OAAOc,QAAS0I,EAASxJ,IAAMuJ,EAAiBpC,KAAKnH,IAAMA,EAAEyH,WAAWc,IACnEme,GAAY/mB,OAAOC,UAAUC,eAAeC,KAAKE,EAAG0mB,GAC7D,CAAC,EACKC,GAAa,SAACC,EAAOC,EAAOC,GAAK,OAAK,SAAC9mB,GAAM,IAAAgD,EAC/C,IAAKwG,EAASxJ,GACV,OAAOA,EACX,IAAA+mB,EAAyB/mB,EAAEgnB,MAAM3d,GAAW4d,GAAAlD,EAAAA,GAAAA,GAAAgD,EAAA,GAArCrL,EAACuL,EAAA,GAAEtL,EAACsL,EAAA,GAAEjD,EAACiD,EAAA,GAAEje,EAAKie,EAAA,GACrB,OAAAjkB,EAAA,IAAAkkB,EAAAA,GAAAA,GAAAlkB,EACK4jB,EAAQ7d,WAAW2S,KAAEwL,EAAAA,GAAAA,GAAAlkB,EACrB6jB,EAAQ9d,WAAW4S,KAAEuL,EAAAA,GAAAA,GAAAlkB,EACrB8jB,EAAQ/d,WAAWib,KAAEkD,EAAAA,GAAAA,GAAAlkB,EAAA,aACL5B,IAAV4H,EAAsBD,WAAWC,GAAS,GAAChG,CAE1D,CAAC,ECdKmkB,IAAO5jB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNsF,GAAM,IACTL,UAAW,SAACxI,GAAC,OAAK4I,KAAKQ,MAHN,SAACpJ,GAAC,OAAKyI,EAAM,EAAG,IAAKzI,EAAE,CAGXonB,CAAapnB,GAAG,IAE3CqnB,GAAO,CACTlgB,KAAMsf,GAAc,MAAO,OAC3B3d,MAAO6d,GAAW,MAAO,QAAS,QAClCne,UAAW,SAAAxF,GAAA,IAAGskB,EAAGtkB,EAAHskB,IAAKC,EAAKvkB,EAALukB,MAAOC,EAAIxkB,EAAJwkB,KAAIC,EAAAzkB,EAAEgG,MAAO0e,OAAO,IAAAD,EAAG,EAACA,EAAA,MAAO,QACrDN,GAAQ3e,UAAU8e,GAClB,KACAH,GAAQ3e,UAAU+e,GAClB,KACAJ,GAAQ3e,UAAUgf,GAClB,KACAre,EAASH,EAAMR,UAAUkf,IACzB,GAAG,GCYX,IAAMC,GAAM,CACRxgB,KAAMsf,GAAc,KACpB3d,MAhCJ,SAAkB9I,GACd,IAAI4nB,EAAI,GACJC,EAAI,GACJlM,EAAI,GACJD,EAAI,GAmBR,OAjBI1b,EAAEuG,OAAS,GACXqhB,EAAI5nB,EAAE+U,UAAU,EAAG,GACnB8S,EAAI7nB,EAAE+U,UAAU,EAAG,GACnB4G,EAAI3b,EAAE+U,UAAU,EAAG,GACnB2G,EAAI1b,EAAE+U,UAAU,EAAG,KAInB6S,EAAI5nB,EAAE+U,UAAU,EAAG,GACnB8S,EAAI7nB,EAAE+U,UAAU,EAAG,GACnB4G,EAAI3b,EAAE+U,UAAU,EAAG,GACnB2G,EAAI1b,EAAE+U,UAAU,EAAG,GACnB6S,GAAKA,EACLC,GAAKA,EACLlM,GAAKA,EACLD,GAAKA,GAEF,CACH4L,IAAKQ,SAASF,EAAG,IACjBL,MAAOO,SAASD,EAAG,IACnBL,KAAMM,SAASnM,EAAG,IAClB3S,MAAO0S,EAAIoM,SAASpM,EAAG,IAAM,IAAM,EAE3C,EAIIlT,UAAW6e,GAAK7e,WC/Bduf,GAAO,CACT5gB,KAAMsf,GAAc,MAAO,OAC3B3d,MAAO6d,GAAW,MAAO,aAAc,aACvCne,UAAW,SAAAxF,GAAwD,IAArDglB,EAAGhlB,EAAHglB,IAAKC,EAAUjlB,EAAVilB,WAAYC,EAASllB,EAATklB,UAAST,EAAAzkB,EAAEgG,MAAO0e,OAAO,IAAAD,EAAG,EAACA,EACxD,MAAQ,QACJ7e,KAAKQ,MAAM4e,GACX,KACAle,GAAQtB,UAAUW,EAAS8e,IAC3B,KACAne,GAAQtB,UAAUW,EAAS+e,IAC3B,KACA/e,EAASH,EAAMR,UAAUkf,IACzB,GACR,GCbES,GAAQ,CACVhhB,KAAM,SAACnH,GAAC,OAAKqnB,GAAKlgB,KAAKnH,IAAM2nB,GAAIxgB,KAAKnH,IAAM+nB,GAAK5gB,KAAKnH,EAAE,EACxD8I,MAAO,SAAC9I,GACJ,OAAIqnB,GAAKlgB,KAAKnH,GACHqnB,GAAKve,MAAM9I,GAEb+nB,GAAK5gB,KAAKnH,GACR+nB,GAAKjf,MAAM9I,GAGX2nB,GAAI7e,MAAM9I,EAEzB,EACAwI,UAAW,SAACxI,GACR,OAAOwJ,EAASxJ,GACVA,EACAA,EAAEH,eAAe,OACbwnB,GAAK7e,UAAUxI,GACf+nB,GAAKvf,UAAUxI,EAC7B,GCHEuV,GAAM,SAAC6S,EAAMC,EAAIC,GAAQ,OAAMA,EAAWF,EAAOE,EAAWD,EAAKD,CAAI,ECpB3E,SAASG,GAAS/pB,EAAGgqB,EAAG1D,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDtmB,EAAc,GAATgqB,EAAIhqB,GAASsmB,EACzBA,EAAI,GACG0D,EACP1D,EAAI,EAAI,EACDtmB,GAAKgqB,EAAIhqB,IAAM,EAAI,EAAIsmB,GAAK,EAChCtmB,CACX,CCHA,IAAMiqB,GAAiB,SAACL,EAAMC,EAAIroB,GAC9B,IAAM0oB,EAAWN,EAAOA,EACxB,OAAOxf,KAAK+f,KAAK/f,KAAKD,IAAI,EAAG3I,GAAKqoB,EAAKA,EAAKK,GAAYA,GAC5D,EACME,GAAa,CAACjB,GAAKN,GAAMU,IAE/B,SAASc,GAAOV,GACZ,IAFkBnoB,EAEZuI,GAFYvI,EAEQmoB,EAFFS,GAAWE,MAAK,SAACvgB,GAAI,OAAKA,EAAKpB,KAAKnH,EAAE,KAG9DmjB,GAAUriB,QAAQyH,GAAO,IAAFhI,OAAM4nB,EAAK,yEAClC,IAAIY,EAAQxgB,EAAKO,MAAMqf,GAKvB,OAJI5f,IAASwf,KAETgB,EDRR,SAAmB/lB,GAAwC,IAArCglB,EAAGhlB,EAAHglB,IAAKC,EAAUjlB,EAAVilB,WAAYC,EAASllB,EAATklB,UAAWlf,EAAKhG,EAALgG,MAC9Cgf,GAAO,IAEPE,GAAa,IACb,IAAIZ,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAS,GAAc,IAQT,CACD,IAAMO,EAAIN,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCzpB,EAAI,EAAI0pB,EAAYM,EAC1BlB,EAAMiB,GAAS/pB,EAAGgqB,EAAGR,EAAM,EAAI,GAC/BT,EAAQgB,GAAS/pB,EAAGgqB,EAAGR,GACvBR,EAAOe,GAAS/pB,EAAGgqB,EAAGR,EAAM,EAAI,EACpC,MAVIV,EAAMC,EAAQC,EAAOU,EAWzB,MAAO,CACHZ,IAAK1e,KAAKQ,MAAY,IAANke,GAChBC,MAAO3e,KAAKQ,MAAc,IAARme,GAClBC,KAAM5e,KAAKQ,MAAa,IAAPoe,GACjBxe,MAAAA,EAER,CCjBgBggB,CAAWD,IAEhBA,CACX,CACA,IAAME,GAAW,SAACb,EAAMC,GACpB,IAAMa,EAAWL,GAAOT,GAClBe,EAASN,GAAOR,GAChBe,GAAO7lB,EAAAA,EAAAA,GAAA,GAAQ2lB,GACrB,OAAO,SAAClpB,GAKJ,OAJAopB,EAAQ9B,IAAMmB,GAAeS,EAAS5B,IAAK6B,EAAO7B,IAAKtnB,GACvDopB,EAAQ7B,MAAQkB,GAAeS,EAAS3B,MAAO4B,EAAO5B,MAAOvnB,GAC7DopB,EAAQ5B,KAAOiB,GAAeS,EAAS1B,KAAM2B,EAAO3B,KAAMxnB,GAC1DopB,EAAQpgB,MAAQuM,GAAI2T,EAASlgB,MAAOmgB,EAAOngB,MAAOhJ,GAC3CqnB,GAAK7e,UAAU4gB,EAC1B,CACJ,ECvBA,IAAMC,GAAkB,CACpBC,M5EZqB,gF4EarBC,SAAU,OACVphB,MAAO,OACPW,MAAO+N,IAEL2S,GAAiB,CACnBF,MAAOhgB,EACPigB,SAAU,SACVphB,MAAO,OACPW,MAAOqf,GAAMrf,OAEX2gB,GAAkB,CACpBH,MAAOjgB,EACPkgB,SAAU,UACVphB,MAAO,OACPW,MAAOD,EAAOC,OAElB,SAAS4gB,GAAS3M,EAAI/Z,GAAqC,IAAA2mB,EAAjCL,EAAKtmB,EAALsmB,MAAOC,EAAQvmB,EAARumB,SAAUphB,EAAKnF,EAALmF,MAAOW,EAAK9F,EAAL8F,MACxC8U,EAAUb,EAAK6M,UAAU5C,MAAMsC,GAChC1L,IAELb,EAAK,MAAQwM,GAAY3L,EAAQrX,OACjCwW,EAAK6M,UAAY7M,EAAK6M,UAAUtqB,QAAQgqB,EAAOnhB,IAC/CwhB,EAAA5M,EAAK9L,QAAOsG,KAAIiG,MAAAmM,GAAAE,EAAAA,GAAAA,GAAIjM,EAAQgH,IAAI9b,KACpC,CACA,SAASghB,GAAoBrkB,GACzB,IAAMskB,EAAgBtkB,EAAMukB,WACtBjN,EAAO,CACTtX,MAAOskB,EACPH,UAAWG,EACX9Y,OAAQ,GACRgZ,QAAS,EACTC,UAAW,EACXC,WAAY,GAMhB,OAJIpN,EAAKtX,MAAMwB,SAAS,WACpByiB,GAAS3M,EAAMsM,IACnBK,GAAS3M,EAAMyM,IACfE,GAAS3M,EAAM0M,IACR1M,CACX,CACA,SAASqN,GAAkBpqB,GACvB,OAAO8pB,GAAoB9pB,GAAGiR,MAClC,CACA,SAASoZ,GAAkB/a,GACvB,IAAAgb,EAAkDR,GAAoBxa,GAA9D2B,EAAMqZ,EAANrZ,OAAQiZ,EAASI,EAATJ,UAAWD,EAAOK,EAAPL,QAASL,EAASU,EAATV,UAC9BW,EAAYtZ,EAAO1K,OACzB,OAAO,SAACvG,GAEJ,IADA,IAAIwqB,EAASZ,EACJ/a,EAAI,EAAGA,EAAI0b,EAAW1b,IAEvB2b,EADA3b,EAAIob,EACKO,EAAOlrB,QAAQ+pB,GAAgBlhB,MAAOnI,EAAE6O,IAE5CA,EAAIob,EAAUC,EACVM,EAAOlrB,QAAQkqB,GAAerhB,MAAOggB,GAAM3f,UAAUxI,EAAE6O,KAGvD2b,EAAOlrB,QAAQmqB,GAAgBthB,MAAOgB,EAASnJ,EAAE6O,KAGlE,OAAO2b,CACX,CACJ,CACA,IAAMC,GAAuB,SAACzqB,GAAC,MAAkB,kBAANA,EAAiB,EAAIA,CAAC,EAMjE,IAAM0qB,GAAU,CACZvjB,KA/EJ,SAAcnH,GACV,IAAI4Q,EAAI+Z,EACR,OAAQC,MAAM5qB,IACVwJ,EAASxJ,MACwB,QAA9B4Q,EAAK5Q,EAAEgnB,MAAM3d,UAAgC,IAAPuH,OAAgB,EAASA,EAAGrK,SAAW,KAC3C,QAA9BokB,EAAK3qB,EAAEgnB,MAAM1d,UAAgC,IAAPqhB,OAAgB,EAASA,EAAGpkB,SAAW,GAChF,CACZ,EAyEIuC,MAAOshB,GACPC,kBAAAA,GACAQ,kBATJ,SAA2B7qB,GACvB,IAAM8qB,EAASV,GAAkBpqB,GAEjC,OADoBqqB,GAAkBrqB,EAC/B+qB,CAAYD,EAAOlG,IAAI6F,IAClC,GC5EMO,GAAe,SAACtZ,EAAQrC,GAAM,OAAK,SAAC7Q,GAAC,SAAA+B,OAAQ/B,EAAI,EAAI6Q,EAASqC,EAAM,CAAE,EAC5E,SAASuZ,GAASvZ,EAAQrC,GACtB,MAAsB,kBAAXqC,EACA,SAAC1R,GAAC,OAAKuV,GAAI7D,EAAQrC,EAAQrP,EAAE,EAE/BmoB,GAAMhhB,KAAKuK,GACTuX,GAASvX,EAAQrC,GAGjBqC,EAAOjK,WAAW,QACnBujB,GAAatZ,EAAQrC,GACrB6b,GAAWxZ,EAAQrC,EAEjC,CACA,IAAM8b,GAAW,SAAC/C,EAAMC,GACpB,IAAMmC,GAAMX,EAAAA,GAAAA,GAAOzB,GACbmC,EAAYC,EAAOjkB,OACnB6kB,EAAahD,EAAKxD,KAAI,SAACyG,EAAUxc,GAAC,OAAKoc,GAASI,EAAUhD,EAAGxZ,GAAG,IACtE,OAAO,SAAC7O,GACJ,IAAK,IAAI6O,EAAI,EAAGA,EAAI0b,EAAW1b,IAC3B2b,EAAO3b,GAAKuc,EAAWvc,GAAG7O,GAE9B,OAAOwqB,CACX,CACJ,EACMc,GAAY,SAAC5Z,EAAQrC,GACvB,IAAMmb,GAAMjnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQmO,GAAWrC,GACzB+b,EAAa,CAAC,EACpB,IAAK,IAAM5oB,KAAOgoB,OACMppB,IAAhBsQ,EAAOlP,SAAsCpB,IAAhBiO,EAAO7M,KACpC4oB,EAAW5oB,GAAOyoB,GAASvZ,EAAOlP,GAAM6M,EAAO7M,KAGvD,OAAO,SAACxC,GACJ,IAAK,IAAMwC,KAAO4oB,EACdZ,EAAOhoB,GAAO4oB,EAAW5oB,GAAKxC,GAElC,OAAOwqB,CACX,CACJ,EACMU,GAAa,SAACxZ,EAAQrC,GACxB,IAAMkc,EAAWb,GAAQL,kBAAkBhb,GACrCmc,EAAc1B,GAAoBpY,GAClC+Z,EAAc3B,GAAoBza,GAIxC,OAHuBmc,EAAYvB,UAAYwB,EAAYxB,SACvDuB,EAAYtB,YAAcuB,EAAYvB,WACtCsB,EAAYrB,YAAcsB,EAAYtB,WAE/BvO,GAAKuP,GAASK,EAAYva,OAAQwa,EAAYxa,QAASsa,IAG9DrI,IAAQ,EAAM,mBAAF3iB,OAAqBmR,EAAM,WAAAnR,OAAU8O,EAAM,6KAChD2b,GAAatZ,EAAQrC,GAEpC,ECjDMiZ,GAAW,SAACF,EAAMC,EAAI5iB,GACxB,IAAMimB,EAAmBrD,EAAKD,EAC9B,OAA4B,IAArBsD,EAAyB,GAAKjmB,EAAQ2iB,GAAQsD,CACzD,ECLMC,GAAY,SAACvD,EAAMC,GAAE,OAAK,SAAC7pB,GAAC,OAAK+W,GAAI6S,EAAMC,EAAI7pB,EAAE,GAgBvD,SAASotB,GAAapB,EAAQrG,EAAM0H,GAIhC,IAHA,IAhBwB7rB,EAgBlB8rB,EAAS,GACTC,EAAeF,IAhBJ,kBADO7rB,EAiB+BwqB,EAAO,IAfnDmB,GAEW,kBAAN3rB,EACLmoB,GAAMhhB,KAAKnH,GAAKipB,GAAWiC,GAE7BjrB,MAAMC,QAAQF,GACZmrB,GAEW,kBAANnrB,EACLsrB,GAEJK,IAKDK,EAAYxB,EAAOjkB,OAAS,EACzBsI,EAAI,EAAGA,EAAImd,EAAWnd,IAAK,CAChC,IAAIod,EAAQF,EAAavB,EAAO3b,GAAI2b,EAAO3b,EAAI,IAC/C,GAAIsV,EAAM,CACN,IAAM+H,EAAiBjsB,MAAMC,QAAQikB,GAAQA,EAAKtV,IAAMgI,GAAOsN,EAC/D8H,EAAQrQ,GAAKsQ,EAAgBD,EACjC,CACAH,EAAOvU,KAAK0U,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,GAAYC,EAAO5B,GAAqD,IAAAxnB,EAAAsD,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAAC+lB,EAAArpB,EAAzCyF,MAAO6jB,OAAO,IAAAD,GAAOA,EAAElI,EAAInhB,EAAJmhB,KAAM8H,EAAKjpB,EAALipB,MACzDM,EAAcH,EAAM7lB,OAM1B,GALA4c,GAAUoJ,IAAgB/B,EAAOjkB,OAAQ,wDAKrB,IAAhBgmB,EACA,OAAO,kBAAM/B,EAAO,EAAE,EAEtB4B,EAAM,GAAKA,EAAMG,EAAc,KAC/BH,GAAQvC,EAAAA,GAAAA,GAAIuC,GAAOI,UACnBhC,GAASX,EAAAA,GAAAA,GAAIW,GAAQgC,WAEzB,IAAMV,EAASF,GAAapB,EAAQrG,EAAM8H,GACpCD,EAAYF,EAAOvlB,OACnBkmB,EAAe,SAACzsB,GAClB,IAAI6O,EAAI,EACR,GAAImd,EAAY,EACZ,KAAOnd,EAAIud,EAAM7lB,OAAS,KAClBvG,EAAIosB,EAAMvd,EAAI,IADOA,KAKjC,IAAM6d,EAAkBpE,GAAS8D,EAAMvd,GAAIud,EAAMvd,EAAI,GAAI7O,GACzD,OAAO8rB,EAAOjd,GAAG6d,EACrB,EACA,OAAOJ,EACD,SAACtsB,GAAC,OAAKysB,EAAahkB,EAAM2jB,EAAM,GAAIA,EAAMG,EAAc,GAAIvsB,GAAG,EAC/DysB,CACV,CCvFA,SAASE,GAAcC,GACnB,IAAMjb,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQkb,GAExB,IADA,IAAMnkB,EAAMiJ,EAAOA,EAAOpL,OAAS,GAC1BsI,EAAI,EAAGA,GAAKge,EAAWhe,IAAK,CACjC,IAAMie,EAAiBxE,GAAS,EAAGuE,EAAWhe,GAC9C8C,EAAO4F,KAAKhC,GAAI7M,EAAK,EAAGokB,GAC5B,CACJ,CDLIC,CAAWpb,EAAQib,EAAIrmB,OAAS,GACzBoL,CACX,CEIA,SAASqb,GAAShqB,GAA4E,IAHvEiO,EAAQyS,EAG+DuJ,EAAAjqB,EAAzEkqB,SAAAA,OAAQ,IAAAD,EAAG,IAAGA,EAAaE,EAAcnqB,EAAzBgqB,UAA2BI,EAAKpqB,EAALoqB,MAAKC,EAAArqB,EAAEmhB,KAAAA,OAAI,IAAAkJ,EAAG,YAAWA,EAK/EC,ECfY,SAACnJ,GACnB,OAAOlkB,MAAMC,QAAQikB,IAA4B,kBAAZA,EAAK,EAC9C,CDa4BoJ,CAAcpJ,GAChCA,EAAKS,IAAI2B,IACTA,GAA2BpC,GAK3BxW,EAAQ,CACV6f,MAAM,EACN/nB,MAAO0nB,EAAe,IAKpBM,EE7BV,SAA8B9b,EAAQub,GAClC,OAAOvb,EAAOiT,KAAI,SAAC8I,GAAC,OAAKA,EAAIR,CAAQ,GACzC,CF2B0BS,CAGtBP,GAASA,EAAM7mB,SAAW4mB,EAAe5mB,OACnC6mB,EACAT,GAAcQ,GAAiBD,GAC/BU,EAAoBzB,GAAYsB,EAAeN,EAAgB,CACjEhJ,KAAMlkB,MAAMC,QAAQotB,GACdA,GA9BSrc,EA+BKkc,EA/BGzJ,EA+Ba4J,EA9BjCrc,EAAO2T,KAAI,kBAAMlB,GAAUY,EAAS,IAAE7M,OAAO,EAAGxG,EAAO1K,OAAS,MAgCvE,MAAO,CACHsnB,mBAAoBX,EACpBtK,KAAM,SAACkC,GAGH,OAFAnX,EAAMlI,MAAQmoB,EAAkB9I,GAChCnX,EAAM6f,KAAO1I,GAAKoI,EACXvf,CACX,EAER,CG1CA,SAASmgB,GAAkB7K,EAAU8K,GACjC,OAAOA,EAAgB9K,GAAY,IAAO8K,GAAiB,CAC/D,CCLA,SAASC,GAAsBC,EAAcnJ,EAAGrgB,GAC5C,IAAMypB,EAAQtlB,KAAKD,IAAImc,EAFI,EAEwB,GACnD,OAAOgJ,GAAkBrpB,EAAUwpB,EAAaC,GAAQpJ,EAAIoJ,EAChE,CCFA,IAAMC,GAAU,KAKhB,SAASC,GAAUprB,GAA6D,IACxEqrB,EACAC,EAFwErB,EAAAjqB,EAA1DkqB,SAAAA,OAAQ,IAAAD,EAAG,IAAGA,EAAAsB,EAAAvrB,EAAEwrB,OAAAA,OAAM,IAAAD,EAAG,IAAIA,EAAAE,EAAAzrB,EAAEigB,SAAAA,OAAQ,IAAAwL,EAAG,EAACA,EAAAC,EAAA1rB,EAAE2rB,KAAAA,OAAI,IAAAD,EAAG,EAACA,EAGvExL,GAAQgK,GAAY9J,GANJ,IAMwC,8CACxD,IAAIwL,EAAe,EAAIJ,EAIvBI,EAAenmB,EAVA,IACA,EAS8BmmB,GAC7C1B,EAAWzkB,EAbK,IACA,GAY2B6a,GAAsB4J,IAC7D0B,EAAe,GAIfP,EAAW,SAACQ,GACR,IAAMC,EAAmBD,EAAeD,EAClC1W,EAAQ4W,EAAmB5B,EAC3BxR,EAAIoT,EAAmB7L,EACvBtH,EAAIoT,GAAgBF,EAAcD,GAClC5K,EAAIpb,KAAKomB,KAAK9W,GACpB,OAAOiW,GAAWzS,EAAIC,EAAKqI,CAC/B,EACAsK,EAAa,SAACO,GACV,IACM3W,EADmB2W,EAAeD,EACP1B,EAC3BjJ,EAAI/L,EAAQ+K,EAAWA,EACvB3I,EAAI1R,KAAK0d,IAAIsI,EAAc,GAAKhmB,KAAK0d,IAAIuI,EAAc,GAAK3B,EAC5D+B,EAAIrmB,KAAKomB,KAAK9W,GACd2P,EAAIkH,GAAgBnmB,KAAK0d,IAAIuI,EAAc,GAAID,GAErD,QADgBP,EAASQ,GAAgBV,GAAU,GAAK,EAAI,KACzClK,EAAI3J,GAAK2U,GAAMpH,CACtC,IAMAwG,EAAW,SAACQ,GAGR,OAFUjmB,KAAKomB,KAAKH,EAAe3B,KACxB2B,EAAe5L,GAAYiK,EAAW,GAC1C,IACX,EACAoB,EAAa,SAACO,GAGV,OAFUjmB,KAAKomB,KAAKH,EAAe3B,IACIA,EAAWA,GAAvCjK,EAAW4L,GAE1B,GAEJ,IACMA,EAmBV,SAAyBR,EAAUC,EAAYY,GAE3C,IADA,IAAIC,EAASD,EACJrgB,EAAI,EAAGA,EAHG,GAGiBA,IAChCsgB,GAAkBd,EAASc,GAAUb,EAAWa,GAEpD,OAAOA,CACX,CAzByBC,CAAgBf,EAAUC,EAD1B,EAAIpB,GAGzB,GADAA,EAAW9J,GAAsB8J,GAC7BtC,MAAMiE,GACN,MAAO,CACHQ,UAAW,IACXC,QAAS,GACTpC,SAAAA,GAIJ,IAAMmC,EAAYzmB,KAAK0d,IAAIuI,EAAc,GAAKF,EAC9C,MAAO,CACHU,UAAAA,EACAC,QAAwB,EAAfV,EAAmBhmB,KAAK+f,KAAKgG,EAAOU,GAC7CnC,SAAAA,EAGZ,CASA,SAAS6B,GAAgBF,EAAcD,GACnC,OAAOC,EAAejmB,KAAK+f,KAAK,EAAIiG,EAAeA,EACvD,C,6CClFMW,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa5hB,EAASwD,GAC3B,OAAOA,EAAK1Q,MAAK,SAAC6B,GAAG,YAAsBpB,IAAjByM,EAAQrL,EAAkB,GACxD,CAwBA,SAASktB,GAAM1sB,GAAkD,IAuBzD2sB,EAvBU3C,EAAShqB,EAATgqB,UAAW4C,EAAS5sB,EAAT4sB,UAAWC,EAAS7sB,EAAT6sB,UAAchiB,EAAOqD,GAAAlO,EAAAyP,IACnDf,EAASsb,EAAU,GACnB3d,EAAS2d,EAAUA,EAAUzmB,OAAS,GAKtCoH,EAAQ,CAAE6f,MAAM,EAAO/nB,MAAOiM,GACpCoe,EA/BJ,SAA0BjiB,GACtB,IAAIkiB,GAAaxsB,EAAAA,EAAAA,GAAA,CACb0f,SAAU,EACVoM,UAAW,IACXC,QAAS,GACTX,KAAM,EACNqB,wBAAwB,GACrBniB,GAGP,IAAK4hB,GAAa5hB,EAAS2hB,KACvBC,GAAa5hB,EAAS0hB,IAAe,CACrC,IAAMU,EAAU7B,GAAWvgB,IAC3BkiB,GAAaxsB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNwsB,GACAE,GAAO,IACVhN,SAAU,EACV0L,KAAM,KAEIqB,wBAAyB,CAC3C,CACA,OAAOD,CACX,CASsFG,CAAiBriB,GAA3FwhB,EAASS,EAATT,UAAWC,EAAOQ,EAAPR,QAASX,EAAImB,EAAJnB,KAAM1L,EAAQ6M,EAAR7M,SAAUiK,EAAQ4C,EAAR5C,SAAU8C,EAAsBF,EAAtBE,uBAChDG,EAAkBlN,GAAYK,GAAsBL,GAAY,EAChE2L,EAAeU,GAAW,EAAI1mB,KAAK+f,KAAK0G,EAAYV,IACpDyB,EAAe/gB,EAASqC,EACxB2e,EAAsB/M,GAAsB1a,KAAK+f,KAAK0G,EAAYV,IAQlE2B,EAAkB1nB,KAAKgd,IAAIwK,GAAgB,EAIjD,GAHAP,IAAcA,EAAYS,EAAkB,IAAO,GACnDV,IAAcA,EAAYU,EAAkB,KAAQ,IAEhD1B,EAAe,EAAG,CAClB,IAAM2B,EAAcxB,GAAgBsB,EAAqBzB,GAEzDe,EAAgB,SAAC7K,GACb,IAAMuJ,EAAWzlB,KAAKomB,KAAKJ,EAAeyB,EAAsBvL,GAChE,OAAQzV,EACJgf,IACO8B,EACCvB,EAAeyB,EAAsBD,GACrCG,EACA3nB,KAAKod,IAAIuK,EAAczL,GACvBsL,EAAexnB,KAAK4nB,IAAID,EAAczL,GACtD,CACJ,MACK,GAAqB,IAAjB8J,EAELe,EAAgB,SAAC7K,GAAC,OAAKzV,EACnBzG,KAAKomB,KAAKqB,EAAsBvL,IAC3BsL,GACID,EAAkBE,EAAsBD,GAAgBtL,EAAE,MAEtE,CAED,IAAM2L,EAAoBJ,EAAsBznB,KAAK+f,KAAKiG,EAAeA,EAAe,GACxFe,EAAgB,SAAC7K,GACb,IAAMuJ,EAAWzlB,KAAKomB,KAAKJ,EAAeyB,EAAsBvL,GAE1D4L,EAAW9nB,KAAKF,IAAI+nB,EAAoB3L,EAAG,KACjD,OAAQzV,EACHgf,IACK8B,EACEvB,EAAeyB,EAAsBD,GACrCxnB,KAAK+nB,KAAKD,GACVD,EACIL,EACAxnB,KAAKgoB,KAAKF,IAClBD,CACZ,CACJ,CACA,MAAO,CACH5C,mBAAoBmC,GAAyB9C,GAAmB,KAChEtK,KAAM,SAACkC,GACH,IAAMrgB,EAAUkrB,EAAc7K,GAC9B,GAAKkL,EAqBDriB,EAAM6f,KAAO1I,GAAKoI,MArBO,CACzB,IAAI/X,EAAkBgb,EACZ,IAANrL,IAOI3P,EADAyZ,EAAe,EACGZ,GAAsB2B,EAAe7K,EAAGrgB,GAGxC,GAG1B,IAAMosB,EAA2BjoB,KAAKgd,IAAIzQ,IAAoB0a,EACxDiB,EAA+BloB,KAAKgd,IAAIvW,EAAS5K,IAAYmrB,EACnEjiB,EAAM6f,KACFqD,GAA4BC,CACpC,CAKA,OADAnjB,EAAMlI,MAAQkI,EAAM6f,KAAOne,EAAS5K,EAC7BkJ,CACX,EAER,CC3HA,SAASojB,GAAO/tB,GAAiK,IAA9JgqB,EAAShqB,EAATgqB,UAASyB,EAAAzrB,EAAEigB,SAAAA,OAAQ,IAAAwL,EAAG,EAAGA,EAAAuC,EAAAhuB,EAAEiuB,MAAAA,OAAK,IAAAD,EAAG,GAAGA,EAAAE,EAAAluB,EAAEmuB,aAAAA,OAAY,IAAAD,EAAG,IAAGA,EAAAE,EAAApuB,EAAEquB,cAAAA,OAAa,IAAAD,EAAG,GAAEA,EAAAE,EAAAtuB,EAAEuuB,gBAAAA,OAAe,IAAAD,EAAG,IAAGA,EAAEE,EAAYxuB,EAAZwuB,aAAc9oB,EAAG1F,EAAH0F,IAAKC,EAAG3F,EAAH2F,IAAG8oB,EAAAzuB,EAAE4sB,UAAAA,OAAS,IAAA6B,EAAG,GAAGA,EAAE5B,EAAS7sB,EAAT6sB,UACzJne,EAASsb,EAAU,GACnBrf,EAAQ,CACV6f,MAAM,EACN/nB,MAAOiM,GAGLggB,EAAkB,SAAC1xB,GACrB,YAAYoB,IAARsH,EACOC,OACCvH,IAARuH,GAEGC,KAAKgd,IAAIld,EAAM1I,GAAK4I,KAAKgd,IAAIjd,EAAM3I,GAD/B0I,EAC0CC,CACzD,EACIgpB,EAAYV,EAAQhO,EAClB2O,EAAQlgB,EAASigB,EACjBtiB,OAA0BjO,IAAjBowB,EAA6BI,EAAQJ,EAAaI,GAK7DviB,IAAWuiB,IACXD,EAAYtiB,EAASqC,GACzB,IAcImgB,EACAC,EAfEC,EAAY,SAACjN,GAAC,OAAM6M,EAAY/oB,KAAKomB,KAAKlK,EAAIqM,EAAa,EAC3Da,EAAa,SAAClN,GAAC,OAAKzV,EAAS0iB,EAAUjN,EAAE,EACzCmN,EAAgB,SAACnN,GACnB,IAAM5M,EAAQ6Z,EAAUjN,GAClBoN,EAASF,EAAWlN,GAC1BnX,EAAM6f,KAAO5kB,KAAKgd,IAAI1N,IAAU0X,EAChCjiB,EAAMlI,MAAQkI,EAAM6f,KAAOne,EAAS6iB,CACxC,EASMC,EAAqB,SAACrN,GAjCN,IAAC9kB,KAkCA2N,EAAMlI,WAlCSrE,IAARsH,GAAqB1I,EAAI0I,QAAiBtH,IAARuH,GAAqB3I,EAAI2I,KAoCrFkpB,EAAsB/M,EACtBgN,EAAWpC,GAAO,CACd1C,UAAW,CAACrf,EAAMlI,MAAOisB,EAAgB/jB,EAAMlI,QAC/Cwd,SAAU+K,GAAsBgE,EAAYlN,EAAGnX,EAAMlI,OACrD6pB,QAAS+B,EACThC,UAAWkC,EACX3B,UAAAA,EACAC,UAAAA,IAER,EAEA,OADAsC,EAAmB,GACZ,CACHtE,mBAAoB,KACpBjL,KAAM,SAACkC,GAOH,IAAIsN,GAAkB,EAUtB,OATKN,QAAoC1wB,IAAxBywB,IACbO,GAAkB,EAClBH,EAAcnN,GACdqN,EAAmBrN,SAMK1jB,IAAxBywB,GAAqC/M,EAAI+M,EAClCC,EAASlP,KAAKkC,EAAI+M,KAGxBO,GAAmBH,EAAcnN,GAC3BnX,EAEf,EAER,CClFA,IAAM0kB,GAAkB,SAACztB,GACrB,IAAM0tB,EAAgB,SAAHtvB,GAAA,IAAMmV,EAASnV,EAATmV,UAAS,OAAOvT,EAAOuT,EAAU,EAC1D,MAAO,CACH/X,MAAO,kBAAM6Z,GAAAA,OAAaqY,GAAe,EAAK,EAC9CC,KAAM,kBAAMrY,GAAYoY,EAAc,EAKtC3Y,IAAK,kBAAMN,GAAUjB,aAAeiB,GAAUlB,UAAYuB,YAAYC,KAAK,EAEnF,ECRA,SAAS6Y,GAAsBC,GAI3B,IAHA,IAAIvF,EAAW,EAEXvf,EAAQ8kB,EAAU7P,KAAKsK,IACnBvf,EAAM6f,MAAQN,EALG,KAMrBA,GAHa,GAIbvf,EAAQ8kB,EAAU7P,KAAKsK,GAE3B,OAAOA,GATkB,IASiBwF,IAAWxF,CACzD,C,sICLMyF,GAAQ,CACVC,MAAO7B,GACPA,QAAAA,GACA8B,MAAO7F,GACPA,UAAWA,GACX0C,OAAAA,IASJ,SAASoD,GAAY9vB,GAA2M,IAGxN+vB,EACAC,EAYAC,EAhBwNC,EAAAlwB,EAAxMmwB,SAAAA,OAAQ,IAAAD,GAAOA,EAAAE,EAAApwB,EAAEqwB,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAAE,EAAAtwB,EAAEuwB,OAAAA,OAAM,IAAAD,EAAGjB,GAAeiB,EAAaE,EAAWxwB,EAAtBgqB,UAASyG,EAAAzwB,EAAeuF,KAAAA,OAAI,IAAAkrB,EAAG,YAAWA,EAAAC,EAAA1wB,EAAE2wB,OAAAA,OAAM,IAAAD,EAAG,EAACA,EAAAE,EAAA5wB,EAAE6wB,YAAAA,OAAW,IAAAD,EAAG,EAACA,EAAAE,EAAA9wB,EAAE+wB,WAAAA,OAAU,IAAAD,EAAG,OAAMA,EAAEE,EAAMhxB,EAANgxB,OAAQC,EAAMjxB,EAANixB,OAAQC,EAAUlxB,EAAVkxB,WAAYC,EAAQnxB,EAARmxB,SAAatmB,EAAOqD,GAAAlO,EAAAyP,IACpN2hB,EAAQ,EACRC,GAAa,EAOXC,EAAwB,WAC1BtB,EAAyB,IAAIuB,SAAQ,SAACC,GAClCzB,EAAyByB,CAC7B,GACJ,EAEAF,IAEA,IAMIG,EANEC,EAAmB/B,GAAMpqB,IAASykB,GAOpC0H,IAAqB1H,IACK,kBAAnBwG,EAAY,KACnBiB,EAAwBtI,GAAY,CAAC,EAAG,KAAMqH,EAAa,CACvD/qB,OAAO,IAEX+qB,EAAc,CAAC,EAAG,MAEtB,IACImB,EADElC,EAAYiC,GAAgBnxB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIsK,GAAO,IAAEmf,UAAWwG,KAEzC,WAAfO,IACAY,EAAoBD,GAAgBnxB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/BsK,GAAO,IACVmf,WAAWnD,EAAAA,GAAAA,GAAI2J,GAAahH,UAC5BvJ,WAAYpV,EAAQoV,UAAY,OAGxC,IAAI2R,EAAY,OACZC,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjCtC,EAAU5E,oBAA+B8F,IACzClB,EAAU5E,mBAAqB2E,GAAsBC,IAEzD,IAAQ5E,EAAuB4E,EAAvB5E,mBACJmH,EAAmBtC,IACnBuC,EAAgBvC,IACO,OAAvB7E,IAEAoH,GADAD,EAAmBnH,EAAqBgG,IACJF,EAAS,GAAKE,GAEtD,IAAIqB,EAAc,EACZC,EAAO,SAAChd,GACV,GAAkB,OAAd2c,EAAJ,CAQIV,EAAQ,IACRU,EAAYlsB,KAAKF,IAAIosB,EAAW3c,IAChCic,EAAQ,IACRU,EAAYlsB,KAAKF,IAAIyP,EAAY8c,EAAgBb,EAAOU,IAW5D,IAAMM,GATFF,EADa,OAAbL,EACcA,EAMAjsB,KAAKQ,MAAM+O,EAAY2c,GAAaV,GAGff,GAASe,GAAS,EAAI,GAAK,GAC5DiB,EAAiBjB,GAAS,EAAIgB,EAAmB,EAAIA,EAAmBH,EAC9EC,EAActsB,KAAKD,IAAIysB,EAAkB,GAKvB,aAAdR,GAAyC,OAAbC,IAC5BK,EAAcD,GAElB,IAAIK,EAAUJ,EACVK,EAAiB9C,EACrB,GAAIkB,EAAQ,CAMR,IAAMrL,EAAW4M,EAAcF,EAK3BQ,EAAmB5sB,KAAK6sB,MAAMnN,GAK9BoN,EAAoBpN,EAAW,GAK9BoN,GAAqBpN,GAAY,IAClCoN,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmB5sB,KAAKF,IAAI8sB,EAAkB7B,EAAS,GAIvD,IAAMgC,EAAiB70B,QAAQ00B,EAAmB,GAC9CG,IACmB,YAAf5B,GACA2B,EAAoB,EAAIA,EACpB7B,IACA6B,GAAqB7B,EAAcmB,IAGnB,WAAfjB,IACLwB,EAAiBZ,IAGzB,IAAIn2B,EAAIiK,EAAM,EAAG,EAAGitB,GAChBR,EAAcD,IACdz2B,EAAmB,YAAfu1B,GAA4B4B,EAAiB,EAAI,GAEzDL,EAAU92B,EAAIw2B,CAClB,CAMA,IAAMrnB,EAAQ0nB,EACR,CAAE7H,MAAM,EAAO/nB,MAAO+tB,EAAY,IAClC+B,EAAe3S,KAAK0S,GACtBb,IACA9mB,EAAMlI,MAAQgvB,EAAsB9mB,EAAMlI,QAE9C,IAAM+nB,EAAS7f,EAAT6f,KACD6H,GAAyC,OAAvBxH,IACnBL,EAAO4G,GAAS,EAAIc,GAAeD,EAAgBC,GAAe,GAEtE,IAAMU,EAAmC,OAAbf,IACT,aAAdD,GAA2C,YAAdA,GAA2BpH,GAO7D,OANI2G,GACAA,EAASxmB,EAAMlI,OAEfmwB,GACAC,IAEGloB,CAvGG,CAwGd,EACMmoB,EAAsB,WACxB7C,GAAmBA,EAAgBV,OACnCU,OAAkB7xB,CACtB,EACM+X,EAAS,WACXyb,EAAY,OACZkB,IACA/C,IACAuB,IACAQ,EAAYC,EAAa,IAC7B,EACMc,EAAS,WACXjB,EAAY,WACZV,GAAcA,IACd4B,IACA/C,GACJ,EACMgD,EAAO,WACT,IAAI1B,EAAJ,CAEKpB,IACDA,EAAkBM,EAAO4B,IAC7B,IAAMxb,EAAMsZ,EAAgBtZ,MAC5Bqa,GAAUA,IACO,OAAba,EACAC,EAAYnb,EAAMkb,EAEZC,GAA2B,aAAdF,IACnBE,EAAYnb,GAEE,aAAdib,GACAN,IAEJS,EAAaD,EACbD,EAAW,KAKXD,EAAY,UACZ3B,EAAgB7yB,OArBN,CAsBd,EACI+yB,GACA4C,IAEJ,IAAMC,EAAW,CACbC,KAAI,SAACzB,EAAS0B,GACV,OAAOlD,EAAuBiD,KAAKzB,EAAS0B,EAChD,EACIC,WACA,OAAO7S,GAAsB4R,EACjC,EACIiB,SAAKC,GACLA,EAAUhT,GAAsBgT,GAChClB,EAAckB,EACG,OAAbvB,GAAsB5B,GAA6B,IAAVmB,EAIzCU,EAAY7B,EAAgBtZ,MAAQyc,EAAUhC,EAH9CS,EAAWuB,CAKnB,EACIlJ,eACA,IAAMA,EAA4C,OAAjCuF,EAAU5E,mBACrB2E,GAAsBC,GACtBA,EAAU5E,mBAChB,OAAOvK,GAAsB4J,EACjC,EACIkH,YACA,OAAOA,CACX,EACIA,UAAMiC,GACFA,IAAajC,GAAUnB,IAE3BmB,EAAQiC,EACRL,EAASG,KAAO7S,GAAsB4R,GAC1C,EACIvnB,YACA,OAAOinB,CACX,EACAmB,KAAAA,EACAO,MAAO,WACH1B,EAAY,SACZC,EAAWK,CACf,EACA3C,KAAM,WACF8B,GAAa,EACK,SAAdO,IAEJA,EAAY,OACZX,GAAUA,IACV9a,IACJ,EACAA,OAAQ,WACe,OAAf4b,GACAI,EAAKJ,GACT5b,GACJ,EACAod,SAAU,WACN3B,EAAY,UAChB,EACA4B,OAAQ,SAAClB,GAEL,OADAR,EAAY,EACLK,EAAKG,EAChB,GAEJ,OAAOU,CACX,C,iCCnSMS,GCTN,SAAczd,GACV,IAAImW,EACJ,OAAO,WAGH,YAFe/tB,IAAX+tB,IACAA,EAASnW,KACNmW,CACX,CACJ,CDEsBuH,EAAK,kBAAM/2B,OAAOE,eAAeC,KAAK62B,QAAQ/2B,UAAW,UAAU,IAInFg3B,GAAoB,IAAIrvB,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAgBJ,SAASsvB,GAA2BpxB,EAAOqxB,EAAS9zB,GAAYA,EAARmxB,SAAoC,IAA1BD,EAAUlxB,EAAVkxB,WAAermB,EAAOqD,GAAAlO,EAAAyP,IAOpF,KAN+BgkB,MAC3BG,GAAkB/vB,IAAIiwB,KACrBjpB,EAAQgmB,aACc,WAAvBhmB,EAAQkmB,YACY,IAApBlmB,EAAQyhB,SACS,YAAjBzhB,EAAQtF,MAER,OAAO,EAIX,IACIwqB,EACAC,EAFAqB,GAAa,EAOXC,EAAwB,WAC1BtB,EAAyB,IAAIuB,SAAQ,SAACC,GAClCzB,EAAyByB,CAC7B,GACJ,EAEAF,IACA,IAAMtH,EAA2Cnf,EAA3Cmf,UAAS+J,EAAkClpB,EAAhCqf,SAAAA,OAAQ,IAAA6J,EAAG,IAAGA,EAAE5S,EAAgBtW,EAAhBsW,KAAMiJ,EAAUvf,EAAVuf,MAIvC,GAjCkC,SAAC0J,EAAWjpB,GAAO,MAAsB,WAAjBA,EAAQtF,MACpD,oBAAduuB,IACCnT,GAAuB9V,EAAQsW,KAAK,CA+BjC6S,CAA8BF,EAAWjpB,GAAU,CAanD,IAZA,IAAMopB,EAAkBnE,IAAYvvB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/BsK,GAAO,IACV8lB,OAAQ,EACRN,MAAO,KAEP1lB,EAAQ,CAAE6f,MAAM,EAAO/nB,MAAOunB,EAAU,IACtCkK,EAAwB,GAK1BpS,EAAI,GACAnX,EAAM6f,MAAQ1I,EA/CV,KAgDRnX,EAAQspB,EAAgBT,OAAO1R,GAC/BoS,EAAsB3f,KAAK5J,EAAMlI,OACjCqf,GAvDQ,GAyDZsI,OAAQhsB,EACR4rB,EAAYkK,EACZhK,EAAWpI,EA3DC,GA4DZX,EAAO,QACX,CACA,IAAMtiB,EErFV,SAAsBkS,EAAS+iB,EAAW9J,GAAwF,IAAAhqB,EAAAsD,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAAC8sB,EAAApwB,EAAzEqwB,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAElG,EAAQlqB,EAARkqB,SAAQwG,EAAA1wB,EAAE2wB,OAAAA,OAAM,IAAAD,EAAG,EAACA,EAAAI,EAAA9wB,EAAE+wB,WAAAA,OAAU,IAAAD,EAAG,OAAMA,EAAE3P,EAAInhB,EAAJmhB,KAAMiJ,EAAKpqB,EAALoqB,MACzG+J,GAAejQ,EAAAA,GAAAA,GAAA,GAAM4P,EAAY9J,GACnCI,IACA+J,EAAgBxlB,OAASyb,GAC7B,IAAM1J,EAASiB,GAAwBR,GAMvC,OAFIlkB,MAAMC,QAAQwjB,KACdyT,EAAgBzT,OAASA,GACtB3P,EAAQrT,QAAQy2B,EAAiB,CACpC9D,MAAAA,EACAnG,SAAAA,EACAxJ,OAASzjB,MAAMC,QAAQwjB,GAAmB,SAATA,EACjC0T,KAAM,OACNC,WAAY1D,EAAS,EACrB2D,UAA0B,YAAfvD,EAA2B,YAAc,UAE5D,CFmEsBwD,CAAa9xB,EAAM+xB,MAAM/yB,QAASqyB,EAAW9J,GAASzpB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjEsK,GAAO,IACVqf,SAAAA,EASA/I,KAAMA,EACNiJ,MAAAA,KAEEqK,EAAkB,WAAH,OAAS51B,EAAUsX,QAAQ,EAC1Cue,EAAa,WACfzd,GAAAA,OAAawd,GACb1E,IACAuB,GACJ,EA4EA,OAnEAzyB,EAAU81B,SAAW,WACjBlyB,EAAMqB,IGpHd,SAA0BkmB,EAAShqB,GAAmC,IAA/B2wB,EAAM3wB,EAAN2wB,OAAMG,EAAA9wB,EAAE+wB,WAI3C,OAAO/G,EAHO2G,GAAyB,eADc,IAAAG,EAAG,OAAMA,IACbH,EAAS,IAAM,EAC1D,EACA3G,EAAUzmB,OAAS,EAE7B,CH+GkBqxB,CAAiB5K,EAAWnf,IACtCqmB,GAAcA,IACdwD,GACJ,EAIiB,CACbzB,KAAI,SAACzB,EAAS0B,GACV,OAAOlD,EAAuBiD,KAAKzB,EAAS0B,EAChD,EACA2B,eAAc,SAACC,GAGX,OAFAj2B,EAAUi2B,SAAWA,EACrBj2B,EAAU81B,SAAW,KACd9gB,EACX,EACIsf,WACA,OAAO7S,GAAsBzhB,EAAUqzB,aAAe,EAC1D,EACIiB,SAAKC,GACLv0B,EAAUqzB,YAAc9R,GAAsBgT,EAClD,EACIhC,YACA,OAAOvyB,EAAUk2B,YACrB,EACI3D,UAAMiC,GACNx0B,EAAUk2B,aAAe1B,CAC7B,EACInJ,eACA,OAAO5J,GAAsB4J,EACjC,EACA6I,KAAM,WACE1B,IAEJxyB,EAAUk0B,OAIV7b,GAAYud,GAChB,EACAnB,MAAO,kBAAMz0B,EAAUy0B,OAAO,EAC9B/D,KAAM,WAEF,GADA8B,GAAa,EACe,SAAxBxyB,EAAU+yB,UAAd,CAUA,IAAQM,EAAgBrzB,EAAhBqzB,YACR,GAAIA,EAAa,CACb,IAAM+B,EAAkBnE,IAAYvvB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/BsK,GAAO,IACVslB,UAAU,KAEd1tB,EAAMuyB,gBAAgBf,EAAgBT,OAAOtB,EAtJzC,IAsJoEzvB,MAAOwxB,EAAgBT,OAAOtB,GAAazvB,MAtJ/G,GAuJR,CACAiyB,GAjBU,CAkBd,EACAnB,SAAU,kBAAM10B,EAAUg0B,QAAQ,EAClC1c,OAAQue,EAGhB,CIpLA,SAASO,GAAsBj1B,GAA8C,IAA3CgqB,EAAShqB,EAATgqB,UAAWqG,EAAKrwB,EAALqwB,MAAOc,EAAQnxB,EAARmxB,SAAUD,EAAUlxB,EAAVkxB,WACpDgE,EAAW,WAUb,OATA/D,GAAYA,EAASnH,EAAUA,EAAUzmB,OAAS,IAClD2tB,GAAcA,IAQP,CACHiC,KAAM,EACN/B,MAAO,EACPlH,SAAU,EACV6I,KAAOlf,GACPyf,MAAQzf,GACR0b,KAAO1b,GACPof,KAAM,SAACzB,GAEH,OADAA,IACOD,QAAQC,SACnB,EACArb,OAAStC,GACT0f,SAAW1f,GAEnB,EACA,OAAOwc,EACDP,GAAa,CACX9F,UAAW,CAAC,EAAG,GACfE,SAAU,EACVmG,MAAAA,EACAa,WAAYgE,IAEdA,GACV,CCnCA,IAAMC,GAAoB,CACtB5vB,KAAM,SACN8mB,UAAW,IACXC,QAAS,GACTO,UAAW,IAQTuI,GAAsB,CACxB7vB,KAAM,YACN2kB,SAAU,IAMR/I,GAAO,CACT5b,KAAM,YACN4b,KAAM,CAAC,IAAM,GAAK,IAAM,GACxB+I,SAAU,IAERmL,GAAuB,SAACC,EAAQt1B,GAAoB,IAAhBgqB,EAAShqB,EAATgqB,UACtC,OAAIA,EAAUzmB,OAAS,EACZ6xB,GAEF9wB,EAAeT,IAAIyxB,GACjBA,EAAS7wB,WAAW,SAxBS,CACxCc,KAAM,SACN8mB,UAAW,IACXC,QAAoB,IAsBatC,EAAU,GAtBnB,EAAIpkB,KAAK+f,KAAK,KAAO,GAC7CkH,UAAW,IAsBDsI,GAEHhU,EACX,EC1BMoU,GAAe,SAAC/1B,EAAKiD,GAEvB,MAAY,WAARjD,MAKiB,kBAAViD,IAAsBxF,MAAMC,QAAQuF,OAE1B,kBAAVA,IACNilB,GAAQvjB,KAAK1B,IAAoB,MAAVA,GACvBA,EAAMgC,WAAW,SAK1B,ECrBM+wB,GAAc,IAAIjxB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASkxB,GAAmBz4B,GACxB,IAAA04B,EAAsB14B,EAAE24B,MAAM,GAAI,GAAG/uB,MAAM,KAAIgvB,GAAA7U,EAAAA,GAAAA,GAAA2U,EAAA,GAAxC93B,EAAIg4B,EAAA,GAAEnzB,EAAKmzB,EAAA,GAClB,GAAa,gBAATh4B,EACA,OAAOZ,EACX,IAAAgD,EAAiByC,EAAMuhB,MAAM3d,IAAe,GAArCR,GAAuCkb,EAAAA,GAAAA,GAAA/gB,EAAA,GAAjC,GACb,IAAK6F,EACD,OAAO7I,EACX,IAAM0J,EAAOjE,EAAMnG,QAAQuJ,EAAQ,IAC/BgwB,EAAeL,GAAY3xB,IAAIjG,GAAQ,EAAI,EAG/C,OAFIiI,IAAWpD,IACXozB,GAAgB,KACbj4B,EAAO,IAAMi4B,EAAenvB,EAAO,GAC9C,CACA,IAAMovB,GAAgB,oBAChBC,IAAMx1B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLmnB,IAAO,IACVG,kBAAmB,SAAC7qB,GAChB,IAAMg5B,EAAYh5B,EAAEgnB,MAAM8R,IAC1B,OAAOE,EAAYA,EAAUpU,IAAI6T,IAAoB92B,KAAK,KAAO3B,CACrE,ICnBEi5B,IAAiB11B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB6G,IAAgB,IAEnB+d,MAAAA,GACA+Q,gBAAiB/Q,GACjBgR,aAAchR,GACdiP,KAAMjP,GACNiR,OAAQjR,GAERkR,YAAalR,GACbmR,eAAgBnR,GAChBoR,iBAAkBpR,GAClBqR,kBAAmBrR,GACnBsR,gBAAiBtR,GACjB4Q,OAAAA,GACAW,aAAcX,KAKZY,GAAsB,SAACn3B,GAAG,OAAKy2B,GAAkBz2B,EAAI,ECvB3D,SAASqoB,GAAkBroB,EAAKiD,GAC5B,IAAIm0B,EAAmBD,GAAoBn3B,GAI3C,OAHIo3B,IAAqBb,KACrBa,EAAmBlP,IAEhBkP,EAAiB/O,kBAClB+O,EAAiB/O,kBAAkBplB,QACnCrE,CACV,CCTA,IAAMy4B,GAAoB,SAAC75B,GAAC,MAAK,aAAamH,KAAKnH,EAAE,ECDrD,SAAS85B,GAAOr0B,GACZ,MAAqB,kBAAVA,EACU,IAAVA,EAEQ,OAAVA,EACY,SAAVA,GAA8B,MAAVA,GAAiBo0B,GAAkBp0B,QAD7D,CAGT,CCLA,SAASs0B,GAAat0B,EAAOqxB,EAAWznB,EAAQsH,GAC5C,IACIqW,EADEgN,EAAqBzB,GAAazB,EAAWznB,GAG/C2d,EADA/sB,MAAMC,QAAQmP,IACLwa,EAAAA,GAAAA,GAAOxa,GAGJ,CAAC,KAAMA,GAKvB,IAHA,IAAM4qB,OAAoC74B,IAApBuV,EAAWyR,KAAqBzR,EAAWyR,KAAO3iB,EAAMkB,MAC1EuzB,OAA0B94B,EACxB+4B,EAAsB,GACnBtrB,EAAI,EAAGA,EAAIme,EAAUzmB,OAAQsI,IAIb,OAAjBme,EAAUne,KACVme,EAAUne,GAAW,IAANA,EAAUorB,EAAgBjN,EAAUne,EAAI,IAEvDirB,GAAO9M,EAAUne,KACjBsrB,EAAoB5iB,KAAK1I,GAGD,kBAAjBme,EAAUne,IACA,SAAjBme,EAAUne,IACO,MAAjBme,EAAUne,KACVqrB,EAA0BlN,EAAUne,IAG5C,GAAImrB,GACAG,EAAoB5zB,QACpB2zB,EACA,IAAK,IAAIrrB,EAAI,EAAGA,EAAIsrB,EAAoB5zB,OAAQsI,IAAK,CAEjDme,EADcmN,EAAoBtrB,IACfgc,GAAkBiM,EAAWoD,EACpD,CAEJ,OAAOlN,CACX,C,kICrCA,SAASoN,GAAmBp3B,GAAOA,EAAJq3B,KAAmBr3B,EAAbqwB,MAA4BrwB,EAAbs3B,cAA8Bt3B,EAAfu3B,gBAAiCv3B,EAAhBw3B,iBAAwBx3B,EAAN2wB,OAAkB3wB,EAAV+wB,WAAuB/wB,EAAX6wB,YAAiB7wB,EAAJolB,KAAaplB,EAAPsyB,QAA0B,IAAd3e,EAAUzF,GAAAlO,EAAAyP,IAC/J,QAAS9S,OAAO0R,KAAKsF,GAAYpQ,MACrC,CACA,SAASk0B,GAAmB9jB,EAAYnU,GACpC,OAAOmU,EAAWnU,IAAQmU,EAAoB,SAAKA,CACvD,CCCA,IAAM+jB,GAAqB,SAAC5D,EAAWrxB,EAAO4J,GAA4B,IAApBsH,EAAUrQ,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChE,OAAO,SAAC4tB,GACJ,IAAMyG,EAAkBF,GAAmB9jB,EAAYmgB,IAAc,CAAC,EAMhEzD,EAAQsH,EAAgBtH,OAAS1c,EAAW0c,OAAS,EAK3DuH,EAAsBjkB,EAAhB2e,QAAAA,OAAO,IAAAsF,EAAG,EAACA,EACjBtF,GAAoBlS,GAAsBiQ,GAC1C,IAAMrG,EAAY+M,GAAat0B,EAAOqxB,EAAWznB,EAAQsrB,GAMnDE,EAAiB7N,EAAU,GAC3B8N,EAAiB9N,EAAUA,EAAUzmB,OAAS,GAC9Cw0B,EAAqBxC,GAAazB,EAAW+D,GAC7Cb,EAAqBzB,GAAazB,EAAWgE,GACnD5X,GAAQ6X,IAAuBf,EAAoB,6BAAFz5B,OAA+Bu2B,EAAS,WAAAv2B,OAAUs6B,EAAc,UAAAt6B,OAASu6B,EAAc,OAAAv6B,OAAMs6B,EAAc,+DAAAt6B,OAA8Ds6B,EAAc,8BAAAt6B,OAA6Bu6B,EAAc,+BACnR,IAAIjtB,GAAOtK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACPypB,UAAAA,EACA/J,SAAUxd,EAAMkC,cAChBwc,KAAM,WACHwW,GAAe,IAClBtH,OAAQiC,EACRnB,SAAU,SAACn0B,GACPyF,EAAMqB,IAAI9G,GACV26B,EAAgBxG,UAAYwG,EAAgBxG,SAASn0B,EACzD,EACAk0B,WAAY,WACRA,IACAyG,EAAgBzG,YAAcyG,EAAgBzG,YAClD,IAuBJ,GAjBKkG,GAAoBO,KACrB9sB,GAAOtK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAsK,GACAwqB,GAAqBvB,EAAWjpB,KAQvCA,EAAQqf,WACRrf,EAAQqf,SAAW9J,GAAsBvV,EAAQqf,WAEjDrf,EAAQgmB,cACRhmB,EAAQgmB,YAAczQ,GAAsBvV,EAAQgmB,eAEnDkH,IACAf,GACDxW,KACyB,IAAzBmX,EAAgBpyB,KAKhB,OAAO0vB,GAAuBzU,IAA6BjgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChDsK,GAAO,IAAEwlB,MAAO,IACrBxlB,GAKV,IAMC8I,EAAWqkB,WACRv1B,EAAM+xB,OACN/xB,EAAM+xB,MAAM/yB,mBAAmBw2B,cAK9Bx1B,EAAM+xB,MAAMxa,WAAWmX,SAAU,CAClC,IAAM+G,EAAuBrE,GAA2BpxB,EAAOqxB,EAAWjpB,GAC1E,GAAIqtB,EACA,OAAOA,CACf,CAIA,OAAOpI,GAAajlB,EACxB,CACJ,EC7GA,SAASstB,GAAwB11B,GAC7B,OAAO3E,QAAQ4G,EAAcjC,IAAUA,EAAM6R,IACjD,CCDA,IAAM8jB,GAAoB,SAACp7B,GAAC,MAAK,iBAAiBmH,KAAKnH,EAAE,ECHzD,SAASq7B,GAAczO,EAAK0O,IACG,IAAvB1O,EAAI1lB,QAAQo0B,IACZ1O,EAAIrV,KAAK+jB,EACjB,CACA,SAASC,GAAW3O,EAAK0O,GACrB,IAAM9jB,EAAQoV,EAAI1lB,QAAQo0B,GACtB9jB,GAAS,GACToV,EAAInV,OAAOD,EAAO,EAC1B,CCRwD,IAElDgkB,GAAmB,WACrB,SAAAA,KAAcxkB,EAAAA,GAAAA,GAAA,KAAAwkB,GACVvkB,KAAKwkB,cAAgB,EACzB,CA+BC,OA/BArkB,EAAAA,GAAAA,GAAAokB,EAAA,EAAAh5B,IAAA,MAAAiD,MACD,SAAIkV,GAAS,IAAA+C,EAAA,KAET,OADA2d,GAAcpkB,KAAKwkB,cAAe9gB,GAC3B,kBAAM4gB,GAAW7d,EAAK+d,cAAe9gB,EAAQ,CACxD,GAAC,CAAAnY,IAAA,SAAAiD,MACD,SAAOiW,EAAGC,EAAGqI,GACT,IAAM0X,EAAmBzkB,KAAKwkB,cAAcl1B,OAC5C,GAAKm1B,EAEL,GAAyB,IAArBA,EAIAzkB,KAAKwkB,cAAc,GAAG/f,EAAGC,EAAGqI,QAG5B,IAAK,IAAInV,EAAI,EAAGA,EAAI6sB,EAAkB7sB,IAAK,CAKvC,IAAM8L,EAAU1D,KAAKwkB,cAAc5sB,GACnC8L,GAAWA,EAAQe,EAAGC,EAAGqI,EAC7B,CAER,GAAC,CAAAxhB,IAAA,UAAAiD,MACD,WACI,OAAOwR,KAAKwkB,cAAcl1B,MAC9B,GAAC,CAAA/D,IAAA,QAAAiD,MACD,WACIwR,KAAKwkB,cAAcl1B,OAAS,CAChC,KAACi1B,CAAA,CAlCoB,GCGnBG,GAAU,SAACl2B,GACb,OAAQmlB,MAAM7hB,WAAWtD,GAC7B,EACMm2B,GAAsB,CACxBn3B,aAASrD,GAOPy6B,GAAW,WASb,SAAAA,EAAY7lB,GAAoB,IAAA0H,EAAA,KAAd7P,EAAOvH,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAAC0Q,EAAAA,GAAAA,GAAA,KAAA6kB,GAK1B5kB,KAAK6kB,QAAU,WAMf7kB,KAAK8kB,UAAY,EAMjB9kB,KAAK+kB,YAAc,EAQnB/kB,KAAKglB,kBAAmB,EAIxBhlB,KAAKilB,OAAS,CAAC,EACfjlB,KAAKklB,gBAAkB,SAACn8B,GAAqB,IAAlBgF,IAAMsB,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,KAAAA,UAAA,GAC7BoX,EAAKmF,KAAOnF,EAAKjZ,QACjBiZ,EAAKjZ,QAAUzE,EAEf,IAAQkY,EAAqBmB,GAAAA,MAAdlB,EAAckB,GAAAA,UACzBqE,EAAKse,cAAgB7jB,IACrBuF,EAAKqe,UAAY7jB,EACjBwF,EAAKse,YAAc7jB,EACnB8B,GAAAA,WAAiByD,EAAK0e,wBAGtB1e,EAAKmF,OAASnF,EAAKjZ,SAAWiZ,EAAKwe,OAAOG,QAC1C3e,EAAKwe,OAAOG,OAAOC,OAAO5e,EAAKjZ,SAG/BiZ,EAAKwe,OAAOK,gBACZ7e,EAAKwe,OAAOK,eAAeD,OAAO5e,EAAK/V,eAGvC3C,GAAU0Y,EAAKwe,OAAOM,eACtB9e,EAAKwe,OAAOM,cAAcF,OAAO5e,EAAKjZ,QAE9C,EASAwS,KAAKmlB,sBAAwB,kBAAMniB,GAAAA,WAAiByD,EAAK+e,cAAc,EAUvExlB,KAAKwlB,cAAgB,SAAAz5B,GAAYA,EAATmV,YACFuF,EAAKse,cACnBte,EAAKmF,KAAOnF,EAAKjZ,QACbiZ,EAAKwe,OAAOK,gBACZ7e,EAAKwe,OAAOK,eAAeD,OAAO5e,EAAK/V,eAGnD,EACAsP,KAAKylB,aAAc,EACnBzlB,KAAK4L,KAAO5L,KAAKxS,QAAUuR,EAC3BiB,KAAKglB,iBAAmBN,GAAQ1kB,KAAKxS,SACrCwS,KAAKugB,MAAQ3pB,EAAQ2pB,KACzB,CA8NC,OA7NDpgB,EAAAA,GAAAA,GAAAykB,EAAA,EAAAr5B,IAAA,WAAAiD,MAwCA,SAASk3B,GAIL,OAAO1lB,KAAK2lB,GAAG,SAAUD,EAC7B,GAAC,CAAAn6B,IAAA,KAAAiD,MACD,SAAGiV,EAAW1B,GAAU,IAAA6E,EAAA,KACf5G,KAAKilB,OAAOxhB,KACbzD,KAAKilB,OAAOxhB,GAAa,IAAI8gB,IAEjC,IAAMqB,EAAc5lB,KAAKilB,OAAOxhB,GAAWpD,IAAI0B,GAC/C,MAAkB,WAAd0B,EACO,WACHmiB,IAKA5iB,GAAAA,MAAW,WACF4D,EAAKqe,OAAOG,OAAOS,WACpBjf,EAAK0U,MAEb,GACJ,EAEGsK,CACX,GAAC,CAAAr6B,IAAA,iBAAAiD,MACD,WACI,IAAK,IAAMs3B,KAAiB9lB,KAAKilB,OAC7BjlB,KAAKilB,OAAOa,GAAeplB,OAEnC,GACA,CAAAnV,IAAA,SAAAiD,MAKA,SAAOu3B,EAAeC,GAClBhmB,KAAK+lB,cAAgBA,EACrB/lB,KAAKgmB,kBAAoBA,CAC7B,GACA,CAAAz6B,IAAA,MAAAiD,MAeA,SAAIzF,GAAkB,IAAfgF,IAAMsB,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,KAAAA,UAAA,GACJtB,GAAWiS,KAAK+lB,cAIjB/lB,KAAK+lB,cAAch9B,EAAGiX,KAAKklB,iBAH3BllB,KAAKklB,gBAAgBn8B,EAAGgF,EAKhC,GAAC,CAAAxC,IAAA,kBAAAiD,MACD,SAAgBod,EAAMpe,EAASyT,GAC3BjB,KAAKnQ,IAAIrC,GACTwS,KAAK4L,KAAOA,EACZ5L,KAAK8kB,UAAY7jB,CACrB,GACA,CAAA1V,IAAA,OAAAiD,MAIA,SAAKzF,GACDiX,KAAKklB,gBAAgBn8B,GACrBiX,KAAK4L,KAAO7iB,EACZiX,KAAKsb,OACDtb,KAAKgmB,mBACLhmB,KAAKgmB,mBACb,GACA,CAAAz6B,IAAA,MAAAiD,MAOA,WAII,OAHIm2B,GAAoBn3B,SACpBm3B,GAAoBn3B,QAAQ8S,KAAKN,MAE9BA,KAAKxS,OAChB,GACA,CAAAjC,IAAA,cAAAiD,MAGA,WACI,OAAOwR,KAAK4L,IAChB,GACA,CAAArgB,IAAA,cAAAiD,MAOA,WAEI,OAAOwR,KAAKglB,iBAEJnO,GAAkB/kB,WAAWkO,KAAKxS,SAC9BsE,WAAWkO,KAAK4L,MAAO5L,KAAK8kB,WAClC,CACV,GACA,CAAAv5B,IAAA,QAAAiD,MAYA,SAAMy3B,GAAgB,IAAAC,EAAA,KAElB,OADAlmB,KAAKsb,OACE,IAAIgC,SAAQ,SAACC,GAChB2I,EAAKT,aAAc,EACnBS,EAAKt7B,UAAYq7B,EAAe1I,GAC5B2I,EAAKjB,OAAOkB,gBACZD,EAAKjB,OAAOkB,eAAed,QAEnC,IAAGrG,MAAK,WACAkH,EAAKjB,OAAOmB,mBACZF,EAAKjB,OAAOmB,kBAAkBf,SAElCa,EAAKG,gBACT,GACJ,GACA,CAAA96B,IAAA,OAAAiD,MAKA,WACQwR,KAAKpV,YACLoV,KAAKpV,UAAU0wB,OACXtb,KAAKilB,OAAOqB,iBACZtmB,KAAKilB,OAAOqB,gBAAgBjB,UAGpCrlB,KAAKqmB,gBACT,GACA,CAAA96B,IAAA,cAAAiD,MAKA,WACI,QAASwR,KAAKpV,SAClB,GAAC,CAAAW,IAAA,iBAAAiD,MACD,kBACWwR,KAAKpV,SAChB,GACA,CAAAW,IAAA,UAAAiD,MASA,WACIwR,KAAKumB,iBACLvmB,KAAKsb,OACDtb,KAAKgmB,mBACLhmB,KAAKgmB,mBAEb,KAACpB,CAAA,CA1TY,GA4TjB,SAAS4B,GAAYznB,EAAMnI,GACvB,OAAO,IAAIguB,GAAY7lB,EAAMnI,EACjC,CC3UA,IAAM6vB,GAAgB,SAAC19B,GAAC,OAAK,SAACuI,GAAI,OAAKA,EAAKpB,KAAKnH,EAAE,GCK7C29B,GAAsB,CAAC90B,EAAQkB,GAAID,GAASD,GAASI,GAAID,GCLlD,CACT7C,KAAM,SAACnH,GAAC,MAAW,SAANA,CAAY,EACzB8I,MAAO,SAAC9I,GAAC,OAAKA,CAAC,IDOb49B,GAAyB,SAAC59B,GAAC,OAAK29B,GAAoB7U,KAAK4U,GAAc19B,GAAG,EEJ1E69B,GAAa,GAAHt9B,QAAAspB,EAAAA,GAAAA,GAAO8T,IAAmB,CAAExV,GAAOuC,K,kCCKnD,SAASoT,GAAe75B,EAAezB,EAAKiD,GACpCxB,EAAc85B,SAASv7B,GACvByB,EAAc+5B,SAASx7B,GAAKsE,IAAIrB,GAGhCxB,EAAcg6B,SAASz7B,EAAKi7B,GAAYh4B,GAEhD,CACA,SAASy4B,GAAUj6B,EAAegR,GAC9B,IvFjBkCjV,EuFiB5ByW,EAAWsM,GAAe9e,EAAegR,GAC/CjS,EAAyDyT,EAAWxS,EAAck6B,qBAAqB1nB,GAAU,GAAS,CAAC,EAAC2nB,EAAAp7B,EAAtH0T,cAAAA,OAAa,IAAA0nB,EAAG,CAAC,EAACA,EAAsB/uB,GAAtBrM,EAAE2T,WAA0BzF,GAAAlO,EAAAyP,KAEpD,IAAK,IAAMjQ,KADX6M,GAAM9L,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ8L,GAAWqH,GACC,CAEtBonB,GAAe75B,EAAezB,GvFtBAxC,EuFqBaqP,EAAO7M,GvFnB/C4S,GAAkBpV,GAAKA,EAAEA,EAAEuG,OAAS,IAAM,EAAIvG,GuFqBrD,CACJ,CAuEA,SAASq+B,GAAwB77B,EAAKmU,GAClC,GAAKA,EAGL,OADwBA,EAAWnU,IAAQmU,EAAoB,SAAKA,GAC7CyR,IAC3B,C,sCC3FA,SAASkW,GAAoBt7B,EAAoCR,GAAK,IAAtC+7B,EAAav7B,EAAbu7B,cAAeC,EAAcx7B,EAAdw7B,eACrCC,EAAcF,EAAc1+B,eAAe2C,KAAgC,IAAxBg8B,EAAeh8B,GAExE,OADAg8B,EAAeh8B,IAAO,EACfi8B,CACX,CACA,SAASC,GAAoBj5B,EAAO4J,GAChC,IAAM5K,EAAUgB,EAAMkB,MACtB,IAAI1G,MAAMC,QAAQmP,GAOd,OAAO5K,IAAY4K,EANnB,IAAK,IAAIR,EAAI,EAAGA,EAAIQ,EAAO9I,OAAQsI,IAC/B,GAAIQ,EAAOR,KAAOpK,EACd,OAAO,CAMvB,CACA,SAASk6B,GAAc16B,EAAegR,GAA0D,IAAAlP,EAAAO,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACs4B,EAAA74B,EAA1CstB,MAAAA,OAAK,IAAAuL,EAAG,EAACA,EAAEC,EAAkB94B,EAAlB84B,mBAAoBt2B,EAAIxC,EAAJwC,KAC/Eu2B,EAAsF76B,EAAck6B,qBAAqBlpB,GAAW8pB,EAAAD,EAA9HnoB,WAAAA,OAAU,IAAAooB,EAAG96B,EAAco0B,uBAAsB0G,EAAEroB,EAAaooB,EAAbpoB,cAAkBrH,EAAM6B,GAAA4tB,EAAArsB,IAC3EusB,EAAa/6B,EAAc+5B,SAAS,cACtCa,IACAloB,EAAakoB,GACjB,IAAMI,EAAa,GACbC,EAAqB32B,GACvBtE,EAAcgB,gBACdhB,EAAcgB,eAAek6B,WAAW52B,GAAMhG,EAAA,SACvCC,GACP,IAAMiD,EAAQxB,EAAc+5B,SAASx7B,GAC/BoU,EAAcvH,EAAO7M,GAC3B,IAAKiD,QACerE,IAAhBwV,GACCsoB,GACGZ,GAAqBY,EAAoB18B,GAC7C,iBAEJ,IAAMm4B,GAAep3B,EAAAA,EAAAA,GAAA,CACjB8vB,MAAAA,EACAiC,QAAS,GACNmF,GAAmB9jB,GAAc,CAAC,EAAGnU,IAM5C,GAAIsC,OAAOs6B,wBAAyB,CAChC,IAAMC,EAAWp7B,EAAc+Y,WAAWxd,GAC1C,GAAI6/B,EAAU,CACV,IAAM/J,EAAUxwB,OAAOs6B,wBAAwBC,EAAU78B,EAAKiD,EAAOwU,IACrD,OAAZqb,IACAqF,EAAgBrF,QAAUA,EAC1BqF,EAAgBK,WAAY,EAEpC,CACJ,CACA,IAAIsE,GAAW3E,EAAgBK,YAC1B0D,GAAoBj5B,EAAOmR,GAahC,GAZ6B,WAAzB+jB,EAAgBpyB,OACf9C,EAAMkC,eAAiBgzB,EAAgB1X,YACxCqc,GAAU,GAOV75B,EAAM5D,YACNy9B,GAAU,GAEVA,EACA,iBACJ75B,EAAMrF,MAAMs6B,GAAmBl4B,EAAKiD,EAAOmR,EAAa3S,EAAcs7B,oBAAsBj4B,EAAeT,IAAIrE,GACzG,CAAE+F,MAAM,GACRoyB,IACN,IAAM94B,EAAY4D,EAAM5D,UACpBs5B,GAAwB6D,KACxBA,EAAW1nB,IAAI9U,GACfX,EAAUo0B,MAAK,kBAAM+I,EAAW5lB,OAAO5W,EAAI,KAE/Cy8B,EAAW1nB,KAAK1V,EAAW,EApD/B,IAAK,IAAMW,KAAO6M,EAAQ9M,EAAfC,GA2DX,OALIkU,GACA6d,QAAQnT,IAAI6d,GAAYhJ,MAAK,WACzBvf,GAAiBwnB,GAAUj6B,EAAeyS,EAC9C,IAEGuoB,CACX,CCjGA,SAASO,GAAev7B,EAAew7B,GAAuB,IAAd5xB,EAAOvH,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjDmQ,EAAWsM,GAAe9e,EAAew7B,EAAS5xB,EAAQzH,QAChEpD,EAAkEyT,GAAY,CAAC,EAACipB,EAAA18B,EAA1E2T,WAAAA,OAAU,IAAA+oB,EAAGz7B,EAAco0B,wBAA0B,CAAC,EAACqH,EACzD7xB,EAAQgxB,qBACRloB,EAAa9I,EAAQgxB,oBAMzB,IAAMc,EAAelpB,EACf,kBAAM8d,QAAQnT,IAAIud,GAAc16B,EAAewS,EAAU5I,GAAS,EAClE,kBAAM0mB,QAAQC,SAAS,EAKvBoL,EAAqB37B,EAAc47B,iBAAmB57B,EAAc47B,gBAAgBz0B,KACpF,WAAsB,IAArB00B,EAAYx5B,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EACdy5B,EAAkEppB,EAAUqpB,EAAAD,EAApEzF,cAAAA,OAAa,IAAA0F,EAAG,EAACA,EAAEzF,EAAewF,EAAfxF,gBAAiBC,EAAgBuF,EAAhBvF,iBAC5C,OAAOyF,GAAgBh8B,EAAew7B,EAASnF,EAAgBwF,EAAcvF,EAAiBC,EAAkB3sB,EACpH,EACE,kBAAM0mB,QAAQC,SAAS,EAK7B0L,EAAiBvpB,EAAT0jB,EAAI6F,EAAJ7F,KACR,GAAIA,EAAM,CACN,IAAAt0B,EAA+B,mBAATs0B,EAChB,CAACsF,EAAcC,GACf,CAACA,EAAoBD,GAAaQ,GAAApc,EAAAA,GAAAA,GAAAhe,EAAA,GAFjCq6B,EAAKD,EAAA,GAAEE,EAAIF,EAAA,GAGlB,OAAOC,IAAQnK,MAAK,kBAAMoK,GAAM,GACpC,CAEI,OAAO9L,QAAQnT,IAAI,CAACue,IAAgBC,EAAmB/xB,EAAQwlB,QAEvE,CACA,SAAS4M,GAAgBh8B,EAAew7B,GAAgF,IAAvEnF,EAAah0B,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAAGi0B,EAAej0B,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAAGk0B,EAAgBl0B,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAAGuH,EAAOvH,UAAAC,OAAA,EAAAD,UAAA,QAAAlF,EAC5G69B,EAAa,GACbqB,GAAsBr8B,EAAc47B,gBAAgBz0B,KAAO,GAAKmvB,EAChEgG,EAA+C,IAArB/F,EAC1B,eAAC3rB,EAACvI,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAAC,OAAKuI,EAAI0rB,CAAe,EAC9B,eAAC1rB,EAACvI,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAAC,OAAKg6B,EAAqBzxB,EAAI0rB,CAAe,EAUzD,OATAt6B,MAAMmoB,KAAKnkB,EAAc47B,iBACpBW,KAAKC,IACLjqB,SAAQ,SAACyH,EAAOpP,GACjBoP,EAAMqe,OAAO,iBAAkBmD,GAC/BR,EAAW1nB,KAAKioB,GAAevhB,EAAOwhB,GAAOl8B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtCsK,GAAO,IACVwlB,MAAOiH,EAAgBiG,EAAwB1xB,MAChDonB,MAAK,kBAAMhY,EAAMqe,OAAO,oBAAqBmD,EAAQ,IAC5D,IACOlL,QAAQnT,IAAI6d,EACvB,CACA,SAASwB,GAAgB/kB,EAAGC,GACxB,OAAOD,EAAEglB,iBAAiB/kB,EAC9B,C,sCCpDMglB,IAAuB9W,EAAAA,GAAAA,GAAIxpB,GAAsBmsB,UACjDoU,GAAoBvgC,EAAqBkG,OAC/C,SAASs6B,GAAY58B,GACjB,OAAO,SAACg7B,GAAU,OAAK1K,QAAQnT,IAAI6d,EAAWra,KAAI,SAAA5hB,GAAA,IAAGnB,EAASmB,EAATnB,UAAWgM,EAAO7K,EAAP6K,QAAO,OCP3E,SAA8B5J,EAAegR,GAA0B,IAE/DpT,EAFiDgM,EAAOvH,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFArC,EAAcq4B,OAAO,iBAAkBrnB,GAEnChV,MAAMC,QAAQ+U,GAAa,CAC3B,IAAMgqB,EAAahqB,EAAW2P,KAAI,SAAC6a,GAAO,OAAKD,GAAev7B,EAAew7B,EAAS5xB,EAAQ,IAC9FhM,EAAY0yB,QAAQnT,IAAI6d,EAC5B,MACK,GAA0B,kBAAfhqB,EACZpT,EAAY29B,GAAev7B,EAAegR,EAAYpH,OAErD,CACD,IAAMizB,EAA2C,oBAAf7rB,EAC5B8N,GAAe9e,EAAegR,EAAYpH,EAAQzH,QAClD6O,EACNpT,EAAY0yB,QAAQnT,IAAIud,GAAc16B,EAAe68B,EAAoBjzB,GAC7E,CACA,OAAOhM,EAAUo0B,MAAK,kBAAMhyB,EAAcq4B,OAAO,oBAAqBrnB,EAAW,GACrF,CDVkF8rB,CAAqB98B,EAAepC,EAAWgM,EAAQ,IAAE,CAC3I,CACA,SAASmzB,GAAqB/8B,GAC1B,IAAIvD,EAAUmgC,GAAY58B,GACpB0J,EAoSC,CACHjN,QAASugC,IAAgB,GACzBC,YAAaD,KACbhkB,WAAYgkB,KACZ3wB,SAAU2wB,KACVE,UAAWF,KACXG,WAAYH,KACZn/B,KAAMm/B,MA1SNI,GAAkB,EAKhBC,EAA0B,SAAC/oB,EAAKtD,GAClC,IAAMwB,EAAWsM,GAAe9e,EAAegR,GAC/C,GAAIwB,EAAU,CACuCA,EAAzCE,WAAR,IAAoBD,EAA6BD,EAA7BC,cAAkBrH,EAAM6B,GAAKuF,EAAQhE,IACzD8F,GAAGhV,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQgV,GAAQlJ,GAAWqH,EAClC,CACA,OAAO6B,CACX,EAkBA,SAASrT,EAAe2I,EAAS0zB,GA8B7B,IA7BA,IAAM9gC,EAAQwD,EAAc+Y,WACtB9b,EAAU+C,EAAcu9B,mBAAkB,IAAS,CAAC,EAKpDvC,EAAa,GAKbwC,EAAc,IAAIl6B,IAMpBm6B,EAAkB,CAAC,EAKnBC,EAAsBjP,IAC1BnwB,EAAA,SAMSsM,GACL,IAAMtG,EAAOo4B,GAAqB9xB,GAC5B+yB,EAAYj0B,EAAMpF,GAClB7G,OAAuBN,IAAhBX,EAAM8H,GAAsB9H,EAAM8H,GAAQrH,EAAQqH,GACzDs5B,EAAgB9hC,EAAe2B,GAK/BogC,EAAcv5B,IAASg5B,EAAoBK,EAAU/kB,SAAW,MAClD,IAAhBilB,IACAH,EAAsB9yB,GAO1B,IAAIkzB,EAAcrgC,IAASR,EAAQqH,IAAS7G,IAASjB,EAAM8H,IAASs5B,EAepE,GAXIE,GACAV,GACAp9B,EAAc+9B,yBACdD,GAAc,GAMlBH,EAAUrD,eAAah7B,EAAAA,EAAAA,GAAA,GAAQm+B,IAI7BE,EAAU/kB,UAA4B,OAAhBilB,IAElBpgC,IAASkgC,EAAUK,UAErB9hC,EAAoBuB,IACJ,mBAATA,EACP,iBAOJ,IAAMwgC,EAqKlB,SAAgCrf,EAAMD,GAClC,GAAoB,kBAATA,EACP,OAAOA,IAASC,EAEf,GAAI5iB,MAAMC,QAAQ0iB,GACnB,OAAQD,GAAeC,EAAMC,GAEjC,OAAO,CACX,CA7KqCsf,CAAuBP,EAAUK,SAAUvgC,GAChE0gC,EAAoBF,GAEnB35B,IAASg5B,GACNK,EAAU/kB,WACTklB,GACDF,GAEHhzB,EAAI8yB,GAAuBE,EAK1BQ,EAAiBpiC,MAAMC,QAAQwB,GAAQA,EAAO,CAACA,GAKjD4gC,EAAiBD,EAAe/pB,OAAOgpB,EAAyB,CAAC,IACjD,IAAhBQ,IACAQ,EAAiB,CAAC,GAUtB,IAAAC,EAAoCX,EAA5BY,mBAAAA,OAAkB,IAAAD,EAAG,CAAC,EAACA,EACzBE,GAAOl/B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNi/B,GACAF,GAEDI,EAAgB,SAAClgC,GACnB4/B,GAAoB,EACpBX,EAAY/pB,OAAOlV,GACnBo/B,EAAUpD,eAAeh8B,IAAO,CACpC,EACA,IAAK,IAAMA,KAAOigC,EAAS,CACvB,IAAM7f,EAAO0f,EAAe9/B,GACtBqgB,EAAO2f,EAAmBhgC,GAE5Bk/B,EAAgB7hC,eAAe2C,KAK/BogB,IAASC,EAKLzN,GAAkBwN,IAASxN,GAAkByN,IACxCF,GAAeC,EAAMC,IAASqf,EAC/BQ,EAAclgC,GAOdo/B,EAAUrD,cAAc/7B,IAAO,OAGrBpB,IAATwhB,EAEL8f,EAAclgC,GAIdi/B,EAAYnqB,IAAI9U,QAGNpB,IAATwhB,GAAsB6e,EAAY56B,IAAIrE,GAK3CkgC,EAAclgC,GAOdo/B,EAAUrD,cAAc/7B,IAAO,EAEvC,CAKAo/B,EAAUK,SAAWvgC,EACrBkgC,EAAUY,mBAAqBF,EAI3BV,EAAU/kB,WACV6kB,GAAen+B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQm+B,GAAoBY,IAE3CjB,GAAmBp9B,EAAcS,wBACjC09B,GAAoB,GAOpBA,IAAsBL,GACtB9C,EAAW1nB,KAAIiG,MAAfyhB,GAAUpV,EAAAA,GAAAA,GAASwY,EAAezd,KAAI,SAAC/iB,GAAS,MAAM,CAClDA,UAAWA,EACXgM,SAAOtK,EAAAA,EAAAA,GAAA,CAAIgF,KAAAA,GAASsF,GACvB,KACJ,EAnKIgB,EAAI,EAAGA,EAAI+xB,GAAmB/xB,IAAKtM,EAAnCsM,GA0KT,GAAI4yB,EAAYr2B,KAAM,CAClB,IAAMu3B,EAAoB,CAAC,EAC3BlB,EAAYjrB,SAAQ,SAAChU,GACjB,IAAMogC,EAAiB3+B,EAAc4+B,cAAcrgC,QAC5BpB,IAAnBwhC,IACAD,EAAkBngC,GAAOogC,EAEjC,IACA3D,EAAW1nB,KAAK,CAAE1V,UAAW8gC,GACjC,CACA,IAAIG,EAAgBhiC,QAAQm+B,EAAW14B,QAOvC,OANI86B,IACmB,IAAlB5gC,EAAMU,SAAqBV,EAAMU,UAAYV,EAAMC,SACnDuD,EAAc+9B,yBACfc,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgBpiC,EAAQu+B,GAAc1K,QAAQC,SACzD,CAkBA,MAAO,CACHtvB,eAAAA,EACAgY,UAhBJ,SAAmB3U,EAAMsU,EAAUhP,GAC/B,IAAI+C,EAEJ,GAAIjD,EAAMpF,GAAMsU,WAAaA,EACzB,OAAO0X,QAAQC,UAEsB,QAAxC5jB,EAAK3M,EAAc47B,uBAAoC,IAAPjvB,GAAyBA,EAAG4F,SAAQ,SAACyH,GAAY,IAAIrN,EAAI,OAAuC,QAA/BA,EAAKqN,EAAMhZ,sBAAmC,IAAP2L,OAAgB,EAASA,EAAGsM,UAAU3U,EAAMsU,EAAW,IAChNlP,EAAMpF,GAAMsU,SAAWA,EACvB,IAAMoiB,EAAa/5B,EAAe2I,EAAStF,GAC3C,IAAK,IAAM/F,KAAOmL,EACdA,EAAMnL,GAAK+7B,cAAgB,CAAC,EAEhC,OAAOU,CACX,EAII8D,mBA5PJ,SAA4BC,GACxBtiC,EAAUsiC,EAAa/+B,EAC3B,EA2PIk7B,SAAU,kBAAMxxB,CAAK,EAE7B,CAUA,SAASszB,KAAkC,IAAlBpkB,EAAQvW,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,IAAAA,UAAA,GAC7B,MAAO,CACHuW,SAAAA,EACA0hB,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBgE,mBAAoB,CAAC,EAE7B,CE/SyC,IAEnCS,GAAgB,SAAA7lB,IAAAC,EAAAA,GAAAA,GAAA4lB,EAAA7lB,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAA0lB,GAMlB,SAAAA,EAAYvmB,GAAM,IAAAgB,EAE4D,OAF5D1G,EAAAA,GAAAA,GAAA,KAAAisB,GACdvlB,EAAAJ,EAAAxd,KAAA,KAAM4c,GACNA,EAAKzX,iBAAmByX,EAAKzX,eAAiB+7B,GAAqBtkB,IAAOgB,CAC9E,CAqBa,OArBZtG,EAAAA,GAAAA,GAAA6rB,EAAA,EAAAzgC,IAAA,sCAAAiD,MACD,WACI,IAAQ/E,EAAYuW,KAAKyF,KAAKM,WAAtBtc,QACRuW,KAAKpR,UACD1F,EAAoBO,KACpBuW,KAAKpR,QAAUnF,EAAQwiC,UAAUjsB,KAAKyF,MAE9C,GACA,CAAAla,IAAA,QAAAiD,MAGA,WACIwR,KAAKksB,qCACT,GAAC,CAAA3gC,IAAA,SAAAiD,MACD,WACwBwR,KAAKyF,KAAKM,WAAtBtc,WACyBuW,KAAKyF,KAAKhI,WAAa,CAAC,GAAjDhU,SAEJuW,KAAKksB,qCAEb,GAAC,CAAA3gC,IAAA,UAAAiD,MACD,WAAY,KAACw9B,CAAA,CA9BK,CAASxmB,ICF3BxW,GAAK,EACHm9B,GAAoB,SAAAhmB,IAAAC,EAAAA,GAAAA,GAAA+lB,EAAAhmB,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAA6lB,GACtB,SAAAA,IAAc,IAAA1lB,EAEK,OAFL1G,EAAAA,GAAAA,GAAA,KAAAosB,IACV1lB,EAAAJ,EAAAE,MAAA,KAASlX,YACJL,GAAKA,KAAKyX,CACnB,CAoBa,OApBZtG,EAAAA,GAAAA,GAAAgsB,EAAA,EAAA5gC,IAAA,SAAAiD,MACD,WAAS,IAAAoY,EAAA,KACL,GAAK5G,KAAKyF,KAAKtY,gBAAf,CAEA,IAAAi/B,EAA8CpsB,KAAKyF,KAAKtY,gBAAhDk/B,EAASD,EAATC,UAAWC,EAAcF,EAAdE,eAAgBn9B,EAAMi9B,EAANj9B,OAChBo9B,GAAkBvsB,KAAKyF,KAAK+mB,qBAAuB,CAAC,GAA/DH,UACR,GAAKrsB,KAAKyF,KAAKzX,gBAAkBq+B,IAAcE,EAA/C,CAGA,IAAME,EAAgBzsB,KAAKyF,KAAKzX,eAAeiY,UAAU,QAASomB,EAAW,CAAEl9B,OAAmB,OAAXA,QAA8B,IAAXA,EAAoBA,EAAS6Q,KAAKyF,KAAKM,WAAW5W,SACxJm9B,IAAmBD,GACnBI,EAAczN,MAAK,kBAAMsN,EAAe1lB,EAAK5X,GAAG,GAHpD,CALU,CAUd,GAAC,CAAAzD,IAAA,QAAAiD,MACD,WACI,IAAQk+B,GAAa1sB,KAAKyF,KAAKtY,iBAAmB,CAAC,GAA3Cu/B,SACJA,IACA1sB,KAAKpR,QAAU89B,EAAS1sB,KAAKhR,IAErC,GAAC,CAAAzD,IAAA,UAAAiD,MACD,WAAY,KAAC29B,CAAA,CAxBS,CAAS3mB,ICA7BwiB,GAAa,CACfp9B,UAAW,CACP4a,QAASwmB,IAEbnhC,KAAM,CACF2a,QAAS2mB,KCRXv2B,GAAW,SAAC6O,EAAGC,GAAC,OAAK/S,KAAKgd,IAAIlK,EAAIC,EAAE,EAC1C,SAASioB,GAAWloB,EAAGC,GAEnB,IAAMkoB,EAASh3B,GAAS6O,EAAE7T,EAAG8T,EAAE9T,GACzBi8B,EAASj3B,GAAS6O,EAAE5T,EAAG6T,EAAE7T,GAC/B,OAAOc,KAAK+f,KAAK/f,KAAA0d,IAAAud,EAAU,GAACj7B,KAAA0d,IAAGwd,EAAU,GAC7C,CCEA,IAGMC,GAAU,WACZ,SAAAA,EAAY/oB,EAAOgpB,GAAsD,IAAAtmB,EAAA,KAAA1a,EAAAsD,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAAvC/H,EAAkByE,EAAlBzE,mBAAoB0lC,EAAajhC,EAAbihC,cA8D/C,IA9D4DjtB,EAAAA,GAAAA,GAAA,KAAA+sB,GAI5D9sB,KAAK0H,WAAa,KAIlB1H,KAAKitB,cAAgB,KAIrBjtB,KAAKktB,kBAAoB,KAIzBltB,KAAK+sB,SAAW,CAAC,EAIjB/sB,KAAKgtB,cAAgBn/B,OACrBmS,KAAKmtB,YAAc,WACf,GAAM1mB,EAAKwmB,eAAiBxmB,EAAKymB,kBAAjC,CAEA,IAAMpnB,EAAOsnB,GAAW3mB,EAAKymB,kBAAmBzmB,EAAK4mB,SAC/CC,EAAmC,OAApB7mB,EAAKiB,WAIpB6lB,EAA0BZ,GAAW7mB,EAAKpL,OAAQ,CAAE9J,EAAG,EAAGC,EAAG,KAAQ,EAC3E,GAAKy8B,GAAiBC,EAAtB,CAEA,IAAQlpB,EAAUyB,EAAVzB,MACAnD,EAAckB,GAAAA,UACtBqE,EAAK4mB,QAAQ/sB,MAAIhU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI+X,GAAK,IAAEnD,UAAAA,KAC9B,IAAAssB,EAA4B/mB,EAAKsmB,SAAzBU,EAAOD,EAAPC,QAASC,EAAMF,EAANE,OACZJ,IACDG,GAAWA,EAAQhnB,EAAKwmB,cAAennB,GACvCW,EAAKiB,WAAajB,EAAKwmB,eAE3BS,GAAUA,EAAOjnB,EAAKwmB,cAAennB,EAT3B,CARA,CAkBd,EACA9F,KAAK2tB,kBAAoB,SAAC5pB,EAAO+B,GAC7BW,EAAKwmB,cAAgBlpB,EACrB0C,EAAKymB,kBAAoBU,GAAe9nB,EAAMW,EAAKnf,oBAEnD0b,GAAAA,OAAayD,EAAK0mB,aAAa,EACnC,EACAntB,KAAK6tB,gBAAkB,SAAC9pB,EAAO+B,GAE3B,GADAW,EAAKqnB,MACCrnB,EAAKwmB,eAAiBxmB,EAAKymB,kBAAjC,CAEA,IAAAa,EAAgCtnB,EAAKsmB,SAA7BiB,EAAKD,EAALC,MAAOC,EAAYF,EAAZE,aACTC,EAAUd,GAA0B,kBAAfrpB,EAAMzS,KAC3BmV,EAAKymB,kBACLU,GAAe9nB,EAAMW,EAAKnf,oBAAqBmf,EAAK4mB,SACtD5mB,EAAKiB,YAAcsmB,GACnBA,EAAMjqB,EAAOmqB,GAEjBD,GAAgBA,EAAalqB,EAAOmqB,EAR1B,CASd,EAEKpqB,GAAiBC,GAAtB,CAEA/D,KAAK+sB,SAAWA,EAChB/sB,KAAK1Y,mBAAqBA,EAC1B0Y,KAAKgtB,cAAgBA,GAAiBn/B,OACtC,IAAMiY,EAAO3B,GAAiBJ,GACxBoqB,EAAcP,GAAe9nB,EAAM9F,KAAK1Y,oBACtC+c,EAAU8pB,EAAV9pB,MACAnD,EAAckB,GAAAA,UACtBpC,KAAKqtB,QAAU,EAAA/gC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAM+X,GAAK,IAAEnD,UAAAA,KAC5B,IAAQktB,EAAmBrB,EAAnBqB,eACRA,GACIA,EAAerqB,EAAOqpB,GAAWe,EAAanuB,KAAKqtB,UACvDrtB,KAAKquB,gBAAkB1pB,GAAKL,GAAgBtE,KAAKgtB,cAAe,cAAehtB,KAAK2tB,mBAAoBrpB,GAAgBtE,KAAKgtB,cAAe,YAAahtB,KAAK6tB,iBAAkBvpB,GAAgBtE,KAAKgtB,cAAe,gBAAiBhtB,KAAK6tB,iBAZhO,CAad,CAOC,OAPA1tB,EAAAA,GAAAA,GAAA2sB,EAAA,EAAAvhC,IAAA,iBAAAiD,MACD,SAAeu+B,GACX/sB,KAAK+sB,SAAWA,CACpB,GAAC,CAAAxhC,IAAA,MAAAiD,MACD,WACIwR,KAAKquB,iBAAmBruB,KAAKquB,kBAC7BprB,GAAYjD,KAAKmtB,YACrB,KAACL,CAAA,CApFW,GAsFhB,SAASc,GAAe9nB,EAAMxe,GAC1B,OAAOA,EAAqB,CAAE+c,MAAO/c,EAAmBwe,EAAKzB,QAAWyB,CAC5E,CACA,SAASwoB,GAAc7pB,EAAGC,GACtB,MAAO,CAAE9T,EAAG6T,EAAE7T,EAAI8T,EAAE9T,EAAGC,EAAG4T,EAAE5T,EAAI6T,EAAE7T,EACtC,CACA,SAASu8B,GAAUt+B,EAAYu+B,GAAS,IAAlBhpB,EAAKvV,EAALuV,MAClB,MAAO,CACHA,MAAAA,EACApD,MAAOqtB,GAAcjqB,EAAOkqB,GAAgBlB,IAC5C3yB,OAAQ4zB,GAAcjqB,EAAOmqB,GAAiBnB,IAC9CrhB,SAAUtb,GAAY28B,EAAS,IAEvC,CACA,SAASmB,GAAiBnB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASkB,GAAgBlB,GACrB,OAAOA,EAAQA,EAAQ/9B,OAAS,EACpC,CACA,SAASoB,GAAY28B,EAASvI,GAC1B,GAAIuI,EAAQ/9B,OAAS,EACjB,MAAO,CAAEsB,EAAG,EAAGC,EAAG,GAKtB,IAHA,IAAI+G,EAAIy1B,EAAQ/9B,OAAS,EACrBm/B,EAAmB,KACjBC,EAAYH,GAAgBlB,GAC3Bz1B,GAAK,IACR62B,EAAmBpB,EAAQz1B,KACvB82B,EAAUxtB,UAAYutB,EAAiBvtB,UACvCiL,GAAsB2Y,MAG1BltB,IAEJ,IAAK62B,EACD,MAAO,CAAE79B,EAAG,EAAGC,EAAG,GAEtB,IAAMquB,EAAO7S,GAAsBqiB,EAAUxtB,UAAYutB,EAAiBvtB,WAC1E,GAAa,IAATge,EACA,MAAO,CAAEtuB,EAAG,EAAGC,EAAG,GAEtB,IAAMqN,EAAkB,CACpBtN,GAAI89B,EAAU99B,EAAI69B,EAAiB79B,GAAKsuB,EACxCruB,GAAI69B,EAAU79B,EAAI49B,EAAiB59B,GAAKquB,GAQ5C,OANIhhB,EAAgBtN,IAAM6qB,MACtBvd,EAAgBtN,EAAI,GAEpBsN,EAAgBrN,IAAM4qB,MACtBvd,EAAgBrN,EAAI,GAEjBqN,CACX,CCpJA,SAASywB,GAAWC,GAChB,OAAOA,EAAKl9B,IAAMk9B,EAAKn9B,GAC3B,CACA,SAASo9B,GAAOrgC,GAAuC,IAAhC4J,EAAM/I,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAAGy/B,EAAWz/B,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,IAC7C,OAAOsC,KAAKgd,IAAIngB,EAAQ4J,IAAW02B,CACvC,CACA,SAASC,GAAc9tB,EAAO5I,EAAQD,GAAsB,IAAdqC,EAAMpL,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,GACnD4R,EAAMxG,OAASA,EACfwG,EAAM+tB,YAAc1wB,GAAIjG,EAAO5G,IAAK4G,EAAO3G,IAAKuP,EAAMxG,QACtDwG,EAAMjP,MAAQ28B,GAAWv2B,GAAUu2B,GAAWt2B,IAC1Cw2B,GAAO5tB,EAAMjP,MAAO,EAAG,OAAW2hB,MAAM1S,EAAMjP,UAC9CiP,EAAMjP,MAAQ,GAClBiP,EAAMguB,UACF3wB,GAAIlG,EAAO3G,IAAK2G,EAAO1G,IAAKuP,EAAMxG,QAAUwG,EAAM+tB,aAClDH,GAAO5tB,EAAMguB,YAActb,MAAM1S,EAAMguB,cACvChuB,EAAMguB,UAAY,EAC1B,CACA,SAASC,GAAajuB,EAAO5I,EAAQD,EAAQqC,GACzCs0B,GAAc9tB,EAAMrQ,EAAGyH,EAAOzH,EAAGwH,EAAOxH,EAAG6J,EAASA,EAAOvE,aAAU/L,GACrE4kC,GAAc9tB,EAAMpQ,EAAGwH,EAAOxH,EAAGuH,EAAOvH,EAAG4J,EAASA,EAAOtE,aAAUhM,EACzE,CACA,SAASglC,GAAiB/2B,EAAQg3B,EAAUniC,GACxCmL,EAAO3G,IAAMxE,EAAOwE,IAAM29B,EAAS39B,IACnC2G,EAAO1G,IAAM0G,EAAO3G,IAAMk9B,GAAWS,EACzC,CACA,SAASC,GAAgBj3B,EAAQg3B,EAAUniC,GACvCkiC,GAAiB/2B,EAAOxH,EAAGw+B,EAASx+B,EAAG3D,EAAO2D,GAC9Cu+B,GAAiB/2B,EAAOvH,EAAGu+B,EAASv+B,EAAG5D,EAAO4D,EAClD,CACA,SAASy+B,GAAyBl3B,EAAQhN,EAAQ6B,GAC9CmL,EAAO3G,IAAMrG,EAAOqG,IAAMxE,EAAOwE,IACjC2G,EAAO1G,IAAM0G,EAAO3G,IAAMk9B,GAAWvjC,EACzC,CACA,SAASmkC,GAAqBn3B,EAAQhN,EAAQ6B,GAC1CqiC,GAAyBl3B,EAAOxH,EAAGxF,EAAOwF,EAAG3D,EAAO2D,GACpD0+B,GAAyBl3B,EAAOvH,EAAGzF,EAAOyF,EAAG5D,EAAO4D,EACxD,CCZA,SAAS2+B,GAA4BZ,EAAMn9B,EAAKC,GAC5C,MAAO,CACHD,SAAatH,IAARsH,EAAoBm9B,EAAKn9B,IAAMA,OAAMtH,EAC1CuH,SAAavH,IAARuH,EACCk9B,EAAKl9B,IAAMA,GAAOk9B,EAAKl9B,IAAMk9B,EAAKn9B,UAClCtH,EAEd,CAcA,SAASslC,GAA4BC,EAAYC,GAC7C,IAAIl+B,EAAMk+B,EAAgBl+B,IAAMi+B,EAAWj+B,IACvCC,EAAMi+B,EAAgBj+B,IAAMg+B,EAAWh+B,IAG3C,GAAIi+B,EAAgBj+B,IAAMi+B,EAAgBl+B,IACtCi+B,EAAWh+B,IAAMg+B,EAAWj+B,IAAK,KAAAy3B,EACpB,CAACx3B,EAAKD,GAAlBA,EAAGy3B,EAAA,GAAEx3B,EAAGw3B,EAAA,EACb,CACA,MAAO,CAAEz3B,IAAAA,EAAKC,IAAAA,EAClB,CAuCA,IAAMk+B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHv+B,IAAKw+B,GAAoBH,EAAaC,GACtCr+B,IAAKu+B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,SAASC,GAASpuB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASquB,GAAuBrkC,GAAgC,IAA7BqI,EAAGrI,EAAHqI,IAC/B,MAAO,CACHxD,EAAG,CAAEa,IAF+B1F,EAAJwI,KAEhB7C,IAF2B3F,EAALsI,OAGtCxD,EAAG,CAAEY,IAAK2C,EAAK1C,IAHoC3F,EAANuI,QAKrD,CCVA,SAAS+7B,GAAgBr+B,GACrB,YAAiB7H,IAAV6H,GAAiC,IAAVA,CAClC,CACA,SAASs+B,GAAQvkC,GAA4B,IAAzBiG,EAAKjG,EAALiG,MAAOsD,EAAMvJ,EAANuJ,OAAQC,EAAMxJ,EAANwJ,OAC/B,OAAS86B,GAAgBr+B,KACpBq+B,GAAgB/6B,KAChB+6B,GAAgB96B,EACzB,CACA,SAAS0B,GAAa+C,GAClB,OAAQs2B,GAASt2B,IACbu2B,GAAev2B,IACfA,EAAOlJ,GACPkJ,EAAO9E,QACP8E,EAAO7E,SACP6E,EAAO5E,OACf,CACA,SAASm7B,GAAev2B,GACpB,OAAOw2B,GAAcx2B,EAAOpJ,IAAM4/B,GAAcx2B,EAAOnJ,EAC3D,CACA,SAAS2/B,GAAchiC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAASiiC,GAAWpsB,EAAOrS,EAAOg9B,GAG9B,OAAOA,EADQh9B,GADYqS,EAAQ2qB,EAGvC,CAIA,SAAS0B,GAAgBrsB,EAAO4qB,EAAWj9B,EAAOg9B,EAAa2B,GAI3D,YAHiBxmC,IAAbwmC,IACAtsB,EAAQosB,GAAWpsB,EAAOssB,EAAU3B,IAEjCyB,GAAWpsB,EAAOrS,EAAOg9B,GAAeC,CACnD,CAIA,SAAS2B,GAAehC,GAAuD,IAAjDK,EAAS5/B,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAAG2C,EAAK3C,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAAG2/B,EAAW3/B,UAAAC,OAAA,EAAAD,UAAA,QAAAlF,EAAEwmC,EAAQthC,UAAAC,OAAA,EAAAD,UAAA,QAAAlF,EACzEykC,EAAKn9B,IAAMi/B,GAAgB9B,EAAKn9B,IAAKw9B,EAAWj9B,EAAOg9B,EAAa2B,GACpE/B,EAAKl9B,IAAMg/B,GAAgB9B,EAAKl9B,IAAKu9B,EAAWj9B,EAAOg9B,EAAa2B,EACxE,CAIA,SAASE,GAAcC,EAAG/kC,GAAY,IAAR6E,EAAC7E,EAAD6E,EAAGC,EAAC9E,EAAD8E,EAC7B+/B,GAAeE,EAAIlgC,EAAGA,EAAEq+B,UAAWr+B,EAAEoB,MAAOpB,EAAEo+B,aAC9C4B,GAAeE,EAAIjgC,EAAGA,EAAEo+B,UAAWp+B,EAAEmB,MAAOnB,EAAEm+B,YAClD,CAuDA,SAAS+B,GAAc/+B,GACnB,OAAIg/B,OAAOC,UAAUj/B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAASk/B,GAActC,EAAMh5B,GACzBg5B,EAAKn9B,IAAMm9B,EAAKn9B,IAAMmE,EACtBg5B,EAAKl9B,IAAMk9B,EAAKl9B,IAAMkE,CAC1B,CAMA,SAASu7B,GAAcvC,EAAMwC,EAAUtiC,GAA8B,IAAAo6B,GAAApc,EAAAA,GAAAA,GAAAhe,EAAA,GAA3BvD,EAAG29B,EAAA,GAAEmI,EAAQnI,EAAA,GAAEoI,EAASpI,EAAA,GACxDqI,OAAuCpnC,IAA1BinC,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EtC,EAAc1wB,GAAIswB,EAAKn9B,IAAKm9B,EAAKl9B,IAAK6/B,GAE5CX,GAAehC,EAAMwC,EAAW7lC,GAAM6lC,EAAWC,GAAWrC,EAAaoC,EAAWp/B,MACxF,CAIA,IAAMw/B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKv/B,GACvB4/B,GAAcL,EAAIlgC,EAAGW,EAAWigC,IAChCL,GAAcL,EAAIjgC,EAAGU,EAAWkgC,GACpC,CCpHA,SAASE,GAAmBjjC,EAAUk/B,GAClC,OAAOwC,GHeX,SAA4B/rB,EAAOupB,GAC/B,IAAKA,EACD,OAAOvpB,EACX,IAAMutB,EAAUhE,EAAe,CAAEh9B,EAAGyT,EAAM9P,KAAM1D,EAAGwT,EAAMjQ,MACnDy9B,EAAcjE,EAAe,CAAEh9B,EAAGyT,EAAMhQ,MAAOxD,EAAGwT,EAAM/P,SAC9D,MAAO,CACHF,IAAKw9B,EAAQ/gC,EACb0D,KAAMq9B,EAAQhhC,EACd0D,OAAQu9B,EAAYhhC,EACpBwD,MAAOw9B,EAAYjhC,EAE3B,CG1BmCkhC,CAAmBpjC,EAAS0U,wBAAyBwqB,GACxF,CCJA,IAAMmE,GAAmB,SAAHhmC,GAAoB,IAAdyB,EAAOzB,EAAPyB,QACxB,OAAOA,EAAUA,EAAQwkC,cAAcC,YAAc,IACzD,ECgBMC,GAAsB,IAAIjpB,QAK1BkpB,GAAyB,WAC3B,SAAAA,EAAYnlC,IAAe+S,EAAAA,GAAAA,GAAA,KAAAoyB,GAIvBnyB,KAAKoyB,eAAiB,KACtBpyB,KAAKqyB,YAAa,EAClBryB,KAAKsyB,iBAAmB,KACxBtyB,KAAKgvB,YAAc,CAAEp+B,EAAG,EAAGC,EAAG,GAI9BmP,KAAKuyB,aAAc,EACnBvyB,KAAKwyB,uBAAwB,EAI7BxyB,KAAKyyB,QC9BY,CACrB7hC,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,IDgCjCsO,KAAKhT,cAAgBA,CACzB,CA6YC,OA7YAmT,EAAAA,GAAAA,GAAAgyB,EAAA,EAAA5mC,IAAA,QAAAiD,MACD,SAAMkkC,GAA4C,IAAAjsB,EAAA,KAAA1a,EAAAsD,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACsjC,EAAA5mC,EAA3B6mC,aAAAA,OAAY,IAAAD,GAAQA,EAI7BxlC,EAAoB6S,KAAKhT,cAAzBG,gBACR,IAAIA,IAAiD,IAA9BA,EAAgBk/B,UAAvC,CAEA,IAAM+B,EAAiB,SAACrqB,GAGpB0C,EAAKosB,gBACDD,GACAnsB,EAAKmsB,aAAazuB,GAAiBJ,EAAO,QAAQM,MAE1D,EACMopB,EAAU,SAAC1pB,EAAO+B,GAEpB,IAAAgtB,EAA+CrsB,EAAKV,WAA5Cjb,EAAIgoC,EAAJhoC,KAAMioC,EAAeD,EAAfC,gBAAiBC,EAAWF,EAAXE,YAC/B,IAAIloC,GAASioC,IACLtsB,EAAK2rB,gBACL3rB,EAAK2rB,iBACT3rB,EAAK2rB,eAAiBjtB,GAAcra,GAE/B2b,EAAK2rB,gBALd,CAQA3rB,EAAK4rB,YAAa,EAClB5rB,EAAK6rB,iBAAmB,KACxB7rB,EAAKwsB,qBACDxsB,EAAKzZ,cAAcgQ,aACnByJ,EAAKzZ,cAAcgQ,WAAWk2B,oBAAqB,EACnDzsB,EAAKzZ,cAAcgQ,WAAW5E,YAASjO,GAK3CgmC,IAAS,SAACvB,GACN,IAAIphC,EAAUiZ,EAAK0sB,mBAAmBvE,GAAMl/B,OAAS,EAIrD,GAAImD,GAAQ3C,KAAK1C,GAAU,CACvB,IAAQwP,EAAeyJ,EAAKzZ,cAApBgQ,WACR,GAAIA,GAAcA,EAAW5R,OAAQ,CACjC,IAAMgoC,EAAep2B,EAAW5R,OAAOioC,UAAUzE,GACjD,GAAIwE,EAEA5lC,EADemhC,GAAWyE,IACNthC,WAAWtE,GAAW,IAElD,CACJ,CACAiZ,EAAKuoB,YAAYJ,GAAQphC,CAC7B,IAEIwlC,GACAhwB,GAAAA,QAAa,kBAAMgwB,EAAYjvB,EAAO+B,EAAK,IAAE,GAAO,GAExD,IAAQ9X,EAAmByY,EAAKzZ,cAAxBgB,eACRA,GAAkBA,EAAeiY,UAAU,aAAa,EAjCxD,CAkCJ,EACMynB,EAAS,SAAC3pB,EAAO+B,GAEnB,IAAAwtB,EAAyE7sB,EAAKV,WAAtEgtB,EAAeO,EAAfP,gBAAiBQ,EAAiBD,EAAjBC,kBAAmBC,EAAeF,EAAfE,gBAAiBC,EAAMH,EAANG,OAE7D,GAAKV,GAAoBtsB,EAAK2rB,eAA9B,CAEA,IAAQ13B,EAAWoL,EAAXpL,OAER,GAAI64B,GAA+C,OAA1B9sB,EAAK6rB,iBAM1B,OALA7rB,EAAK6rB,iBAAmBoB,GAAoBh5B,QAEd,OAA1B+L,EAAK6rB,kBACLkB,GAAmBA,EAAgB/sB,EAAK6rB,mBAKhD7rB,EAAKktB,WAAW,IAAK7tB,EAAKzB,MAAO3J,GACjC+L,EAAKktB,WAAW,IAAK7tB,EAAKzB,MAAO3J,GAOjC+L,EAAKzZ,cAAce,SAKnB0lC,GAAUA,EAAO1vB,EAAO+B,EAzBd,CA0Bd,EACMmoB,EAAe,SAAClqB,EAAO+B,GAAI,OAAKW,EAAK6U,KAAKvX,EAAO+B,EAAK,EAC5D9F,KAAK4zB,WAAa,IAAI9G,GAAW4F,EAAa,CAC1CtE,eAAAA,EACAX,QAAAA,EACAC,OAAAA,EACAO,aAAAA,GACD,CACC3mC,mBAAoB0Y,KAAKhT,cAAc6mC,wBACvC7G,cAAe+E,GAAiB/xB,KAAKhT,gBA9F/B,CAgGd,GAAC,CAAAzB,IAAA,OAAAiD,MACD,SAAKuV,EAAO+B,GACR,IAAMusB,EAAaryB,KAAKqyB,WAExB,GADAryB,KAAKkC,SACAmwB,EAAL,CAEA,IAAQrmB,EAAalG,EAAbkG,SACRhM,KAAKimB,eAAeja,GACpB,IAAQ8nB,EAAc9zB,KAAK+F,WAAnB+tB,UACJA,GACA9wB,GAAAA,QAAa,kBAAM8wB,EAAU/vB,EAAO+B,EAAK,GALnC,CAOd,GAAC,CAAAva,IAAA,SAAAiD,MACD,WACIwR,KAAKqyB,YAAa,EAClB,IAAA0B,EAAuC/zB,KAAKhT,cAApCgQ,EAAU+2B,EAAV/2B,WAAYhP,EAAc+lC,EAAd/lC,eAChBgP,IACAA,EAAWk2B,oBAAqB,GAEpClzB,KAAK4zB,YAAc5zB,KAAK4zB,WAAW9F,MACnC9tB,KAAK4zB,gBAAazpC,GACU6V,KAAK+F,WAAzBgtB,iBACgB/yB,KAAKoyB,iBACzBpyB,KAAKoyB,iBACLpyB,KAAKoyB,eAAiB,MAE1BpkC,GAAkBA,EAAeiY,UAAU,aAAa,EAC5D,GAAC,CAAA1a,IAAA,aAAAiD,MACD,SAAWogC,EAAMoF,EAAQt5B,GACrB,IAAQ5P,EAASkV,KAAK+F,WAAdjb,KAER,GAAK4P,GAAWu5B,GAAWrF,EAAM9jC,EAAMkV,KAAKsyB,kBAA5C,CAEA,IAAM4B,EAAYl0B,KAAKmzB,mBAAmBvE,GACtCjjB,EAAO3L,KAAKgvB,YAAYJ,GAAQl0B,EAAOk0B,GAEvC5uB,KAAKuyB,aAAevyB,KAAKuyB,YAAY3D,KACrCjjB,EP7KZ,SAA0BtH,EAAKtY,EAAgB0mC,GAAS,IAArBhhC,EAAG1F,EAAH0F,IAAKC,EAAG3F,EAAH2F,IASpC,YARYvH,IAARsH,GAAqB4S,EAAQ5S,EAE7B4S,EAAQouB,EAAUn0B,GAAI7M,EAAK4S,EAAOouB,EAAQhhC,KAAOE,KAAKD,IAAI2S,EAAO5S,QAEpDtH,IAARuH,GAAqB2S,EAAQ3S,IAElC2S,EAAQouB,EAAUn0B,GAAI5M,EAAK2S,EAAOouB,EAAQ/gC,KAAOC,KAAKF,IAAI4S,EAAO3S,IAE9D2S,CACX,COmKmB8vB,CAAiBxoB,EAAM3L,KAAKuyB,YAAY3D,GAAO5uB,KAAKyyB,QAAQ7D,KAEvEsF,EAAUrkC,IAAI8b,EAPJ,CAQd,GAAC,CAAApgB,IAAA,qBAAAiD,MACD,WAAqB,IACbmL,EADaiN,EAAA,KAEjBwtB,EAAyCp0B,KAAK+F,WAAtCsuB,EAAeD,EAAfC,gBAAiBvE,EAAWsE,EAAXtE,YACnB1kC,EAAS4U,KAAKhT,cAAcgQ,aAC7BgD,KAAKhT,cAAcgQ,WAAW5R,OAC7B4U,KAAKhT,cAAcgQ,WAAWs3B,SAAQ,GACG,QAAxC36B,EAAKqG,KAAKhT,cAAcgQ,kBAA+B,IAAPrD,OAAgB,EAASA,EAAGvO,OAC7EmpC,EAAkBv0B,KAAKuyB,YACzB8B,GAAmB7rC,EAAY6rC,GAC1Br0B,KAAKuyB,cACNvyB,KAAKuyB,YAAcvyB,KAAKw0B,yBAKxBx0B,KAAKuyB,eADL8B,IAAmBjpC,IPnKnC,SAAiCioC,EAASvkC,GAAgC,IAA5BsF,EAAGtF,EAAHsF,IAAKG,EAAIzF,EAAJyF,KAAMD,EAAMxF,EAANwF,OAAQD,EAAKvF,EAALuF,MAC7D,MAAO,CACHzD,EAAG4+B,GAA4B6D,EAAUziC,EAAG2D,EAAMF,GAClDxD,EAAG2+B,GAA4B6D,EAAUxiC,EAAGuD,EAAKE,GAEzD,CO+JmCmgC,CAAwBrpC,EAAOioC,UAAWgB,GAMrEr0B,KAAKyyB,QP5Gb,WAA0D,IAA9B3C,EAAWzgC,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAGugC,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHh/B,EAAGi/B,GAAmBC,EAAa,OAAQ,SAC3Cj/B,EAAGg/B,GAAmBC,EAAa,MAAO,UAElD,COiGuB4E,CAAmB5E,GAK9ByE,IAAoBv0B,KAAKuyB,aACzBnnC,GACA4U,KAAKuyB,cACJvyB,KAAKwyB,uBACNrC,IAAS,SAACvB,GACFhoB,EAAKusB,mBAAmBvE,KACxBhoB,EAAK2rB,YAAY3D,GPrIrC,SAA+BxjC,EAAQmnC,GACnC,IAAMoC,EAAsB,CAAC,EAO7B,YANwBxqC,IAApBooC,EAAY9gC,MACZkjC,EAAoBljC,IAAM8gC,EAAY9gC,IAAMrG,EAAOqG,UAE/BtH,IAApBooC,EAAY7gC,MACZijC,EAAoBjjC,IAAM6gC,EAAY7gC,IAAMtG,EAAOqG,KAEhDkjC,CACX,CO4H6CC,CAAsBxpC,EAAOioC,UAAUzE,GAAOhoB,EAAK2rB,YAAY3D,IAEhG,GAER,GAAC,CAAArjC,IAAA,wBAAAiD,MACD,WACI,IAAAqmC,EAAmE70B,KAAK+F,WAA/CwsB,EAAWsC,EAA5BR,gBAA8BS,EAAwBD,EAAxBC,yBACtC,IAAKvC,IAAgB/pC,EAAY+pC,GAC7B,OAAO,EACX,IAAMwC,EAAqBxC,EAAY/kC,QACvC0e,GAAiC,OAAvB6oB,EAA6B,0GACvC,IAAQ/3B,EAAegD,KAAKhT,cAApBgQ,WAER,IAAKA,IAAeA,EAAW5R,OAC3B,OAAO,EACX,IAAM4pC,EFpOd,SAAwBl4B,EAASm4B,EAAoB3tC,GACjD,IAAM4tC,EAAcvD,GAAmB70B,EAASxV,GACxC6tC,EAAWF,EAAXE,OAKR,OAJIA,IACAjE,GAAcgE,EAAYtkC,EAAGukC,EAAOz6B,OAAO9J,GAC3CsgC,GAAcgE,EAAYrkC,EAAGskC,EAAOz6B,OAAO7J,IAExCqkC,CACX,CE4N+BE,CAAeL,EAAoB/3B,EAAWyM,KAAMzJ,KAAKhT,cAAc6mC,yBAC1FwB,EP9KZ,SAAiChC,EAAW2B,GACxC,MAAO,CACHpkC,EAAG6+B,GAA4B4D,EAAUziC,EAAGokC,EAAepkC,GAC3DC,EAAG4+B,GAA4B4D,EAAUxiC,EAAGmkC,EAAenkC,GAEnE,COyKkCykC,CAAwBt4B,EAAW5R,OAAOioC,UAAW2B,GAK/E,GAAIF,EAA0B,CAC1B,IAAMS,EAAkBT,ELtOpC,SAAgChmC,GAAW,IAAR8B,EAAC9B,EAAD8B,EAAGC,EAAC/B,EAAD+B,EAClC,MAAO,CAAEuD,IAAKvD,EAAEY,IAAK4C,MAAOzD,EAAEc,IAAK4C,OAAQzD,EAAEa,IAAK6C,KAAM3D,EAAEa,IAC9D,CKoO6D+jC,CAAwBH,IACzEr1B,KAAKwyB,wBAA0B+C,EAC3BA,IACAF,EAAsBjF,GAAwBmF,GAEtD,CACA,OAAOF,CACX,GAAC,CAAA9pC,IAAA,iBAAAiD,MACD,SAAewd,GAAU,IAAAka,EAAA,KACrBuP,EAAoGz1B,KAAK+F,WAAjGjb,EAAI2qC,EAAJ3qC,KAAM4qC,EAAYD,EAAZC,aAAc5F,EAAW2F,EAAX3F,YAAa6F,EAAcF,EAAdE,eAAgBC,EAAgBH,EAAhBG,iBAAkBC,EAAmBJ,EAAnBI,oBACrEtD,EAAcvyB,KAAKuyB,aAAe,CAAC,EACnCuD,EAAqB3F,IAAS,SAACvB,GACjC,GAAKqF,GAAWrF,EAAM9jC,EAAMo7B,EAAKoM,kBAAjC,CAGA,IAAI5yB,EAAc6yB,GAAeA,EAAY3D,IAAU,CAAC,EACpDgH,IACAl2B,EAAa,CAAEjO,IAAK,EAAGC,IAAK,IAOhC,IAAM4oB,EAAkBwV,EAAc,IAAM,IACtC1V,EAAgB0V,EAAc,GAAK,IACnChW,GAAOxtB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACTgF,KAAM,UACN0a,SAAU0pB,EAAe1pB,EAAS4iB,GAAQ,EAC1CtU,gBAAAA,EACAF,cAAAA,EACAF,aAAc,IACdvB,UAAW,EACXC,UAAW,IACR+c,GACAj2B,GAKP,OAAOwmB,EAAK6P,wBAAwBnH,EAAM9U,EA1B1C,CA2BJ,IAEA,OAAOwD,QAAQnT,IAAI2rB,GAAoB9W,KAAK6W,EAChD,GAAC,CAAAtqC,IAAA,0BAAAiD,MACD,SAAwBogC,EAAMlvB,GAC1B,IAAMw0B,EAAYl0B,KAAKmzB,mBAAmBvE,GAC1C,OAAOsF,EAAU/qC,MAAMs6B,GAAmBmL,EAAMsF,EAAW,EAAGx0B,GAClE,GAAC,CAAAnU,IAAA,gBAAAiD,MACD,WAAgB,IAAAwnC,EAAA,KACZ7F,IAAS,SAACvB,GAAI,OAAKoH,EAAK7C,mBAAmBvE,GAAMtT,MAAM,GAC3D,GACA,CAAA/vB,IAAA,qBAAAiD,MAMA,SAAmBogC,GACf,IAAMqH,EAAU,QAAUrH,EAAK/wB,cACzBrU,EAAQwW,KAAKhT,cAAc+Y,WAC3BmwB,EAAsB1sC,EAAMysC,GAClC,OAAOC,GAEDl2B,KAAKhT,cAAc+5B,SAAS6H,GAAOplC,EAAMU,QAAUV,EAAMU,QAAQ0kC,QAAQzkC,IAAc,EACjG,GAAC,CAAAoB,IAAA,eAAAiD,MACD,SAAa6V,GAAO,IAAA8xB,EAAA,KAChBhG,IAAS,SAACvB,GAGN,GAAKqF,GAAWrF,EAFCuH,EAAKpwB,WAAdjb,KAEoBqrC,EAAK7D,kBAAjC,CAEA,IAAQt1B,EAAem5B,EAAKnpC,cAApBgQ,WACFk3B,EAAYiC,EAAKhD,mBAAmBvE,GAC1C,GAAI5xB,GAAcA,EAAW5R,OAAQ,CACjC,IAAAgrC,EAAqBp5B,EAAW5R,OAAOioC,UAAUzE,GAAzCn9B,EAAG2kC,EAAH3kC,IAAKC,EAAG0kC,EAAH1kC,IACbwiC,EAAUrkC,IAAIwU,EAAMuqB,GAAQtwB,GAAI7M,EAAKC,EAAK,IAC9C,CANU,CAOd,GACJ,GACA,CAAAnG,IAAA,iCAAAiD,MAKA,WAAiC,IAAA6nC,EAAA,KAC7B,GAAKr2B,KAAKhT,cAAcQ,QAAxB,CAEA,IAAA8oC,EAAkCt2B,KAAK+F,WAA/Bjb,EAAIwrC,EAAJxrC,KAAMupC,EAAeiC,EAAfjC,gBACNr3B,EAAegD,KAAKhT,cAApBgQ,WACR,GAAKxU,EAAY6rC,IAAqBr3B,GAAegD,KAAKuyB,YAA1D,CAMAvyB,KAAK6yB,gBAKL,IAAM0D,EAAc,CAAE3lC,EAAG,EAAGC,EAAG,GAC/Bs/B,IAAS,SAACvB,GACN,IAAMsF,EAAYmC,EAAKlD,mBAAmBvE,GAC1C,GAAIsF,EAAW,CACX,IAAMjZ,EAASiZ,EAAUxkC,MACzB6mC,EAAY3H,GPpR5B,SAAoBv2B,EAAQD,GACxB,IAAIqC,EAAS,GACP+7B,EAAe7H,GAAWt2B,GAC1Bo+B,EAAe9H,GAAWv2B,GAOhC,OANIq+B,EAAeD,EACf/7B,EAAS4W,GAASjZ,EAAO3G,IAAK2G,EAAO1G,IAAM8kC,EAAcn+B,EAAO5G,KAE3D+kC,EAAeC,IACpBh8B,EAAS4W,GAAShZ,EAAO5G,IAAK4G,EAAO3G,IAAM+kC,EAAcr+B,EAAO3G,MAE7DD,EAAM,EAAG,EAAGiJ,EACvB,COyQoCD,CAAW,CAAE/I,IAAKwpB,EAAQvpB,IAAKupB,GAAUob,EAAK9D,YAAY3D,GAClF,CACJ,IAIA,IAAQ/3B,EAAsBmJ,KAAKhT,cAAc+Y,WAAzClP,kBACRmJ,KAAKhT,cAAcQ,QAAQsJ,MAAMvF,UAAYsF,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNmG,EAAWyM,MAAQzM,EAAWyM,KAAKitB,eACnC15B,EAAW25B,eACX32B,KAAKizB,qBAKL9C,IAAS,SAACvB,GACN,GAAKqF,GAAWrF,EAAM9jC,EAAM,MAA5B,CAKA,IAAMopC,EAAYmC,EAAKlD,mBAAmBvE,GAC1CgI,EAAqBP,EAAK9D,YAAY3D,GAA9Bn9B,EAAGmlC,EAAHnlC,IAAKC,EAAGklC,EAAHllC,IACbwiC,EAAUrkC,IAAIyO,GAAI7M,EAAKC,EAAK6kC,EAAY3H,IAN9B,CAOd,GAzCU,CAJA,CA8Cd,GAAC,CAAArjC,IAAA,eAAAiD,MACD,WAAe,IAAAqoC,EAAA,KACX,GAAK72B,KAAKhT,cAAcQ,QAAxB,CAEA0kC,GAAoBriC,IAAImQ,KAAKhT,cAAegT,MAC5C,IAIM82B,EAAsBxyB,GAJZtE,KAAKhT,cAAcQ,QAIkB,eAAe,SAACuW,GACjE,IAAAgzB,EAAsCF,EAAK9wB,WAAnCjb,EAAIisC,EAAJjsC,KAAIksC,EAAAD,EAAEn+B,aACd9N,SAD0B,IAAAksC,GAAOA,IACTH,EAAK1tC,MAAM4a,EACvC,IACMkzB,EAAyB,WAEvBzuC,EADwBquC,EAAK9wB,WAAzBsuB,mBAEJwC,EAAKtE,YAAcsE,EAAKrC,wBAEhC,EACQx3B,EAAegD,KAAKhT,cAApBgQ,WACFk6B,EAA4Bl6B,EAAW4G,iBAAiB,UAAWqzB,GACrEj6B,IAAeA,EAAW5R,SAC1B4R,EAAWyM,MAAQzM,EAAWyM,KAAKitB,eACnC15B,EAAW25B,gBAEfM,IAKA,IAAME,EAAqB3zB,GAAY3V,OAAQ,UAAU,kBAAMgpC,EAAKO,gCAAgC,IAK9FC,EAA2Br6B,EAAW4G,iBAAiB,aAAc,SAAA9U,GAAiC,IAA9BmS,EAAKnS,EAALmS,MAAOq2B,EAAgBxoC,EAAhBwoC,iBAC7ET,EAAKxE,YAAciF,IACnBnH,IAAS,SAACvB,GACN,IAAMpI,EAAcqQ,EAAK1D,mBAAmBvE,GACvCpI,IAELqQ,EAAK7H,YAAYJ,IAAS3tB,EAAM2tB,GAAMK,UACtCzI,EAAY32B,IAAI22B,EAAY92B,MAAQuR,EAAM2tB,GAAMK,WACpD,IACA4H,EAAK7pC,cAAce,SAE3B,IACA,OAAO,WACHopC,IACAL,IACAI,IACAG,GAA4BA,GAChC,CAjDU,CAkDd,GAAC,CAAA9rC,IAAA,WAAAiD,MACD,WACI,IAAMhF,EAAQwW,KAAKhT,cAAc+Y,WACjCwxB,EAA0J/tC,EAAlJsB,KAAAA,OAAI,IAAAysC,GAAQA,EAAAC,EAAsIhuC,EAApI+pC,kBAAAA,OAAiB,IAAAiE,GAAQA,EAAAC,EAA2GjuC,EAAzGupC,gBAAAA,OAAe,IAAA0E,GAAQA,EAAAC,EAAkFluC,EAAhF6qC,gBAAAA,OAAe,IAAAqD,GAAQA,EAAAC,EAAyDnuC,EAAvDsmC,YAAAA,OAAW,IAAA6H,EAAG/H,GAAc+H,EAAAC,EAA2BpuC,EAAzBksC,aAAAA,OAAY,IAAAkC,GAAOA,EACpJ,OAAAtrC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO9C,GAAK,IACRsB,KAAAA,EACAyoC,kBAAAA,EACAR,gBAAAA,EACAsB,gBAAAA,EACAvE,YAAAA,EACA4F,aAAAA,GAER,KAACvD,CAAA,CAha0B,GAka/B,SAAS8B,GAAW5T,EAAWv1B,EAAMwnC,GACjC,QAAkB,IAATxnC,GAAiBA,IAASu1B,KACT,OAArBiS,GAA6BA,IAAqBjS,EAC3D,CAQA,SAASqT,GAAoBh5B,GAA4B,IAApBm9B,EAAaxoC,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,GAC7CgxB,EAAY,KAOhB,OANI1uB,KAAKgd,IAAIjU,EAAO7J,GAAKgnC,EACrBxX,EAAY,IAEP1uB,KAAKgd,IAAIjU,EAAO9J,GAAKinC,IAC1BxX,EAAY,KAETA,CACX,CE5c4E,IAEtEyX,GAAW,SAAA3xB,IAAAC,EAAAA,GAAAA,GAAA0xB,EAAA3xB,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAwxB,GACb,SAAAA,EAAYryB,GAAM,IAAAgB,EAIsC,OAJtC1G,EAAAA,GAAAA,GAAA,KAAA+3B,IACdrxB,EAAAJ,EAAAxd,KAAA,KAAM4c,IACDsyB,oBAAsBn4B,GAC3B6G,EAAK4nB,gBAAkBzuB,GACvB6G,EAAKsY,SAAW,IAAIoT,GAA0B1sB,GAAMgB,CACxD,CAaC,OAbAtG,EAAAA,GAAAA,GAAA23B,EAAA,EAAAvsC,IAAA,QAAAiD,MACD,WAGI,IAAQwpC,EAAiBh4B,KAAKyF,KAAKM,WAA3BiyB,aACJA,IACAh4B,KAAK+3B,oBAAsBC,EAAa/L,UAAUjsB,KAAK+e,WAE3D/e,KAAKquB,gBAAkBruB,KAAK+e,SAASkZ,gBAAkBr4B,EAC3D,GAAC,CAAArU,IAAA,UAAAiD,MACD,WACIwR,KAAK+3B,sBACL/3B,KAAKquB,iBACT,KAACyJ,CAAA,CAnBY,CAAStyB,ICGpB0yB,GAAe,SAACx0B,GAAO,OAAK,SAACK,EAAO+B,GAClCpC,GACAV,GAAAA,QAAa,kBAAMU,EAAQK,EAAO+B,EAAK,GAE/C,CAAC,EACKqyB,GAAU,SAAAhyB,IAAAC,EAAAA,GAAAA,GAAA+xB,EAAAhyB,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAA6xB,GACZ,SAAAA,IAAc,IAAA1xB,EAE4B,OAF5B1G,EAAAA,GAAAA,GAAA,KAAAo4B,IACV1xB,EAAAJ,EAAAE,MAAA,KAASlX,YACJ+oC,0BAA4Bx4B,GAAK6G,CAC1C,CA8BC,OA9BAtG,EAAAA,GAAAA,GAAAg4B,EAAA,EAAA5sC,IAAA,gBAAAiD,MACD,SAAc6pC,GACVr4B,KAAKs4B,QAAU,IAAIxL,GAAWuL,EAAkBr4B,KAAKu4B,oBAAqB,CACtEjxC,mBAAoB0Y,KAAKyF,KAAKouB,wBAC9B7G,cAAe+E,GAAiB/xB,KAAKyF,OAE7C,GAAC,CAAAla,IAAA,oBAAAiD,MACD,WAAoB,IAAAoY,EAAA,KAChBqB,EAA2DjI,KAAKyF,KAAKM,WAA7DyyB,EAAiBvwB,EAAjBuwB,kBAAmBC,EAAUxwB,EAAVwwB,WAAYC,EAAKzwB,EAALywB,MAAOC,EAAQ1wB,EAAR0wB,SAC9C,MAAO,CACHvK,eAAgB8J,GAAaM,GAC7B/K,QAASyK,GAAaO,GACtB/K,OAAQgL,EACR1K,MAAO,SAACjqB,EAAO+B,UACJc,EAAK0xB,QACRK,GACA31B,GAAAA,QAAa,kBAAM21B,EAAS50B,EAAO+B,EAAK,GAEhD,EAER,GAAC,CAAAva,IAAA,QAAAiD,MACD,WAAQ,IAAA03B,EAAA,KACJlmB,KAAKo4B,0BAA4B9zB,GAAgBtE,KAAKyF,KAAKjY,QAAS,eAAe,SAACuW,GAAK,OAAKmiB,EAAK0S,cAAc70B,EAAM,GAC3H,GAAC,CAAAxY,IAAA,SAAAiD,MACD,WACIwR,KAAKs4B,SAAWt4B,KAAKs4B,QAAQO,eAAe74B,KAAKu4B,oBACrD,GAAC,CAAAhtC,IAAA,UAAAiD,MACD,WACIwR,KAAKo4B,4BACLp4B,KAAKs4B,SAAWt4B,KAAKs4B,QAAQxK,KACjC,KAACqK,CAAA,CAlCW,CAAS3yB,ICPzB,IAAMszB,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQtK,GAC7B,OAAIA,EAAKl9B,MAAQk9B,EAAKn9B,IACX,EACHynC,GAAUtK,EAAKl9B,IAAMk9B,EAAKn9B,KAAQ,GAC9C,CAQA,IAAM0nC,GAAsB,CACxBC,QAAS,SAACne,EAAQxV,GACd,IAAKA,EAAKrN,OACN,OAAO6iB,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAInoB,GAAG5C,KAAK+qB,GAIR,OAAOA,EAHPA,EAASnpB,WAAWmpB,EAK5B,CAKA,IAAMrqB,EAAIqoC,GAAgBhe,EAAQxV,EAAKrN,OAAOxH,GACxCC,EAAIooC,GAAgBhe,EAAQxV,EAAKrN,OAAOvH,GAC9C,MAAO,GAAPvH,OAAUsH,EAAC,MAAAtH,OAAKuH,EAAC,IACrB,GClCEwoC,GAAmB,CACrBD,QAAS,SAACne,EAAMlvB,GAAqC,IAAjCutC,EAASvtC,EAATutC,UAAWC,EAAextC,EAAfwtC,gBACrBC,EAAWve,EACXwe,EAAShmB,GAAQ5hB,MAAMopB,GAE7B,GAAIwe,EAAOnqC,OAAS,EAChB,OAAOkqC,EACX,IAAMllB,EAAWb,GAAQL,kBAAkB6H,GACrCvgB,EAA8B,kBAAd++B,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgB3oC,EAAEoB,MAAQsnC,EAAU1oC,EAC7C+oC,EAASJ,EAAgB1oC,EAAEmB,MAAQsnC,EAAUzoC,EACnD4oC,EAAO,EAAI/+B,IAAWg/B,EACtBD,EAAO,EAAI/+B,IAAWi/B,EAOtB,IAAMC,EAAet7B,GAAIo7B,EAAQC,EAAQ,IAOzC,MALkC,kBAAvBF,EAAO,EAAI/+B,KAClB++B,EAAO,EAAI/+B,IAAWk/B,GAEQ,kBAAvBH,EAAO,EAAI/+B,KAClB++B,EAAO,EAAI/+B,IAAWk/B,GACnBtlB,EAASmlB,EACpB,GCrBEI,GAAwB,SAAAC,IAAA1zB,EAAAA,GAAAA,GAAAyzB,EAAAC,GAAA,IAAAzzB,GAAAC,EAAAA,GAAAA,GAAAuzB,GAAA,SAAAA,IAAA,OAAA95B,EAAAA,GAAAA,GAAA,KAAA85B,GAAAxzB,EAAAE,MAAA,KAAAlX,UAAA,CAgGzB,OAhGyB8Q,EAAAA,GAAAA,GAAA05B,EAAA,EAAAtuC,IAAA,oBAAAiD,MAM1B,WAAoB,InJfGurC,EmJeHtzB,EAAA,KAChBuzB,EAAoEh6B,KAAKxW,MAAjEwD,EAAagtC,EAAbhtC,cAAeitC,EAAWD,EAAXC,YAAaC,EAAiBF,EAAjBE,kBAAmBrtC,EAAQmtC,EAARntC,SAC/CmQ,EAAehQ,EAAfgQ,WnJjBW+8B,EmJkBDI,GnJjBtBzxC,OAAO6P,OAAOpI,EAAiB4pC,GmJkBvB/8B,IACIi9B,EAAYG,OACZH,EAAYG,MAAM/5B,IAAIrD,GACtBk9B,GAAqBA,EAAkBxN,UAAY7/B,GACnDqtC,EAAkBxN,SAAS1vB,GAE/BA,EAAWyM,KAAK4wB,YAChBr9B,EAAW4G,iBAAiB,qBAAqB,WAC7C6C,EAAK6zB,cACT,IACAt9B,EAAWu9B,YAAUjuC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAChB0Q,EAAWpG,SAAO,IACrB01B,eAAgB,kBAAM7lB,EAAK6zB,cAAc,MAGjDxB,GAAsBE,gBAAiB,CAC3C,GAAC,CAAAztC,IAAA,0BAAAiD,MACD,SAAwBiP,GAAW,IAAAmJ,EAAA,KAC/B4zB,EAA6Dx6B,KAAKxW,MAA1DixC,EAAgBD,EAAhBC,iBAAkBztC,EAAawtC,EAAbxtC,cAAelC,EAAI0vC,EAAJ1vC,KAAMuhC,EAASmO,EAATnO,UACzCrvB,EAAahQ,EAAcgQ,WACjC,OAAKA,GASLA,EAAWqvB,UAAYA,EACnBvhC,GACA2S,EAAUg9B,mBAAqBA,QACVtwC,IAArBswC,EACAz9B,EAAW09B,aAGX16B,KAAKs6B,eAEL78B,EAAU4uB,YAAcA,IACpBA,EACArvB,EAAW29B,UAEL39B,EAAW49B,YAMjB53B,GAAAA,YAAiB,WACb,IAAM63B,EAAQ79B,EAAW89B,WACpBD,GAAUA,EAAME,QAAQzrC,QACzBsX,EAAK0zB,cAEb,KAGD,MAnCI,IAoCf,GAAC,CAAA/uC,IAAA,qBAAAiD,MACD,WAAqB,IAAA03B,EAAA,KACTlpB,EAAegD,KAAKxW,MAAMwD,cAA1BgQ,WACJA,IACAA,EAAWyM,KAAK4wB,YAChBW,gBAAe,YACNh+B,EAAWi+B,kBAAoBj+B,EAAWk+B,UAC3ChV,EAAKoU,cAEb,IAER,GAAC,CAAA/uC,IAAA,uBAAAiD,MACD,WACI,IAAA2sC,EAA2En7B,KAAKxW,MAAxEwD,EAAamuC,EAAbnuC,cAAeitC,EAAWkB,EAAXlB,YAAgCmB,EAAcD,EAAjCjB,kBAC5Bl9B,EAAehQ,EAAfgQ,WACJA,IACAA,EAAWq+B,4BACPpB,GAAeA,EAAYG,OAC3BH,EAAYG,MAAMj4B,OAAOnF,GACzBo+B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAWt+B,GAEtC,GAAC,CAAAzR,IAAA,eAAAiD,MACD,WACI,IAAQ8rC,EAAiBt6B,KAAKxW,MAAtB8wC,aACRA,GAAgBA,GACpB,GAAC,CAAA/uC,IAAA,SAAAiD,MACD,WACI,OAAO,IACX,KAACqrC,CAAA,CAhGyB,CAAS0B,EAAAA,WAkGvC,SAAS5uC,GAAcnD,GACnB,IAAAgyC,ECnFJ,WACI,IAAMvxC,GAAUK,EAAAA,EAAAA,YAAW3C,GAC3B,GAAgB,OAAZsC,EACA,MAAO,EAAC,EAAM,MAClB,IAAQoiC,EAAwCpiC,EAAxCoiC,UAAWC,EAA6BriC,EAA7BqiC,eAAgBI,EAAaziC,EAAbyiC,SAG7B19B,GAAKysC,EAAAA,EAAAA,SAGX,OAFAzzC,EAAAA,EAAAA,YAAU,kBAAM0kC,EAAS19B,EAAG,GAAE,KAEtBq9B,GAAaC,EAAiB,EAAC,EADlB,WAAH,OAASA,GAAkBA,EAAet9B,EAAG,GACD,EAAC,EACnE,CDwEsC0sC,GAAaC,GAAA7uB,EAAAA,GAAAA,GAAA0uB,EAAA,GAAxCnP,EAASsP,EAAA,GAAErB,EAAYqB,EAAA,GACxB1B,GAAc3vC,EAAAA,EAAAA,YAAWmB,GAC/B,OAAQ8vC,EAAAA,cAA6B1B,IAAwBvtC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO9C,GAAK,IAAEywC,YAAaA,EAAaC,mBAAmB5vC,EAAAA,EAAAA,YAAWoB,GAA2B2gC,UAAWA,EAAWiO,aAAcA,IACtM,CACA,IAAMH,GAAyB,CAC3B1mC,cAAYnH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL6sC,IAAmB,IACtByC,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRjoC,oBAAqBwlC,GACrBvlC,qBAAsBulC,GACtBrlC,uBAAwBqlC,GACxBtlC,wBAAyBslC,GACzB0C,UAAWxC,IEzHTyC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQxsC,OACrB0sC,GAAW,SAACxtC,GAAK,MAAsB,kBAAVA,EAAqBsD,WAAWtD,GAASA,CAAK,EAC3EytC,GAAO,SAACztC,GAAK,MAAsB,kBAAVA,GAAsBsE,GAAG5C,KAAK1B,EAAM,EACnE,SAAS0tC,GAAU9jC,EAAQ+jC,EAAQC,EAAM/qB,EAAUgrB,EAAwBC,GACnED,GACAjkC,EAAOnC,QAAUqI,GAAI,OAEJnU,IAAjBiyC,EAAKnmC,QAAwBmmC,EAAKnmC,QAAU,EAAGsmC,GAAgBlrB,IAC/DjZ,EAAOokC,YAAcl+B,QAAuBnU,IAAnBgyC,EAAOlmC,QAAwBkmC,EAAOlmC,QAAU,EAAG,EAAGwmC,GAAiBprB,KAE3FirB,IACLlkC,EAAOnC,QAAUqI,QAAuBnU,IAAnBgyC,EAAOlmC,QAAwBkmC,EAAOlmC,QAAU,OAAoB9L,IAAjBiyC,EAAKnmC,QAAwBmmC,EAAKnmC,QAAU,EAAGob,IAK3H,IAAK,IAAIzZ,EAAI,EAAGA,EAAImkC,GAAYnkC,IAAK,CACjC,IAAM8kC,EAAc,SAAHpzC,OAAYwyC,GAAQlkC,GAAE,UACnC+kC,EAAeC,GAAUT,EAAQO,GACjCG,EAAaD,GAAUR,EAAMM,GACjC,QAAqBvyC,IAAjBwyC,QAA6CxyC,IAAf0yC,EAElCF,IAAiBA,EAAe,GAChCE,IAAeA,EAAa,GACI,IAAjBF,GACI,IAAfE,GACAZ,GAAKU,KAAkBV,GAAKY,IAE5BzkC,EAAOskC,GAAe/qC,KAAKD,IAAI4M,GAAI09B,GAASW,GAAeX,GAASa,GAAaxrB,GAAW,IACxFxe,GAAQ3C,KAAK2sC,IAAehqC,GAAQ3C,KAAKysC,MACzCvkC,EAAOskC,IAAgB,MAI3BtkC,EAAOskC,GAAeG,CAE9B,EAIIV,EAAOjnC,QAAUknC,EAAKlnC,UACtBkD,EAAOlD,OAASoJ,GAAI69B,EAAOjnC,QAAU,EAAGknC,EAAKlnC,QAAU,EAAGmc,GAElE,CACA,SAASurB,GAAU5iC,EAAQ8iC,GACvB,YAA8B3yC,IAAvB6P,EAAO8iC,GACR9iC,EAAO8iC,GACP9iC,EAAOvG,YACjB,CAwBA,IAAM8oC,GAAkBQ,GAAS,EAAG,GAAKxvB,IACnCkvB,GAAmBM,GAAS,GAAK,IAAMn9B,IAC7C,SAASm9B,GAAStrC,EAAKC,EAAK+a,GACxB,OAAO,SAACllB,GAEJ,OAAIA,EAAIkK,EACG,EACPlK,EAAImK,EACG,EACJ+a,EAAO4E,GAAS5f,EAAKC,EAAKnK,GACrC,CACJ,CCrFA,SAASy1C,GAAapO,EAAMqO,GACxBrO,EAAKn9B,IAAMwrC,EAAWxrC,IACtBm9B,EAAKl9B,IAAMurC,EAAWvrC,GAC1B,CAMA,SAASwrC,GAAYpM,EAAKqM,GACtBH,GAAalM,EAAIlgC,EAAGusC,EAAUvsC,GAC9BosC,GAAalM,EAAIjgC,EAAGssC,EAAUtsC,EAClC,CCVA,SAASusC,GAAiB/4B,EAAO4qB,EAAWj9B,EAAOg9B,EAAa2B,GAM5D,OAJAtsB,EAAQosB,GADRpsB,GAAS4qB,EACiB,EAAIj9B,EAAOg9B,QACpB7kC,IAAbwmC,IACAtsB,EAAQosB,GAAWpsB,EAAO,EAAIssB,EAAU3B,IAErC3qB,CACX,CAsBA,SAASg5B,GAAqBzO,EAAMwC,EAAUrlC,EAA8B0O,EAAQ6iC,GAAY,IAAAxuC,GAAAge,EAAAA,GAAAA,GAAA/gB,EAAA,GAA/CR,EAAGuD,EAAA,GAAEuiC,EAAQviC,EAAA,GAAEwiC,EAASxiC,EAAA,IAlBzE,SAAyB8/B,GAA8F,IAAxFK,EAAS5/B,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAAG2C,EAAK3C,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAAGoL,EAAMpL,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,GAAKshC,EAAQthC,UAAAC,OAAA,EAAAD,UAAA,QAAAlF,EAAE8yC,EAAU5tC,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAGu/B,EAAM0O,EAAUjuC,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAGu/B,EAC7G,GAAI/7B,GAAQ3C,KAAK++B,GAAY,CACzBA,EAAYn9B,WAAWm9B,GAEvBA,EADyB3wB,GAAIg/B,EAAW7rC,IAAK6rC,EAAW5rC,IAAKu9B,EAAY,KAC1CqO,EAAW7rC,GAC9C,CACA,GAAyB,kBAAdw9B,EAAX,CAEA,IAAID,EAAc1wB,GAAI2+B,EAAWxrC,IAAKwrC,EAAWvrC,IAAK+I,GAClDm0B,IAASqO,IACTjO,GAAeC,GACnBL,EAAKn9B,IAAM2rC,GAAiBxO,EAAKn9B,IAAKw9B,EAAWj9B,EAAOg9B,EAAa2B,GACrE/B,EAAKl9B,IAAM0rC,GAAiBxO,EAAKl9B,IAAKu9B,EAAWj9B,EAAOg9B,EAAa2B,EAL3D,CAMd,CAMI4M,CAAgB3O,EAAMwC,EAAW7lC,GAAM6lC,EAAWC,GAAWD,EAAWE,GAAYF,EAAWp/B,MAAOyI,EAAQ6iC,EAClH,CAIA,IAAM9L,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAAS+L,GAAoB1M,EAAKM,EAAY+L,EAAWM,GACrDJ,GAAqBvM,EAAIlgC,EAAGwgC,EAAYI,GAAO2L,EAAYA,EAAUvsC,OAAIzG,EAAWszC,EAAYA,EAAU7sC,OAAIzG,GAC9GkzC,GAAqBvM,EAAIjgC,EAAGugC,EAAYK,GAAO0L,EAAYA,EAAUtsC,OAAI1G,EAAWszC,EAAYA,EAAU5sC,OAAI1G,EAClH,CCjDA,SAASuzC,GAAgBz8B,GACrB,OAA2B,IAApBA,EAAMguB,WAAmC,IAAhBhuB,EAAMjP,KAC1C,CACA,SAAS2rC,GAAY18B,GACjB,OAAOy8B,GAAgBz8B,EAAMrQ,IAAM8sC,GAAgBz8B,EAAMpQ,EAC7D,CACA,SAAS+sC,GAAUn5B,EAAGC,GAClB,OAAQD,EAAE7T,EAAEa,MAAQiT,EAAE9T,EAAEa,KACpBgT,EAAE7T,EAAEc,MAAQgT,EAAE9T,EAAEc,KAChB+S,EAAE5T,EAAEY,MAAQiT,EAAE7T,EAAEY,KAChBgT,EAAE5T,EAAEa,MAAQgT,EAAE7T,EAAEa,GACxB,CACA,SAASmsC,GAAiBp5B,EAAGC,GACzB,OAAQ/S,KAAKQ,MAAMsS,EAAE7T,EAAEa,OAASE,KAAKQ,MAAMuS,EAAE9T,EAAEa,MAC3CE,KAAKQ,MAAMsS,EAAE7T,EAAEc,OAASC,KAAKQ,MAAMuS,EAAE9T,EAAEc,MACvCC,KAAKQ,MAAMsS,EAAE5T,EAAEY,OAASE,KAAKQ,MAAMuS,EAAE7T,EAAEY,MACvCE,KAAKQ,MAAMsS,EAAE5T,EAAEa,OAASC,KAAKQ,MAAMuS,EAAE7T,EAAEa,IAC/C,CACA,SAASosC,GAAYhN,GACjB,OAAOnC,GAAWmC,EAAIlgC,GAAK+9B,GAAWmC,EAAIjgC,EAC9C,CCtBkE,IAE5DktC,GAAS,WACX,SAAAA,KAAch+B,EAAAA,GAAAA,GAAA,KAAAg+B,GACV/9B,KAAK+6B,QAAU,EACnB,CAuGC,OAvGA56B,EAAAA,GAAAA,GAAA49B,EAAA,EAAAxyC,IAAA,MAAAiD,MACD,SAAIiX,GACA2e,GAAcpkB,KAAK+6B,QAASt1B,GAC5BA,EAAKu4B,gBACT,GAAC,CAAAzyC,IAAA,SAAAiD,MACD,SAAOiX,GAKH,GAJA6e,GAAWtkB,KAAK+6B,QAASt1B,GACrBA,IAASzF,KAAKi+B,WACdj+B,KAAKi+B,cAAW9zC,GAEhBsb,IAASzF,KAAKo8B,KAAM,CACpB,IAAM6B,EAAWj+B,KAAK+6B,QAAQ/6B,KAAK+6B,QAAQzrC,OAAS,GAChD2uC,GACAj+B,KAAK26B,QAAQsD,EAErB,CACJ,GAAC,CAAA1yC,IAAA,WAAAiD,MACD,SAASiX,GACL,IAMIw4B,EANEC,EAAcl+B,KAAK+6B,QAAQoD,WAAU,SAACC,GAAM,OAAK34B,IAAS24B,CAAM,IACtE,GAAoB,IAAhBF,EACA,OAAO,EAKX,IAAK,IAAItmC,EAAIsmC,EAAatmC,GAAK,EAAGA,IAAK,CACnC,IAAMwmC,EAASp+B,KAAK+6B,QAAQnjC,GAC5B,IAAyB,IAArBwmC,EAAO/R,UAAqB,CAC5B4R,EAAWG,EACX,KACJ,CACJ,CACA,QAAIH,IACAj+B,KAAK26B,QAAQsD,IACN,EAKf,GAAC,CAAA1yC,IAAA,UAAAiD,MACD,SAAQiX,EAAM44B,GACV,IAAMJ,EAAWj+B,KAAKo8B,KAClB32B,IAASw4B,IAEbj+B,KAAKi+B,SAAWA,EAChBj+B,KAAKo8B,KAAO32B,EACZA,EAAK64B,OACDL,IACAA,EAASvvC,UAAYuvC,EAASD,iBAC9Bv4B,EAAKu4B,iBACLv4B,EAAK84B,WAAaN,EACdI,IACA54B,EAAK84B,WAAWC,iBAAkB,GAElCP,EAASQ,WACTh5B,EAAKg5B,SAAWR,EAASQ,SACzBh5B,EAAKg5B,SAAS9nC,aACVsnC,EAASS,iBAAmBT,EAAStnC,cAEzC8O,EAAKgE,MAAQhE,EAAKgE,KAAKk1B,aACvBl5B,EAAKm5B,eAAgB,IAGP,IADIn5B,EAAK7O,QAAnBioC,WAEJZ,EAASa,QAerB,GAAC,CAAAvzC,IAAA,wBAAAiD,MACD,WACIwR,KAAK+6B,QAAQx7B,SAAQ,SAACkG,GAClB,IAAQ7O,EAA0B6O,EAA1B7O,QAASmoC,EAAiBt5B,EAAjBs5B,aACjBnoC,EAAQ01B,gBAAkB11B,EAAQ01B,iBAC9ByS,GACAA,EAAanoC,QAAQ01B,gBACjByS,EAAanoC,QAAQ01B,gBAEjC,GACJ,GAAC,CAAA/gC,IAAA,iBAAAiD,MACD,WACIwR,KAAK+6B,QAAQx7B,SAAQ,SAACkG,GAClBA,EAAK/W,UAAY+W,EAAKu4B,gBAAe,EACzC,GACJ,GACA,CAAAzyC,IAAA,qBAAAiD,MAIA,WACQwR,KAAKo8B,MAAQp8B,KAAKo8B,KAAKqC,WACvBz+B,KAAKo8B,KAAKqC,cAAWt0C,EAE7B,KAAC4zC,CAAA,CA1GU,GCFf,SAASiB,GAAyB/9B,EAAOq4B,EAAW2F,GAChD,IAAI1tC,EAAY,GAOV2tC,EAAaj+B,EAAMrQ,EAAEq+B,UAAYqK,EAAU1oC,EAC3CuuC,EAAal+B,EAAMpQ,EAAEo+B,UAAYqK,EAAUzoC,EAWjD,IAVIquC,GAAcC,KACd5tC,EAAY,eAAHjI,OAAkB41C,EAAU,QAAA51C,OAAO61C,EAAU,YAMtC,IAAhB7F,EAAU1oC,GAA2B,IAAhB0oC,EAAUzoC,IAC/BU,GAAa,SAAJjI,OAAa,EAAIgwC,EAAU1oC,EAAC,MAAAtH,OAAK,EAAIgwC,EAAUzoC,EAAC,OAEzDouC,EAAiB,CACjB,IAAQ/pC,EAA6B+pC,EAA7B/pC,OAAQC,EAAqB8pC,EAArB9pC,QAASC,EAAY6pC,EAAZ7pC,QACrBF,IACA3D,GAAa,UAAJjI,OAAc4L,EAAM,UAC7BC,IACA5D,GAAa,WAAJjI,OAAe6L,EAAO,UAC/BC,IACA7D,GAAa,WAAJjI,OAAe8L,EAAO,SACvC,CAKA,IAAMgqC,EAAgBn+B,EAAMrQ,EAAEoB,MAAQsnC,EAAU1oC,EAC1CyuC,EAAgBp+B,EAAMpQ,EAAEmB,MAAQsnC,EAAUzoC,EAIhD,OAHsB,IAAlBuuC,GAAyC,IAAlBC,IACvB9tC,GAAa,SAAJjI,OAAa81C,EAAa,MAAA91C,OAAK+1C,EAAa,MAElD9tC,GAAa,MACxB,CCvCA,IAAM+tC,GAAiB,SAAC76B,EAAGC,GAAC,OAAKD,EAAE86B,MAAQ76B,EAAE66B,KAAK,ECG5CC,GAAQ,WACV,SAAAA,KAAcz/B,EAAAA,GAAAA,GAAA,KAAAy/B,GACVx/B,KAAKtD,SAAW,GAChBsD,KAAKy/B,SAAU,CACnB,CAaC,OAbAt/B,EAAAA,GAAAA,GAAAq/B,EAAA,EAAAj0C,IAAA,MAAAiD,MACD,SAAIwY,GACAod,GAAcpkB,KAAKtD,SAAUsK,GAC7BhH,KAAKy/B,SAAU,CACnB,GAAC,CAAAl0C,IAAA,SAAAiD,MACD,SAAOwY,GACHsd,GAAWtkB,KAAKtD,SAAUsK,GAC1BhH,KAAKy/B,SAAU,CACnB,GAAC,CAAAl0C,IAAA,UAAAiD,MACD,SAAQuT,GACJ/B,KAAKy/B,SAAWz/B,KAAKtD,SAAS6sB,KAAK+V,IACnCt/B,KAAKy/B,SAAU,EACfz/B,KAAKtD,SAAS6C,QAAQwC,EAC1B,KAACy9B,CAAA,CAjBS,GCEd,SAASpjB,GAAMra,EAAU29B,GACrB,IAAMv2C,EAAQsZ,YAAYC,MACpBi9B,EAAe,SAAfA,EAAY5zC,GAAsB,IAC9BsyB,EADuBtyB,EAATmV,UACQ/X,EACxBk1B,GAAWqhB,IACXz8B,GAAY08B,GACZ59B,EAASsc,EAAUqhB,GAE3B,EAEA,OADA18B,GAAAA,KAAW28B,GAAc,GAClB,kBAAM18B,GAAY08B,EAAa,CAC1C,CChBA,SAASC,GAAOC,GACRhyC,OAAOiyC,aACPjyC,OAAOiyC,YAAYF,OAAOC,EAElC,CCJA,SAASE,GAAajjC,GAClB,OAAOA,aAAmBkjC,YAAkC,QAApBljC,EAAQwG,OACpD,CCwBA,IAAM28B,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMnCnxC,GAAK,EAKHoxC,GAAsB,CACxB9uC,KAAM,kBACN+uC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,GAAoBz0C,GAA6F,IAA1F00C,EAAoB10C,EAApB00C,qBAAsBC,EAAa30C,EAAb20C,cAAeC,EAAa50C,EAAb40C,cAAeC,EAAiB70C,EAAjB60C,kBAAmBC,EAAc90C,EAAd80C,eACnG,kBACI,SAAAC,IAAuH,IAAAr6B,EAAA,KAA3G9P,EAAYtH,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGpC,EAAMoC,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAqB,OAAlBqxC,QAA4C,IAAlBA,OAA2B,EAASA,KAAe3gC,EAAAA,GAAAA,GAAA,KAAA+gC,GAIjH9gC,KAAKhR,GAAKA,KAIVgR,KAAK+gC,YAAc,EAOnB/gC,KAAKtD,SAAW,IAAIpM,IAKpB0P,KAAKpJ,QAAU,CAAC,EAMhBoJ,KAAKghC,iBAAkB,EACvBhhC,KAAKkzB,oBAAqB,EAO1BlzB,KAAK4+B,eAAgB,EAKrB5+B,KAAKihC,mBAAoB,EAKzBjhC,KAAKkhC,yBAA0B,EAK/BlhC,KAAKmhC,kBAAmB,EAIxBnhC,KAAKohC,uBAAwB,EAC7BphC,KAAKqhC,uBAAwB,EAK7BrhC,KAAK2+B,YAAa,EAIlB3+B,KAAKshC,OAAQ,EAKbthC,KAAKuhC,YAAa,EAIlBvhC,KAAKwhC,sBAAuB,EAS5BxhC,KAAKs5B,UAAY,CAAE1oC,EAAG,EAAGC,EAAG,GAI5BmP,KAAKyhC,cAAgB,IAAIhyC,IACzBuQ,KAAK0hC,iBAAkB,EAEvB1hC,KAAK2hC,iBAAkB,EACvB3hC,KAAK4hC,2BAA4B,EACjC5hC,KAAK6hC,kBAAoB,WACjBp7B,EAAKk4B,aACLl4B,EAAKk4B,YAAa,EAClBl4B,EAAKq7B,oBAEb,EAMA9hC,KAAK+hC,iBAAmB,WACpBt7B,EAAKm7B,2BAA4B,EAKjCxB,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZ95B,EAAKu7B,MAAMziC,QAAQ0iC,IACnBx7B,EAAKu7B,MAAMziC,QAAQ2iC,IACnBz7B,EAAKu7B,MAAMziC,QAAQ4iC,IACnB17B,EAAKu7B,MAAMziC,QAAQ6iC,IACnBxC,GAAOQ,GACX,EACApgC,KAAKqiC,cAAe,EACpBriC,KAAKsiC,WAAY,EACjBtiC,KAAKuiC,kBAAoB,EAKzBviC,KAAKwiC,YAAc,IAAI/yC,IACvBuQ,KAAKrJ,aAAeA,EACpBqJ,KAAKyJ,KAAOxc,EAASA,EAAOwc,MAAQxc,EAAS+S,KAC7CA,KAAKyiC,KAAOx1C,EAAS,GAAH3D,QAAAspB,EAAAA,GAAAA,GAAO3lB,EAAOw1C,MAAI,CAAEx1C,IAAU,GAChD+S,KAAK/S,OAASA,EACd+S,KAAKu/B,MAAQtyC,EAASA,EAAOsyC,MAAQ,EAAI,EACzC,IAAK,IAAI3nC,EAAI,EAAGA,EAAIoI,KAAKyiC,KAAKnzC,OAAQsI,IAClCoI,KAAKyiC,KAAK7qC,GAAG4pC,sBAAuB,EAEpCxhC,KAAKyJ,OAASzJ,OACdA,KAAKgiC,MAAQ,IAAIxC,GACzB,CAilCC,OAjlCAr/B,EAAAA,GAAAA,GAAA2gC,EAAA,EAAAv1C,IAAA,mBAAAiD,MACD,SAAiB7E,EAAM+Z,GAInB,OAHK1D,KAAKyhC,cAAc7xC,IAAIjG,IACxBqW,KAAKyhC,cAAc5xC,IAAIlG,EAAM,IAAI46B,IAE9BvkB,KAAKyhC,cAAc/xC,IAAI/F,GAAM0W,IAAIqD,EAC5C,GAAC,CAAAnY,IAAA,kBAAAiD,MACD,SAAgB7E,GAC6C,IAAzD,IAAM+4C,EAAsB1iC,KAAKyhC,cAAc/xC,IAAI/F,GAAMib,EAAAvV,UAAAC,OADpCqzC,EAAI,IAAA35C,MAAA4b,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ69B,EAAI79B,EAAA,GAAAzV,UAAAyV,GAEzB49B,GAAuBA,EAAoBrd,OAAM9e,MAA1Bm8B,EAA8BC,EACzD,GAAC,CAAAp3C,IAAA,eAAAiD,MACD,SAAa7E,GACT,OAAOqW,KAAKyhC,cAAc7xC,IAAIjG,EAClC,GACA,CAAA4B,IAAA,QAAAiD,MAGA,SAAME,GAAqD,IAAAkY,EAAA,KAA3Cg4B,EAAavvC,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG2Q,KAAKyJ,KAAKi4B,gBACtC,IAAI1hC,KAAKtR,SAAT,CAEAsR,KAAKshC,MAAQvB,GAAarxC,GAC1BsR,KAAKtR,SAAWA,EAChB,IAAAk0C,EAA4C5iC,KAAKpJ,QAAzC/J,EAAQ+1C,EAAR/1C,SAAUzB,EAAMw3C,EAANx3C,OAAQ4B,EAAa41C,EAAb51C,cAS1B,GARIA,IAAkBA,EAAcQ,SAChCR,EAAc2B,MAAMD,GAExBsR,KAAKyJ,KAAKu4B,MAAM3hC,IAAIL,MACpBA,KAAK/S,QAAU+S,KAAK/S,OAAOyP,SAAS2D,IAAIL,MACpC4+B,IAAkBxzC,GAAUyB,KAC5BmT,KAAK4+B,eAAgB,GAErB6B,EAAsB,CACtB,IAAIoC,EACEC,EAAsB,WAAH,OAAUl8B,EAAK6C,KAAK43B,uBAAwB,CAAK,EAC1EZ,EAAqB/xC,GAAU,WAC3BkY,EAAK6C,KAAK43B,uBAAwB,EAClCwB,GAAeA,IACfA,EAAczmB,GAAM0mB,EAAqB,KACrChK,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/CnyB,EAAKo7B,MAAMziC,QAAQwjC,IAE3B,GACJ,CACIl2C,GACAmT,KAAKyJ,KAAKu5B,mBAAmBn2C,EAAUmT,OAGd,IAAzBA,KAAKpJ,QAAQnN,SACbuD,IACCH,GAAYzB,IACb4U,KAAK4D,iBAAiB,aAAa,SAAA9U,GAA+E,IAA5EmS,EAAKnS,EAALmS,MAAOq2B,EAAgBxoC,EAAhBwoC,iBAAkB2L,EAAwBn0C,EAAxBm0C,yBAAkCC,EAASp0C,EAAjB1D,OACrF,GAAIwb,EAAKu8B,yBAGL,OAFAv8B,EAAKxO,YAASjO,OACdyc,EAAKw8B,oBAAiBj5C,GAI1B,IAAMk5C,EAAmBz8B,EAAKhQ,QAAQ8I,YAClC1S,EAAco0B,wBACdkiB,GACJC,EAA+Dv2C,EAAc+Y,WAArEy9B,EAAsBD,EAAtBC,uBAAwBC,EAAyBF,EAAzBE,0BAK1BC,GAAiB98B,EAAK+8B,eACvB9F,GAAiBj3B,EAAK+8B,aAAcT,IACrCD,EAMEW,GAAgCtM,GAAoB2L,EAC1D,GAAIr8B,EAAKhQ,QAAQitC,YACZj9B,EAAK23B,YAAc33B,EAAK23B,WAAW7vC,UACpCk1C,GACCtM,IACIoM,IAAkB98B,EAAKq0B,kBAAoB,CAC5Cr0B,EAAK23B,aACL33B,EAAKm4B,aAAen4B,EAAK23B,WACzB33B,EAAKm4B,aAAaA,kBAAe50C,GAErCyc,EAAKk9B,mBAAmB7iC,EAAO2iC,GAC/B,IAAMG,GAAgBz3C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfk3B,GAAmB6f,EAAkB,WAAS,IACjDtmB,OAAQymB,EACRvmB,WAAYwmB,KAEZz2C,EAAcs7B,oBACd1hB,EAAKhQ,QAAQitC,cACbE,EAAiB3nB,MAAQ,EACzB2nB,EAAiBzyC,MAAO,GAE5BsV,EAAKqf,eAAe8d,EACxB,MAOSzM,GACDyL,GAAgBn8B,GAEhBA,EAAKs0B,UAAYt0B,EAAKhQ,QAAQ01B,gBAC9B1lB,EAAKhQ,QAAQ01B,iBAGrB1lB,EAAK+8B,aAAeT,CACxB,GA5FM,CA8Fd,GAAC,CAAA33C,IAAA,UAAAiD,MACD,WACIwR,KAAKpJ,QAAQ/J,UAAYmT,KAAK06B,aAC9B16B,KAAKyJ,KAAKu4B,MAAM7/B,OAAOnC,MACvB,IAAM66B,EAAQ76B,KAAK86B,WACnBD,GAASA,EAAM14B,OAAOnC,MACtBA,KAAK/S,QAAU+S,KAAK/S,OAAOyP,SAAS+D,OAAOT,MAC3CA,KAAKtR,cAAWvE,EAChB8Y,GAAYjD,KAAK+hC,iBACrB,GACA,CAAAx2C,IAAA,cAAAiD,MACA,WACIwR,KAAKohC,uBAAwB,CACjC,GAAC,CAAA71C,IAAA,gBAAAiD,MACD,WACIwR,KAAKohC,uBAAwB,CACjC,GAAC,CAAA71C,IAAA,kBAAAiD,MACD,WACI,OAAOwR,KAAKohC,uBAAyBphC,KAAKqhC,qBAC9C,GAAC,CAAA91C,IAAA,yBAAAiD,MACD,WACI,OAAQwR,KAAKkzB,oBACRlzB,KAAK/S,QAAU+S,KAAK/S,OAAOk2C,2BAC5B,CACR,GACA,CAAA53C,IAAA,cAAAiD,MACA,WACQwR,KAAKgkC,oBAEThkC,KAAK2+B,YAAa,EAClB3+B,KAAKgiC,OAAShiC,KAAKgiC,MAAMziC,QAAQ0kC,IACjCjkC,KAAK+gC,cACT,GAAC,CAAAx1C,IAAA,uBAAAiD,MACD,WACI,IAAQxB,EAAkBgT,KAAKpJ,QAAvB5J,cACR,OAAOA,GAAiBA,EAAc+Y,WAAWlP,iBACrD,GAAC,CAAAtL,IAAA,aAAAiD,MACD,WAAyC,IAA9B01C,IAAqB70C,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,KAAAA,UAAA,GAE5B,GADA2Q,KAAKyJ,KAAKi4B,iBAAkB,EACxB1hC,KAAKyJ,KAAKu6B,kBACVhkC,KAAKpJ,QAAQ01B,gBAAkBtsB,KAAKpJ,QAAQ01B,sBAIhD,IADCtsB,KAAKyJ,KAAKk1B,YAAc3+B,KAAKyJ,KAAK06B,eAC/BnkC,KAAK4+B,cAAT,CAEA5+B,KAAK4+B,eAAgB,EACrB,IAAK,IAAIhnC,EAAI,EAAGA,EAAIoI,KAAKyiC,KAAKnzC,OAAQsI,IAAK,CACvC,IAAM6N,EAAOzF,KAAKyiC,KAAK7qC,GACvB6N,EAAK+7B,sBAAuB,EAC5B/7B,EAAKixB,aAAa,YACdjxB,EAAK7O,QAAQitC,YACbp+B,EAAKi1B,YAAW,EAExB,CACA,IAAA0J,EAA6BpkC,KAAKpJ,QAA1B/J,EAAQu3C,EAARv3C,SAAUzB,EAAMg5C,EAANh5C,OAClB,QAAiBjB,IAAb0C,GAA2BzB,EAA/B,CAEA,IAAMyL,EAAoBmJ,KAAKqkC,uBAC/BrkC,KAAKskC,2BAA6BztC,EAC5BA,EAAkBmJ,KAAKrJ,aAAc,SACrCxM,EACN6V,KAAKukC,iBACLL,GAAyBlkC,KAAKwkC,gBAAgB,aANpC,CAZA,CAmBd,GAAC,CAAAj5C,IAAA,SAAAiD,MACD,WAMI,GALAwR,KAAK2hC,iBAAkB,EACE3hC,KAAKgkC,kBAQ1B,OAHAhkC,KAAKykC,gBACLzkC,KAAK8hC,yBACL9hC,KAAKgiC,MAAMziC,QAAQmlC,IAGlB1kC,KAAK2+B,YACN3+B,KAAKgiC,MAAMziC,QAAQolC,IAEvB3kC,KAAK2+B,YAAa,EAIlB3+B,KAAKgiC,MAAMziC,QAAQqlC,IAKnB5kC,KAAKgiC,MAAMziC,QAAQo3B,IAKnB32B,KAAKgiC,MAAMziC,QAAQslC,IACnB7kC,KAAK8hC,oBAML,IAAMp/B,EAAMD,YAAYC,MACxBN,GAAUnB,MAAQzP,EAAM,EAAG,IAAO,GAAIkR,EAAMN,GAAUlB,WACtDkB,GAAUlB,UAAYwB,EACtBN,GAAUjB,cAAe,EACzBC,GAAMzT,OAAOyS,QAAQgC,IACrBhB,GAAM0jC,UAAU1kC,QAAQgC,IACxBhB,GAAMrT,OAAOqS,QAAQgC,IACrBA,GAAUjB,cAAe,CAC7B,GAAC,CAAA5V,IAAA,YAAAiD,MACD,WAAY,IAAA03B,EAAA,KACHlmB,KAAK2hC,kBACN3hC,KAAK2hC,iBAAkB,EACvB3G,gBAAe,kBAAM9U,EAAKv4B,QAAQ,IAE1C,GAAC,CAAApC,IAAA,oBAAAiD,MACD,WACIwR,KAAKgiC,MAAMziC,QAAQwlC,IACnB/kC,KAAKwiC,YAAYjjC,QAAQylC,GAC7B,GAAC,CAAAz5C,IAAA,2BAAAiD,MACD,WACSwR,KAAK4hC,4BACN5hC,KAAK4hC,2BAA4B,EACjC5+B,GAAAA,UAAgBhD,KAAK+hC,kBAAkB,GAAO,GAEtD,GAAC,CAAAx2C,IAAA,4BAAAiD,MACD,WAA4B,IAAAwnC,EAAA,KAMxBhzB,GAAAA,YAAiB,WACTgzB,EAAK4I,cACL5I,EAAKvsB,KAAK4wB,YAGVrE,EAAKvsB,KAAKo4B,mBAElB,GACJ,GACA,CAAAt2C,IAAA,iBAAAiD,MAGA,YACQwR,KAAKy+B,UAAaz+B,KAAKtR,WAE3BsR,KAAKy+B,SAAWz+B,KAAKs0B,UACzB,GAAC,CAAA/oC,IAAA,eAAAiD,MACD,WACI,GAAKwR,KAAKtR,WAGVsR,KAAK02B,eACC12B,KAAKpJ,QAAQquC,qBAAuBjlC,KAAKk7B,UAC1Cl7B,KAAK4+B,eADV,CAWA,GAAI5+B,KAAKu+B,aAAev+B,KAAKu+B,WAAW7vC,SACpC,IAAK,IAAIkJ,EAAI,EAAGA,EAAIoI,KAAKyiC,KAAKnzC,OAAQsI,IAAK,CAC1BoI,KAAKyiC,KAAK7qC,GAClB8+B,cACT,CAEJ,IAAMwO,EAAallC,KAAK5U,OACxB4U,KAAK5U,OAAS4U,KAAKs0B,SAAQ,GAC3Bt0B,KAAKmlC,gBnBxcQ,CACrBv0C,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,ImB0c7BsO,KAAK4+B,eAAgB,EACrB5+B,KAAKu5B,qBAAkBpvC,EACvB6V,KAAKwkC,gBAAgB,UAAWxkC,KAAK5U,OAAOioC,WAC5C,IAAQrmC,EAAkBgT,KAAKpJ,QAAvB5J,cACRA,GACIA,EAAcq4B,OAAO,gBAAiBrlB,KAAK5U,OAAOioC,UAAW6R,EAAaA,EAAW7R,eAAYlpC,EAtBrG,CAuBJ,GAAC,CAAAoB,IAAA,eAAAiD,MACD,WAAgC,IAAnB42C,EAAK/1C,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,UACbg2C,EAAmBx7C,QAAQmW,KAAKpJ,QAAQ0uC,cAAgBtlC,KAAKtR,UAC7DsR,KAAKm1B,QACLn1B,KAAKm1B,OAAO4L,cAAgB/gC,KAAKyJ,KAAKs3B,aACtC/gC,KAAKm1B,OAAOiQ,QAAUA,IACtBC,GAAmB,GAEnBA,IACArlC,KAAKm1B,OAAS,CACV4L,YAAa/gC,KAAKyJ,KAAKs3B,YACvBqE,MAAAA,EACAG,OAAQ3E,EAAkB5gC,KAAKtR,UAC/BgM,OAAQimC,EAAc3gC,KAAKtR,WAGvC,GAAC,CAAAnD,IAAA,iBAAAiD,MACD,WACI,GAAKqyC,EAAL,CAEA,IAAM2E,EAAmBxlC,KAAK4+B,eAAiB5+B,KAAKwhC,qBAC9CiE,EAAgBzlC,KAAKu5B,kBAAoBoE,GAAY39B,KAAKu5B,iBAC1D1iC,EAAoBmJ,KAAKqkC,uBACzBqB,EAAyB7uC,EACzBA,EAAkBmJ,KAAKrJ,aAAc,SACrCxM,EACAw7C,EAA8BD,IAA2B1lC,KAAKskC,2BAChEkB,IACCC,GACGxuC,GAAa+I,KAAKrJ,eAClBgvC,KACJ9E,EAAe7gC,KAAKtR,SAAUg3C,GAC9B1lC,KAAKwhC,sBAAuB,EAC5BxhC,KAAKg+B,iBAdC,CAgBd,GAAC,CAAAzyC,IAAA,UAAAiD,MACD,WAAgC,IAAxBo3C,IAAev2C,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,KAAAA,UAAA,GACbw2C,EAAU7lC,KAAKo1B,iBACjB/B,EAAYrzB,KAAK8lC,oBAAoBD,GAUzC,OAJID,IACAvS,EAAYrzB,KAAK4lC,gBAAgBvS,IAErC0S,GAAS1S,GACF,CACH0N,YAAa/gC,KAAKyJ,KAAKs3B,YACvBiF,YAAaH,EACbxS,UAAAA,EACA18B,aAAc,CAAC,EACf0B,OAAQ2H,KAAKhR,GAErB,GAAC,CAAAzD,IAAA,iBAAAiD,MACD,WACI,IAAQxB,EAAkBgT,KAAKpJ,QAAvB5J,cACR,IAAKA,EACD,MnB1gBS,CACrB4D,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,ImB4gB7B,IAAMo/B,EAAM9jC,EAAc2kC,qBAElBwD,EAAWn1B,KAAKyJ,KAAhB0rB,OAKR,OAJIA,IACAjE,GAAcJ,EAAIlgC,EAAGukC,EAAOz6B,OAAO9J,GACnCsgC,GAAcJ,EAAIjgC,EAAGskC,EAAOz6B,OAAO7J,IAEhCigC,CACX,GAAC,CAAAvlC,IAAA,sBAAAiD,MACD,SAAoBsiC,GAChB,IAAMmV,EnBrhBO,CACrBr1C,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,ImBuhB7BwrC,GAAY+I,EAAkBnV,GAK9B,IAAK,IAAIl5B,EAAI,EAAGA,EAAIoI,KAAKyiC,KAAKnzC,OAAQsI,IAAK,CACvC,IAAM6N,EAAOzF,KAAKyiC,KAAK7qC,GACfu9B,EAAoB1vB,EAApB0vB,OAAQv+B,EAAY6O,EAAZ7O,QAChB,GAAI6O,IAASzF,KAAKyJ,MAAQ0rB,GAAUv+B,EAAQ0uC,aAAc,CAKtD,GAAInQ,EAAOoQ,OAAQ,CACfrI,GAAY+I,EAAkBnV,GAC9B,IAAgBoV,EAAelmC,KAAKyJ,KAA5B0rB,OAKJ+Q,IACAhV,GAAc+U,EAAiBr1C,GAAIs1C,EAAWxrC,OAAO9J,GACrDsgC,GAAc+U,EAAiBp1C,GAAIq1C,EAAWxrC,OAAO7J,GAE7D,CACAqgC,GAAc+U,EAAiBr1C,EAAGukC,EAAOz6B,OAAO9J,GAChDsgC,GAAc+U,EAAiBp1C,EAAGskC,EAAOz6B,OAAO7J,EACpD,CACJ,CACA,OAAOo1C,CACX,GAAC,CAAA16C,IAAA,iBAAAiD,MACD,SAAesiC,GAA4B,IAAvBqV,EAAa92C,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,IAAAA,UAAA,GACvB+2C,EnBtjBO,CACrBx1C,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,ImBwjB7BwrC,GAAYkJ,EAAgBtV,GAC5B,IAAK,IAAIl5B,EAAI,EAAGA,EAAIoI,KAAKyiC,KAAKnzC,OAAQsI,IAAK,CACvC,IAAM6N,EAAOzF,KAAKyiC,KAAK7qC,IAClBuuC,GACD1gC,EAAK7O,QAAQ0uC,cACb7/B,EAAK0vB,QACL1vB,IAASA,EAAKgE,MACdioB,GAAa0U,EAAgB,CACzBx1C,GAAI6U,EAAK0vB,OAAOz6B,OAAO9J,EACvBC,GAAI4U,EAAK0vB,OAAOz6B,OAAO7J,IAG1BoG,GAAawO,EAAK9O,eAEvB+6B,GAAa0U,EAAgB3gC,EAAK9O,aACtC,CAIA,OAHIM,GAAa+I,KAAKrJ,eAClB+6B,GAAa0U,EAAgBpmC,KAAKrJ,cAE/ByvC,CACX,GAAC,CAAA76C,IAAA,kBAAAiD,MACD,SAAgBsiC,GACZ,IAAMuV,EnB7kBO,CACrBz1C,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,ImB+kB7BwrC,GAAYmJ,EAAqBvV,GACjC,IAAK,IAAIl5B,EAAI,EAAGA,EAAIoI,KAAKyiC,KAAKnzC,OAAQsI,IAAK,CACvC,IAAM6N,EAAOzF,KAAKyiC,KAAK7qC,GACvB,GAAK6N,EAAK/W,UAELuI,GAAawO,EAAK9O,cAAvB,CAEA25B,GAAS7qB,EAAK9O,eAAiB8O,EAAK8+B,iBACpC,IAAM9G,EnBtlBG,CACrB7sC,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,ImBylBzBwrC,GAAYO,EADIh4B,EAAK2vB,kBAErBoI,GAAoB6I,EAAqB5gC,EAAK9O,aAAc8O,EAAKg5B,SAAWh5B,EAAKg5B,SAASpL,eAAYlpC,EAAWszC,EALrG,CAMhB,CAIA,OAHIxmC,GAAa+I,KAAKrJ,eAClB6mC,GAAoB6I,EAAqBrmC,KAAKrJ,cAE3C0vC,CACX,GAAC,CAAA96C,IAAA,iBAAAiD,MACD,SAAeyS,GACXjB,KAAKsmC,YAAcrlC,EACnBjB,KAAKyJ,KAAK88B,2BACVvmC,KAAKihC,mBAAoB,CAC7B,GAAC,CAAA11C,IAAA,aAAAiD,MACD,SAAWoI,GACPoJ,KAAKpJ,SAAOtK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL0T,KAAKpJ,SACLA,GAAO,IACVioC,eAAiC10C,IAAtByM,EAAQioC,WAA0BjoC,EAAQioC,WAE7D,GAAC,CAAAtzC,IAAA,oBAAAiD,MACD,WACIwR,KAAKm1B,YAAShrC,EACd6V,KAAK5U,YAASjB,EACd6V,KAAKy+B,cAAWt0C,EAChB6V,KAAKskC,gCAA6Bn6C,EAClC6V,KAAKsmC,iBAAcn8C,EACnB6V,KAAK5H,YAASjO,EACd6V,KAAK4+B,eAAgB,CACzB,GAAC,CAAArzC,IAAA,qCAAAiD,MACD,WACSwR,KAAKwmC,gBAQNxmC,KAAKwmC,eAAeC,2BACpBrkC,GAAUlB,WACVlB,KAAKwmC,eAAetE,oBAAmB,EAE/C,GAAC,CAAA32C,IAAA,qBAAAiD,MACD,WAA+C,IACvCmL,EADW+sC,EAAkBr3C,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,IAAAA,UAAA,GAO3B+sC,EAAOp8B,KAAK2mC,UAClB3mC,KAAKihC,oBAAsBjhC,KAAKihC,kBAAoB7E,EAAK6E,mBACzDjhC,KAAKmhC,mBAAqBnhC,KAAKmhC,iBAAmB/E,EAAK+E,kBACvDnhC,KAAKkhC,0BAA4BlhC,KAAKkhC,wBAA0B9E,EAAK8E,yBACrE,IAAM0F,EAAW/8C,QAAQmW,KAAK++B,eAAiB/+B,OAASo8B,EAKlD/T,IAAYqe,GACbE,GAAY5mC,KAAKkhC,yBAClBlhC,KAAKihC,oBACmB,QAAtBtnC,EAAKqG,KAAK/S,cAA2B,IAAP0M,OAAgB,EAASA,EAAGsnC,oBAC5DjhC,KAAK6mC,gCACT,IAAIxe,EAAJ,CAEA,IAAAye,EAA6B9mC,KAAKpJ,QAA1BxL,EAAM07C,EAAN17C,OAAQyB,EAAQi6C,EAARj6C,SAIhB,GAAKmT,KAAK5U,SAAYA,GAAUyB,GAAhC,CASA,GAPAmT,KAAKymC,yBAA2BrkC,GAAUlB,WAOrClB,KAAKsmC,cAAgBtmC,KAAKojC,eAAgB,CAE3C,IAAMoD,EAAiBxmC,KAAK+mC,6BACxBP,GACAA,EAAep7C,QACY,IAA3B4U,KAAKuiC,mBACLviC,KAAKwmC,eAAiBA,EACtBxmC,KAAKgnC,qCACLhnC,KAAKojC,enB/qBA,CACrBxyC,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,ImBirBrBsO,KAAKinC,qBnBhrBA,CACrBr2C,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,ImBkrBrB69B,GAAqBvvB,KAAKinC,qBAAsBjnC,KAAK5U,OAAOioC,UAAWmT,EAAep7C,OAAOioC,WAC7F6J,GAAYl9B,KAAKojC,eAAgBpjC,KAAKinC,uBAGtCjnC,KAAKwmC,eAAiBxmC,KAAKojC,oBAAiBj5C,CAEpD,CAKA,GAAK6V,KAAKojC,gBAAmBpjC,KAAKsmC,YAAlC,CAyCA,GApCKtmC,KAAK5H,SACN4H,KAAK5H,OnBlsBI,CACrBxH,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,ImBosBzBsO,KAAKknC,qBnBnsBI,CACrBt2C,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,KmBysBzBsO,KAAKojC,gBACLpjC,KAAKinC,sBACLjnC,KAAKwmC,gBACLxmC,KAAKwmC,eAAepuC,QACpB4H,KAAKgnC,qCACL3X,GAAgBrvB,KAAK5H,OAAQ4H,KAAKojC,eAAgBpjC,KAAKwmC,eAAepuC,SAKjE4H,KAAKsmC,aACNz8C,QAAQmW,KAAK++B,cAEb/+B,KAAK5H,OAAS4H,KAAKmnC,eAAennC,KAAK5U,OAAOioC,WAG9C6J,GAAYl9B,KAAK5H,OAAQ4H,KAAK5U,OAAOioC,WAEzCxC,GAAc7wB,KAAK5H,OAAQ4H,KAAKsmC,cAMhCpJ,GAAYl9B,KAAK5H,OAAQ4H,KAAK5U,OAAOioC,WAKrCrzB,KAAK6mC,+BAAgC,CACrC7mC,KAAK6mC,gCAAiC,EACtC,IAAML,EAAiBxmC,KAAK+mC,6BACxBP,GACA38C,QAAQ28C,EAAezH,gBACnBl1C,QAAQmW,KAAK++B,gBAChByH,EAAe5vC,QAAQ0uC,cACxBkB,EAAepuC,QACY,IAA3B4H,KAAKuiC,mBACLviC,KAAKwmC,eAAiBA,EACtBxmC,KAAKgnC,qCACLhnC,KAAKojC,enBhvBA,CACrBxyC,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,ImBkvBrBsO,KAAKinC,qBnBjvBA,CACrBr2C,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,ImBmvBrB69B,GAAqBvvB,KAAKinC,qBAAsBjnC,KAAK5H,OAAQouC,EAAepuC,QAC5E8kC,GAAYl9B,KAAKojC,eAAgBpjC,KAAKinC,uBAGtCjnC,KAAKwmC,eAAiBxmC,KAAKojC,oBAAiBj5C,CAEpD,CAIAi2C,GAAoBE,sBA/DV,CA9BA,CANA,CAoGd,GAAC,CAAA/0C,IAAA,6BAAAiD,MACD,WACI,GAAKwR,KAAK/S,SACNqjC,GAAStwB,KAAK/S,OAAO0J,gBACrB45B,GAAevwB,KAAK/S,OAAO0J,cAG/B,OAAIqJ,KAAK/S,OAAOm6C,eACLpnC,KAAK/S,OAGL+S,KAAK/S,OAAO85C,4BAE3B,GAAC,CAAAx7C,IAAA,eAAAiD,MACD,WACI,OAAO3E,SAASmW,KAAKojC,gBACjBpjC,KAAKsmC,aACLtmC,KAAKpJ,QAAQitC,aACb7jC,KAAK5U,OACb,GAAC,CAAAG,IAAA,iBAAAiD,MACD,WACI,IAAImL,EACEyiC,EAAOp8B,KAAK2mC,UACZC,EAAW/8C,QAAQmW,KAAK++B,eAAiB/+B,OAASo8B,EACpD/T,GAAU,EAuBd,IAlBIroB,KAAKihC,oBAA6C,QAAtBtnC,EAAKqG,KAAK/S,cAA2B,IAAP0M,OAAgB,EAASA,EAAGsnC,sBACtF5Y,GAAU,GAMVue,IACC5mC,KAAKkhC,yBAA2BlhC,KAAKmhC,oBACtC9Y,GAAU,GAMVroB,KAAKymC,2BAA6BrkC,GAAUlB,YAC5CmnB,GAAU,IAEVA,EAAJ,CAEA,IAAAgf,EAA6BrnC,KAAKpJ,QAA1BxL,EAAMi8C,EAANj8C,OAAQyB,EAAQw6C,EAARx6C,SAWhB,GANAmT,KAAKghC,gBAAkBn3C,QAASmW,KAAK/S,QAAU+S,KAAK/S,OAAO+zC,iBACvDhhC,KAAKi7B,kBACLj7B,KAAKsnC,kBACJtnC,KAAKghC,kBACNhhC,KAAKsmC,YAActmC,KAAKojC,oBAAiBj5C,GAExC6V,KAAK5U,SAAYA,GAAUyB,GAAhC,CAMAqwC,GAAYl9B,KAAKmlC,gBAAiBnlC,KAAK5U,OAAOioC,WAI9C,IAAMkU,EAAiBvnC,KAAKs5B,UAAU1oC,EAChC42C,EAAiBxnC,KAAKs5B,UAAUzoC,GvBvyBlD,SAAyBigC,EAAKwI,EAAWmO,GAAsC,IAA5BC,EAAkBr4C,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,IAAAA,UAAA,GAC3Ds4C,EAAaF,EAASn4C,OAC5B,GAAKq4C,EAAL,CAIA,IAAIliC,EACAxE,EAFJq4B,EAAU1oC,EAAI0oC,EAAUzoC,EAAI,EAG5B,IAAK,IAAI+G,EAAI,EAAGA,EAAI+vC,EAAY/vC,IAAK,CAEjCqJ,GADAwE,EAAOgiC,EAAS7vC,IACH2hC,gBAKb,IAAM7qC,EAAW+W,EAAK/W,SAClBA,GACAA,EAASoI,OACkB,aAA3BpI,EAASoI,MAAM8wC,UAGfF,GACAjiC,EAAK7O,QAAQ0uC,cACb7/B,EAAK0vB,QACL1vB,IAASA,EAAKgE,MACdioB,GAAaZ,EAAK,CACdlgC,GAAI6U,EAAK0vB,OAAOz6B,OAAO9J,EACvBC,GAAI4U,EAAK0vB,OAAOz6B,OAAO7J,IAG3BoQ,IAEAq4B,EAAU1oC,GAAKqQ,EAAMrQ,EAAEoB,MACvBsnC,EAAUzoC,GAAKoQ,EAAMpQ,EAAEmB,MAEvB6+B,GAAcC,EAAK7vB,IAEnBymC,GAAsBzwC,GAAawO,EAAK9O,eACxC+6B,GAAaZ,EAAKrrB,EAAK9O,cAE/B,CAKA2iC,EAAU1oC,EAAImgC,GAAcuI,EAAU1oC,GACtC0oC,EAAUzoC,EAAIkgC,GAAcuI,EAAUzoC,EA3C5B,CA4Cd,CuB6vBYg3C,CAAgB7nC,KAAKmlC,gBAAiBnlC,KAAKs5B,UAAWt5B,KAAKyiC,KAAMmE,IAK7DxK,EAAKhxC,QACJgxC,EAAKhkC,QACgB,IAArB4H,KAAKs5B,UAAU1oC,GAAgC,IAArBoP,KAAKs5B,UAAUzoC,IAC1CurC,EAAKhkC,OAASgkC,EAAKhxC,OAAOioC,WAE9B,IAAQj7B,EAAWgkC,EAAXhkC,OACR,GAAKA,EAAL,CAaK4H,KAAKu5B,kBACNv5B,KAAKu5B,gBnBv2BM,CACvB3oC,EAP2B,CAC3Bq+B,UAAW,EACXj9B,MAAO,EACPyI,OAAQ,EACRu0B,YAAa,GAIbn+B,EAR2B,CAC3Bo+B,UAAW,EACXj9B,MAAO,EACPyI,OAAQ,EACRu0B,YAAa,ImB02BDhvB,KAAK8nC,6BnBx2BM,CACvBl3C,EAP2B,CAC3Bq+B,UAAW,EACXj9B,MAAO,EACPyI,OAAQ,EACRu0B,YAAa,GAIbn+B,EAR2B,CAC3Bo+B,UAAW,EACXj9B,MAAO,EACPyI,OAAQ,EACRu0B,YAAa,KmB42BL,IAAM+Y,EAA0B/nC,KAAKgoC,oBAUrC9Y,GAAalvB,KAAKu5B,gBAAiBv5B,KAAKmlC,gBAAiB/sC,EAAQ4H,KAAKrJ,cACtEqJ,KAAKgoC,oBAAsBhJ,GAAyBh/B,KAAKu5B,gBAAiBv5B,KAAKs5B,WAC3Et5B,KAAKgoC,sBAAwBD,GAC7B/nC,KAAKs5B,UAAU1oC,IAAM22C,GACrBvnC,KAAKs5B,UAAUzoC,IAAM22C,IACrBxnC,KAAKqiC,cAAe,EACpBriC,KAAKg+B,iBACLh+B,KAAKwkC,gBAAgB,mBAAoBpsC,IAK7CgoC,GAAoBG,wBA3BpB,MANQvgC,KAAKgoC,sBACLhoC,KAAKu5B,gBnBh2BE,CACvB3oC,EAP2B,CAC3Bq+B,UAAW,EACXj9B,MAAO,EACPyI,OAAQ,EACRu0B,YAAa,GAIbn+B,EAR2B,CAC3Bo+B,UAAW,EACXj9B,MAAO,EACPyI,OAAQ,EACRu0B,YAAa,ImBm2BGhvB,KAAKgoC,oBAAsB,OAC3BhoC,KAAKg+B,iBAnCH,CAbA,CA+Ed,GAAC,CAAAzyC,IAAA,OAAAiD,MACD,WACIwR,KAAKsiC,WAAY,CAErB,GAAC,CAAA/2C,IAAA,OAAAiD,MACD,WACIwR,KAAKsiC,WAAY,CAErB,GAAC,CAAA/2C,IAAA,iBAAAiD,MACD,WAAiC,IAAlBy5C,IAAS54C,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,KAAAA,UAAA,GAEpB,GADA2Q,KAAKpJ,QAAQonC,gBAAkBh+B,KAAKpJ,QAAQonC,iBACxCiK,EAAW,CACX,IAAMpN,EAAQ76B,KAAK86B,WACnBD,GAASA,EAAMmD,gBACnB,CACIh+B,KAAK++B,eAAiB/+B,KAAK++B,aAAarwC,WACxCsR,KAAK++B,kBAAe50C,EAE5B,GAAC,CAAAoB,IAAA,qBAAAiD,MACD,SAAmByS,GAA6C,IAAAk1B,EAAA,KAAtCyN,EAA4Bv0C,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,IAAAA,UAAA,GAC5CovC,EAAWz+B,KAAKy+B,SAChByJ,EAAuBzJ,EACvBA,EAAS9nC,aACT,CAAC,EACDwxC,GAAW77C,EAAAA,EAAAA,GAAA,GAAQ0T,KAAKrJ,cACxB2vC,EnB15BS,CACvB11C,EAP2B,CAC3Bq+B,UAAW,EACXj9B,MAAO,EACPyI,OAAQ,EACRu0B,YAAa,GAIbn+B,EAR2B,CAC3Bo+B,UAAW,EACXj9B,MAAO,EACPyI,OAAQ,EACRu0B,YAAa,ImB65BAhvB,KAAKwmC,gBACLxmC,KAAKwmC,eAAe5vC,QAAQitC,aAC7B7jC,KAAKojC,eAAiBpjC,KAAKinC,0BAAuB98C,GAEtD6V,KAAK6mC,gCAAkCjD,EACvC,IAWIwE,EAXEC,EnB35BO,CACrBz3C,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,ImB65BvB42C,EAAiB7J,EAAWA,EAASpmC,YAASlO,EAC9Co+C,EAAevoC,KAAK5U,OAAS4U,KAAK5U,OAAOiN,YAASlO,EAClDq+C,EAA0BF,IAAmBC,EAC7C1N,EAAQ76B,KAAK86B,WACbwB,GAAgBzB,GAASA,EAAME,QAAQzrC,QAAU,EACjD+sC,EAAyBxyC,QAAQ2+C,IAClClM,IAC0B,IAA3Bt8B,KAAKpJ,QAAQioC,YACZ7+B,KAAKyiC,KAAK/4C,KAAK++C,KACpBzoC,KAAKuiC,kBAAoB,EAEzBviC,KAAK0oC,eAAiB,SAACztB,GACnB,IAAM5J,EAAW4J,EAAS,IAC1B0tB,GAAarC,EAAY11C,EAAGqQ,EAAMrQ,EAAGygB,GACrCs3B,GAAarC,EAAYz1C,EAAGoQ,EAAMpQ,EAAGwgB,GACrC8kB,EAAKyS,eAAetC,GAChBnQ,EAAKiN,gBACLjN,EAAK8Q,sBACL9Q,EAAK/qC,QACL+qC,EAAKqQ,gBACLrQ,EAAKqQ,eAAep7C,SACpBmkC,GAAqB8Y,EAAgBlS,EAAK/qC,OAAOioC,UAAW8C,EAAKqQ,eAAep7C,OAAOioC,WACvFwV,GAAO1S,EAAKiN,eAAgBjN,EAAK8Q,qBAAsBoB,EAAgBh3B,GAKnE+2B,GACAxK,GAAUzH,EAAKiN,eAAgBgF,KAC/BjS,EAAK8K,mBAAoB,GAExBmH,IACDA,EnB57BC,CACrBx3C,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,KmB87BrBwrC,GAAYkL,EAAoBjS,EAAKiN,iBAErCoF,IACArS,EAAKuI,gBAAkByJ,EACvBjM,GAAUiM,EAAaD,EAAsB/R,EAAKx/B,aAAc0a,EAAUgrB,EAAwBC,IAEtGnG,EAAK1sB,KAAK88B,2BACVpQ,EAAK6H,iBACL7H,EAAKoM,kBAAoBlxB,CAC7B,EACArR,KAAK0oC,eAAe1oC,KAAKpJ,QAAQitC,WAAa,IAAO,EACzD,GAAC,CAAAt4C,IAAA,iBAAAiD,MACD,SAAeoI,GAAS,IAAAy/B,EAAA,KACpBr2B,KAAKwkC,gBAAgB,kBACrBxkC,KAAKi7B,kBAAoBj7B,KAAKi7B,iBAAiB3f,OAC3Ctb,KAAK++B,cAAgB/+B,KAAK++B,aAAa9D,kBACvCj7B,KAAK++B,aAAa9D,iBAAiB3f,OAEnCtb,KAAKsnC,mBACLrkC,GAAYjD,KAAKsnC,kBACjBtnC,KAAKsnC,sBAAmBn9C,GAO5B6V,KAAKsnC,iBAAmBtkC,GAAAA,QAAa,WACjC81B,GAAsBC,wBAAyB,EAC/C1C,EAAK4E,iBCj+BrB,SAA4BzsC,EAAOunB,EAAWnf,GAC1C,IAAMkyC,EAAgBr4C,EAAcjC,GAASA,EAAQg4B,GAAYh4B,GAEjE,OADAs6C,EAAc3/C,MAAMs6B,GAAmB,GAAIqlB,EAAe/yB,EAAWnf,IAC9DkyC,EAAcl+C,SACzB,CD69BwCm+C,CAAmB,EAr8BnC,KAq8BqDz8C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtDsK,GAAO,IACVsmB,SAAU,SAACjC,GACPob,EAAKqS,eAAeztB,GACpBrkB,EAAQsmB,UAAYtmB,EAAQsmB,SAASjC,EACzC,EACAgC,WAAY,WACRrmB,EAAQqmB,YAAcrmB,EAAQqmB,aAC9BoZ,EAAK2S,mBACT,KAEA3S,EAAK0I,eACL1I,EAAK0I,aAAa9D,iBAAmB5E,EAAK4E,kBAE9C5E,EAAKiR,sBAAmBn9C,CAC5B,GACJ,GAAC,CAAAoB,IAAA,oBAAAiD,MACD,WACQwR,KAAK++B,eACL/+B,KAAK++B,aAAa9D,sBAAmB9wC,EACrC6V,KAAK++B,aAAaP,qBAAkBr0C,GAExC,IAAM0wC,EAAQ76B,KAAK86B,WACnBD,GAASA,EAAMoO,wBACfjpC,KAAK++B,aACD/+B,KAAKi7B,iBACDj7B,KAAK0+B,qBACDv0C,EACZ6V,KAAKwkC,gBAAgB,oBACzB,GAAC,CAAAj5C,IAAA,kBAAAiD,MACD,WACQwR,KAAKi7B,mBACLj7B,KAAK0oC,gBAAkB1oC,KAAK0oC,eAr+BpB,KAs+BR1oC,KAAKi7B,iBAAiB3f,QAE1Btb,KAAKgpC,mBACT,GAAC,CAAAz9C,IAAA,0BAAAiD,MACD,WACI,IAAM4tC,EAAOp8B,KAAK2mC,UACZO,EAAuD9K,EAAvD8K,qBAAsB9uC,EAAiCgkC,EAAjChkC,OAAQhN,EAAyBgxC,EAAzBhxC,OAAQuL,EAAiBylC,EAAjBzlC,aAC5C,GAAKuwC,GAAyB9uC,GAAWhN,EAAzC,CAOA,GAAI4U,OAASo8B,GACTp8B,KAAK5U,QACLA,GACA89C,GAA0BlpC,KAAKpJ,QAAQuyC,cAAenpC,KAAK5U,OAAOioC,UAAWjoC,EAAOioC,WAAY,CAChGj7B,EAAS4H,KAAK5H,QnB7gCL,CACrBxH,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,ImB+gCzB,IAAM03C,EAAUza,GAAW3uB,KAAK5U,OAAOioC,UAAUziC,GACjDwH,EAAOxH,EAAEa,IAAM2qC,EAAKhkC,OAAOxH,EAAEa,IAC7B2G,EAAOxH,EAAEc,IAAM0G,EAAOxH,EAAEa,IAAM23C,EAC9B,IAAMC,EAAU1a,GAAW3uB,KAAK5U,OAAOioC,UAAUxiC,GACjDuH,EAAOvH,EAAEY,IAAM2qC,EAAKhkC,OAAOvH,EAAEY,IAC7B2G,EAAOvH,EAAEa,IAAM0G,EAAOvH,EAAEY,IAAM43C,CAClC,CACAnM,GAAYgK,EAAsB9uC,GAMlCs5B,GAAawV,EAAsBvwC,GAOnCu4B,GAAalvB,KAAK8nC,6BAA8B9nC,KAAKmlC,gBAAiB+B,EAAsBvwC,EA/BlF,CAgCd,GAAC,CAAApL,IAAA,qBAAAiD,MACD,SAAmB3B,EAAU4Y,GACpBzF,KAAKwiC,YAAY5yC,IAAI/C,IACtBmT,KAAKwiC,YAAY3yC,IAAIhD,EAAU,IAAIkxC,IAEzB/9B,KAAKwiC,YAAY9yC,IAAI7C,GAC7BwT,IAAIoF,GACV,IAAMhH,EAASgH,EAAK7O,QAAQ0yC,uBAC5B7jC,EAAKk1B,QAAQ,CACTj7B,WAAYjB,EAASA,EAAOiB,gBAAavV,EACzCk0C,sBAAuB5/B,GAAUA,EAAO8qC,4BAClC9qC,EAAO8qC,4BAA4B9jC,QACnCtb,GAEd,GAAC,CAAAoB,IAAA,SAAAiD,MACD,WACI,IAAMqsC,EAAQ76B,KAAK86B,WACnB,OAAOD,GAAQA,EAAMuB,OAASp8B,IAClC,GAAC,CAAAzU,IAAA,UAAAiD,MACD,WACI,IAAImL,EAEJ,OADqBqG,KAAKpJ,QAAlB/J,WACsC,QAA1B8M,EAAKqG,KAAK86B,kBAA+B,IAAPnhC,OAAgB,EAASA,EAAGyiC,OAAgBp8B,IACtG,GAAC,CAAAzU,IAAA,cAAAiD,MACD,WACI,IAAImL,EAEJ,OADqBqG,KAAKpJ,QAAlB/J,SACqC,QAA1B8M,EAAKqG,KAAK86B,kBAA+B,IAAPnhC,OAAgB,EAASA,EAAGskC,cAAW9zC,CAChG,GAAC,CAAAoB,IAAA,WAAAiD,MACD,WACI,IAAQ3B,EAAamT,KAAKpJ,QAAlB/J,SACR,GAAIA,EACA,OAAOmT,KAAKyJ,KAAK+4B,YAAY9yC,IAAI7C,EACzC,GAAC,CAAAtB,IAAA,UAAAiD,MACD,WAAiE,IAAA06B,EAAA75B,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAApDkyC,EAAUrY,EAAVqY,WAAY7hC,EAAUwpB,EAAVxpB,WAAY2+B,EAAqBnV,EAArBmV,sBACxBxD,EAAQ76B,KAAK86B,WACfD,GACAA,EAAMF,QAAQ36B,KAAMq+B,GACpBkD,IACAvhC,KAAKu5B,qBAAkBpvC,EACvB6V,KAAKuhC,YAAa,GAElB7hC,GACAM,KAAKu6B,WAAW,CAAE76B,WAAAA,GAC1B,GAAC,CAAAnU,IAAA,WAAAiD,MACD,WACI,IAAMqsC,EAAQ76B,KAAK86B,WACnB,QAAID,GACOA,EAAMD,SAAS56B,KAK9B,GAAC,CAAAzU,IAAA,gBAAAiD,MACD,WACI,IAAQxB,EAAkBgT,KAAKpJ,QAAvB5J,cACR,GAAKA,EAAL,CAGA,IAAIw8C,GAAY,EAKR7yC,EAAiB3J,EAAjB2J,aAQR,IAPIA,EAAazB,QACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAatB,WACbm0C,GAAY,GAGXA,EAAL,CAIA,IAFA,IAAMC,EAAc,CAAC,EAEZ7xC,EAAI,EAAGA,EAAIqoC,GAAc3wC,OAAQsI,IAAK,CAC3C,IAAMrM,EAAM,SAAW00C,GAAcroC,GAEjCjB,EAAapL,KACbk+C,EAAYl+C,GAAOoL,EAAapL,GAChCyB,EAAc08C,eAAen+C,EAAK,GAE1C,CAKA,IAAK,IAAMA,KAFXyB,EAAce,SAEI07C,EACdz8C,EAAc08C,eAAen+C,EAAKk+C,EAAYl+C,IAIlDyB,EAAcgxC,gBApBJ,CAhBA,CAqCd,GAAC,CAAAzyC,IAAA,sBAAAiD,MACD,SAAoBuO,GAChB,IAAIpD,EAAI+Z,EACR,GAAK1T,KAAKtR,WAAYsR,KAAKshC,MAA3B,CAEA,IAAKthC,KAAKsiC,UACN,OAAOpC,GAEX,IAAMyJ,EAAS,CACXxJ,WAAY,IAEVtpC,EAAoBmJ,KAAKqkC,uBAC/B,GAAIrkC,KAAKuhC,WAQL,OAPAvhC,KAAKuhC,YAAa,EAClBoI,EAAO1zC,QAAU,GACjB0zC,EAAOC,cACHxrC,GAAiC,OAAdrB,QAAoC,IAAdA,OAAuB,EAASA,EAAU6sC,gBAAkB,GACzGD,EAAOp4C,UAAYsF,EACbA,EAAkBmJ,KAAKrJ,aAAc,IACrC,OACCgzC,EAEX,IAAMvN,EAAOp8B,KAAK2mC,UAClB,IAAK3mC,KAAKu5B,kBAAoBv5B,KAAK5U,SAAWgxC,EAAKhkC,OAAQ,CACvD,IAAMyxC,EAAc,CAAC,EAerB,OAdI7pC,KAAKpJ,QAAQ/J,WACbg9C,EAAY5zC,aACsB9L,IAA9B6V,KAAKrJ,aAAaV,QACZ+J,KAAKrJ,aAAaV,QAClB,EACV4zC,EAAYD,cACRxrC,GAAiC,OAAdrB,QAAoC,IAAdA,OAAuB,EAASA,EAAU6sC,gBAAkB,IAEzG5pC,KAAKqiC,eAAiBprC,GAAa+I,KAAKrJ,gBACxCkzC,EAAYt4C,UAAYsF,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNmJ,KAAKqiC,cAAe,GAEjBwH,CACX,CACA,IAAMC,EAAiB1N,EAAKsC,iBAAmBtC,EAAKzlC,aACpDqJ,KAAK+pC,0BACLJ,EAAOp4C,UAAYytC,GAAyBh/B,KAAK8nC,6BAA8B9nC,KAAKs5B,UAAWwQ,GAC3FjzC,IACA8yC,EAAOp4C,UAAYsF,EAAkBizC,EAAgBH,EAAOp4C,YAEhE,IAAAy4C,EAAiBhqC,KAAKu5B,gBAAd3oC,EAACo5C,EAADp5C,EAAGC,EAACm5C,EAADn5C,EA+BX,IAAK,IAAMtF,KA9BXo+C,EAAO3yC,gBAAkB,GAAH1N,OAAiB,IAAXsH,EAAE6J,OAAY,MAAAnR,OAAgB,IAAXuH,EAAE4J,OAAY,OACzD2hC,EAAKsC,gBAKLiL,EAAO1zC,QACHmmC,IAASp8B,KACiG,QAAnG0T,EAAuC,QAAjC/Z,EAAKmwC,EAAe7zC,eAA4B,IAAP0D,EAAgBA,EAAKqG,KAAKrJ,aAAaV,eAA4B,IAAPyd,EAAgBA,EAAK,EACjI1T,KAAKw+B,gBACDx+B,KAAKrJ,aAAaV,QAClB6zC,EAAetN,YAO7BmN,EAAO1zC,QACHmmC,IAASp8B,UACwB7V,IAA3B2/C,EAAe7zC,QACX6zC,EAAe7zC,QACf,QAC2B9L,IAA/B2/C,EAAetN,YACXsN,EAAetN,YACf,EAKArsC,EACd,QAA4BhG,IAAxB2/C,EAAev+C,GAAnB,CAEA,IAAA0+C,EAA6B95C,EAAgB5E,GAArC6tC,EAAO6Q,EAAP7Q,QAASwC,EAAOqO,EAAPrO,QAOXsO,EAAiC,SAArBP,EAAOp4C,UACnBu4C,EAAev+C,GACf6tC,EAAQ0Q,EAAev+C,GAAM6wC,GACnC,GAAIR,EAEA,IADA,IAAMuO,EAAMvO,EAAQtsC,OACXsI,EAAI,EAAGA,EAAIuyC,EAAKvyC,IACrB+xC,EAAO/N,EAAQhkC,IAAMsyC,OAIzBP,EAAOp+C,GAAO2+C,CAlBN,CAgChB,OANIlqC,KAAKpJ,QAAQ/J,WACb88C,EAAOC,cACHxN,IAASp8B,KACH5B,GAAiC,OAAdrB,QAAoC,IAAdA,OAAuB,EAASA,EAAU6sC,gBAAkB,GACrG,QAEPD,CA5Ga,CA6GxB,GAAC,CAAAp+C,IAAA,gBAAAiD,MACD,WACIwR,KAAKu+B,WAAav+B,KAAKy+B,cAAWt0C,CACtC,GACA,CAAAoB,IAAA,YAAAiD,MACA,WACIwR,KAAKyJ,KAAKu4B,MAAMziC,SAAQ,SAACkG,GAAW,IAAI9L,EAAI,OAAwC,QAAhCA,EAAK8L,EAAKw1B,wBAAqC,IAAPthC,OAAgB,EAASA,EAAG2hB,MAAQ,IAChItb,KAAKyJ,KAAKu4B,MAAMziC,QAAQmlC,IACxB1kC,KAAKyJ,KAAK+4B,YAAY9hC,OAC1B,KAACogC,CAAA,CAztCL,EA2tCJ,CACA,SAASnK,GAAalxB,GAClBA,EAAKkxB,cACT,CACA,SAASkO,GAAmBp/B,GACxB,IAAI9L,EACE8kC,GAAuC,QAA1B9kC,EAAK8L,EAAK84B,kBAA+B,IAAP5kC,OAAgB,EAASA,EAAG8kC,WAAah5B,EAAKg5B,SACnG,GAAIh5B,EAAKy1B,UACLz1B,EAAKra,QACLqzC,GACAh5B,EAAK2kC,aAAa,aAAc,CAChC,IAAAC,EAA2D5kC,EAAKra,OAA7CA,EAAMi/C,EAAjBhX,UAAgCiX,EAAcD,EAA3BrE,YACnBmD,EAAkB1jC,EAAK7O,QAAvBuyC,cACFvC,EAAWnI,EAASpmC,SAAWoN,EAAKra,OAAOiN,OAG3B,SAAlB8wC,EACAhZ,IAAS,SAACvB,GACN,IAAM2b,EAAe3D,EACfnI,EAASuH,YAAYpX,GACrB6P,EAASpL,UAAUzE,GACnBt/B,EAASq/B,GAAW4b,GAC1BA,EAAa94C,IAAMrG,EAAOwjC,GAAMn9B,IAChC84C,EAAa74C,IAAM64C,EAAa94C,IAAMnC,CAC1C,IAEK45C,GAA0BC,EAAe1K,EAASpL,UAAWjoC,IAClE+kC,IAAS,SAACvB,GACN,IAAM2b,EAAe3D,EACfnI,EAASuH,YAAYpX,GACrB6P,EAASpL,UAAUzE,GACnBt/B,EAASq/B,GAAWvjC,EAAOwjC,IACjC2b,EAAa74C,IAAM64C,EAAa94C,IAAMnC,EAIlCmW,EAAK29B,iBAAmB39B,EAAKw1B,mBAC7Bx1B,EAAKw7B,mBAAoB,EACzBx7B,EAAK29B,eAAexU,GAAMl9B,IACtB+T,EAAK29B,eAAexU,GAAMn9B,IAAMnC,EAE5C,IAEJ,IAAMk7C,EnB7yCa,CACvB55C,EAP2B,CAC3Bq+B,UAAW,EACXj9B,MAAO,EACPyI,OAAQ,EACRu0B,YAAa,GAIbn+B,EAR2B,CAC3Bo+B,UAAW,EACXj9B,MAAO,EACPyI,OAAQ,EACRu0B,YAAa,ImBgzCTE,GAAasb,EAAap/C,EAAQqzC,EAASpL,WAC3C,IAAMoX,EnB/yCa,CACvB75C,EAP2B,CAC3Bq+B,UAAW,EACXj9B,MAAO,EACPyI,OAAQ,EACRu0B,YAAa,GAIbn+B,EAR2B,CAC3Bo+B,UAAW,EACXj9B,MAAO,EACPyI,OAAQ,EACRu0B,YAAa,ImBkzCL4X,EACA1X,GAAaub,EAAahlC,EAAK0hC,eAAemD,GAAgB,GAAO7L,EAASuH,aAG9E9W,GAAaub,EAAar/C,EAAQqzC,EAASpL,WAE/C,IAAMiE,GAAoBqG,GAAY6M,GAClCvH,GAA2B,EAC/B,IAAKx9B,EAAK84B,WAAY,CAClB,IAAMiI,EAAiB/gC,EAAKshC,6BAK5B,GAAIP,IAAmBA,EAAejI,WAAY,CAC9C,IAAkBmM,EAAyClE,EAAnD/H,SAAkCkM,EAAiBnE,EAAzBp7C,OAClC,GAAIs/C,GAAkBC,EAAc,CAChC,IAAMC,EnB5zCD,CACrBh6C,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,ImB8zCrB69B,GAAqBqb,EAAkBnM,EAASpL,UAAWqX,EAAerX,WAC1E,IAAMgV,EnB9zCD,CACrBz3C,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,ImBg0CrB69B,GAAqB8Y,EAAgBj9C,EAAQu/C,EAAatX,WACrDwK,GAAiB+M,EAAkBvC,KACpCpF,GAA2B,GAE3BuD,EAAe5vC,QAAQitC,aACvBp+B,EAAK29B,eAAiBiF,EACtB5iC,EAAKwhC,qBAAuB2D,EAC5BnlC,EAAK+gC,eAAiBA,EAE9B,CACJ,CACJ,CACA/gC,EAAK++B,gBAAgB,YAAa,CAC9Bp5C,OAAAA,EACAqzC,SAAAA,EACAx9B,MAAOwpC,EACPD,YAAAA,EACAlT,iBAAAA,EACA2L,yBAAAA,GAER,MACK,GAAIx9B,EAAKy1B,SAAU,CACpB,IAAQ5O,EAAmB7mB,EAAK7O,QAAxB01B,eACRA,GAAkBA,GACtB,CAMA7mB,EAAK7O,QAAQ8I,gBAAavV,CAC9B,CACA,SAAS83C,GAAoBx8B,GAIzB26B,GAAoBC,aACf56B,EAAKxY,SAQLwY,EAAK2hC,iBACN3hC,EAAKw7B,kBAAoBx7B,EAAKxY,OAAOg0C,mBAOzCx7B,EAAKy7B,0BAA4Bz7B,EAAKy7B,wBAA0Br3C,QAAQ4b,EAAKw7B,mBACzEx7B,EAAKxY,OAAOg0C,mBACZx7B,EAAKxY,OAAOi0C,0BAChBz7B,EAAK07B,mBAAqB17B,EAAK07B,iBAAmB17B,EAAKxY,OAAOk0C,kBAClE,CACA,SAASiB,GAAgB38B,GACrBA,EAAKw7B,kBACDx7B,EAAKy7B,wBACDz7B,EAAK07B,kBACD,CAChB,CACA,SAAS4D,GAAct/B,GACnBA,EAAKs/B,eACT,CACA,SAASL,GAAkBj/B,GACvBA,EAAKi/B,mBACT,CACA,SAASC,GAAmBl/B,GACxBA,EAAKm5B,eAAgB,CACzB,CACA,SAASgG,GAAoBn/B,GACzB,IAAQzY,EAAkByY,EAAK7O,QAAvB5J,cACJA,GAAiBA,EAAc+Y,WAAW8kC,uBAC1C79C,EAAcq4B,OAAO,uBAEzB5f,EAAKo7B,gBACT,CACA,SAASkC,GAAgBt9B,GACrBA,EAAKs9B,kBACLt9B,EAAK6gC,YAAc7gC,EAAK29B,eAAiB39B,EAAKrN,YAASjO,EACvDsb,EAAKw7B,mBAAoB,CAC7B,CACA,SAASiB,GAAmBz8B,GACxBA,EAAKy8B,oBACT,CACA,SAASC,GAAe18B,GACpBA,EAAK08B,gBACT,CACA,SAAS8B,GAAcx+B,GACnBA,EAAKw+B,eACT,CACA,SAASe,GAAoBnK,GACzBA,EAAMiQ,oBACV,CACA,SAASnC,GAAap1B,EAAQtS,EAAO1Z,GACjCgsB,EAAO0b,UAAY3wB,GAAI2C,EAAMguB,UAAW,EAAG1nC,GAC3CgsB,EAAOvhB,MAAQsM,GAAI2C,EAAMjP,MAAO,EAAGzK,GACnCgsB,EAAO9Y,OAASwG,EAAMxG,OACtB8Y,EAAOyb,YAAc/tB,EAAM+tB,WAC/B,CACA,SAAS+b,GAAQx3B,EAAQpC,EAAMC,EAAI7pB,GAC/BgsB,EAAO9hB,IAAM6M,GAAI6S,EAAK1f,IAAK2f,EAAG3f,IAAKlK,GACnCgsB,EAAO7hB,IAAM4M,GAAI6S,EAAKzf,IAAK0f,EAAG1f,IAAKnK,EACvC,CACA,SAASshD,GAAOt1B,EAAQpC,EAAMC,EAAI7pB,GAC9BwjD,GAAQx3B,EAAO3iB,EAAGugB,EAAKvgB,EAAGwgB,EAAGxgB,EAAGrJ,GAChCwjD,GAAQx3B,EAAO1iB,EAAGsgB,EAAKtgB,EAAGugB,EAAGvgB,EAAGtJ,EACpC,CACA,SAASkhD,GAAoBhjC,GACzB,OAAQA,EAAKi5B,sBAAwDv0C,IAArCsb,EAAKi5B,gBAAgBlC,WACzD,CACA,IAAM8G,GAA0B,CAC5BrtB,SAAU,IACV/I,KAAM,CAAC,GAAK,EAAG,GAAK,IAElB89B,GAAoB,SAACC,GAAM,MAA0B,qBAAdC,WACzCA,UAAUC,UAAU7iD,cAAc0H,SAASi7C,EAAO,EAMhDG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrEr5C,KAAKQ,MACLyN,GACN,SAASyrC,GAAUzc,GAEfA,EAAKn9B,IAAM25C,GAAWxc,EAAKn9B,KAC3Bm9B,EAAKl9B,IAAM05C,GAAWxc,EAAKl9B,IAC/B,CACA,SAASq0C,GAASjV,GACdua,GAAUva,EAAIlgC,GACdy6C,GAAUva,EAAIjgC,EAClB,CACA,SAASq4C,GAA0BC,EAAe1K,EAAUrzC,GACxD,MAA0B,aAAlB+9C,GACe,oBAAlBA,IACIta,GAAOiP,GAAYW,GAAWX,GAAY1yC,GAAS,GAChE,CEp9CA,IAAMkgD,GAAyB9K,GAAqB,CAChDC,qBAAsB,SAACh4C,EAAK48B,GAAM,OAAK7hB,GAAY/a,EAAK,SAAU48B,EAAO,EACzEsb,cAAe,iBAAO,CAClB/vC,EAAG/I,SAAS0jD,gBAAgBC,YAAc3jD,SAAS4jD,KAAKD,WACxD36C,EAAGhJ,SAAS0jD,gBAAgBG,WAAa7jD,SAAS4jD,KAAKC,UAC1D,EACD9K,kBAAmB,kBAAM,CAAI,ICN3B3L,GAAqB,CACvBznC,aAASrD,GAEPwhD,GAAqBnL,GAAqB,CAC5CG,cAAe,SAACjyC,GAAQ,MAAM,CAC1BkC,EAAGlC,EAAS88C,WACZ36C,EAAGnC,EAASg9C,UACf,EACDhL,cAAe,WACX,IAAKzL,GAAmBznC,QAAS,CAC7B,IAAMo+C,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAaj9C,MAAMd,QACnB+9C,EAAarR,WAAW,CAAE+K,cAAc,IACxCrQ,GAAmBznC,QAAUo+C,CACjC,CACA,OAAO3W,GAAmBznC,OAC9B,EACAqzC,eAAgB,SAACnyC,EAAUF,GACvBE,EAASoI,MAAMvF,eAAsBpH,IAAVqE,EAAsBA,EAAQ,MAC7D,EACAoyC,kBAAmB,SAAClyC,GAAQ,OAAK7E,QAAuD,UAA/CgE,OAAOg+C,iBAAiBn9C,GAAUo9C,SAAqB,IClB9FhhD,GAAO,CACTI,IAAK,CACDsa,QAAS2yB,IAEbrtC,KAAM,CACF0a,QAASsyB,GACTgJ,eAAgB6K,GAChBh/C,cAAAA,KCCFo/C,GAAwB,uDAC9B,SAASC,GAAiBx+C,GACtB,IAAMuiB,EAAQg8B,GAAsBE,KAAKz+C,GACzC,IAAKuiB,EACD,MAAO,CAAC,GACZ,IAAAm8B,GAAAp/B,EAAAA,GAAAA,GAA4BiD,EAAK,GACjC,MAAO,CADOm8B,EAAA,GAAUA,EAAA,GAE5B,CAEA,SAASC,GAAiB3+C,EAASsP,GAAoB,IAAXyiC,EAAKlwC,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAChD6c,GAAUqzB,GAFG,EAEgB,yDAAFj2C,OAA2DkE,EAAO,yDAC7F,IAAA4+C,EAA0BJ,GAAiBx+C,GAAQ6+C,GAAAv/B,EAAAA,GAAAA,GAAAs/B,EAAA,GAA5Cl7C,EAAKm7C,EAAA,GAAEC,EAAQD,EAAA,GAEtB,GAAKn7C,EAAL,CAGA,IAAMsO,EAAW3R,OAAOg+C,iBAAiB/uC,GAASyvC,iBAAiBr7C,GACnE,GAAIsO,EAAU,CACV,IAAMgtC,EAAUhtC,EAAS3H,OACzB,OAAOssB,GAAkBqoB,GAAW16C,WAAW06C,GAAWA,CAC9D,CACK,OAAIp7C,EAAmBk7C,GAEjBH,GAAiBG,EAAUxvC,EAASyiC,EAAQ,GAG5C+M,CAZD,CAcd,CCjCA,IAAMG,GAAiB,IAAIn8C,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEEo8C,GAAkB,SAACnhD,GAAG,OAAKkhD,GAAe78C,IAAIrE,EAAI,EAIlDohD,GAAgB,SAAC5jD,GAAC,OAAKA,IAAM6I,GAAU7I,IAAM+J,EAAE,EAC/C85C,GAAmB,SAACC,EAAQC,GAAG,OAAKh7C,WAAW+6C,EAAOl6C,MAAM,MAAMm6C,GAAK,EACvEC,GAAyB,SAACC,EAAMC,GAAI,OAAK,SAACC,EAAKnhD,GAAoB,IAAhBwF,EAASxF,EAATwF,UACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,IAAM47C,EAAW57C,EAAUwe,MAAM,sBACjC,GAAIo9B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAGrC,IAAMJ,EAASt7C,EAAUwe,MAAM,oBAC/B,OAAI88B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAGnB,CAAC,EACKI,GAAgB,IAAI98C,IAAI,CAAC,IAAK,IAAK,MACnC+8C,GAAgCj9C,EAAmB0xB,QAAO,SAACv2B,GAAG,OAAM6hD,GAAcx9C,IAAIrE,EAAI,IAChG,SAAS+hD,GAAgCtgD,GACrC,IAAMugD,EAAoB,GAW1B,OAVAF,GAA8B9tC,SAAQ,SAAChU,GACnC,IAAMiD,EAAQxB,EAAc+5B,SAASx7B,QACvBpB,IAAVqE,IACA++C,EAAkBjtC,KAAK,CAAC/U,EAAKiD,EAAMkB,QACnClB,EAAMqB,IAAItE,EAAIiF,WAAW,SAAW,EAAI,GAEhD,IAEI+8C,EAAkBj+C,QAClBtC,EAAce,SACXw/C,CACX,CACA,IAAMC,GAAmB,CAErBz5C,MAAO,SAAAjF,EAAAo6B,GAAA,IAAGt4B,EAAC9B,EAAD8B,EAAC68C,EAAAvkB,EAAMt0B,YAAAA,OAAW,IAAA64C,EAAG,IAAGA,EAAAC,EAAAxkB,EAAEx0B,aAAAA,OAAY,IAAAg5C,EAAG,IAAGA,EAAA,OAAO98C,EAAEc,IAAMd,EAAEa,IAAMK,WAAW8C,GAAe9C,WAAW4C,EAAa,EAC/HT,OAAQ,SAAA05C,EAAAC,GAAA,IAAG/8C,EAAC88C,EAAD98C,EAACg9C,EAAAD,EAAMn5C,WAAAA,OAAU,IAAAo5C,EAAG,IAAGA,EAAAC,EAAAF,EAAEj5C,cAAAA,OAAa,IAAAm5C,EAAG,IAAGA,EAAA,OAAOj9C,EAAEa,IAAMb,EAAEY,IAAMK,WAAW2C,GAAc3C,WAAW6C,EAAc,EAChIP,IAAK,SAAC84C,EAAKa,GAAA,IAAI35C,EAAG25C,EAAH35C,IAAG,OAAOtC,WAAWsC,EAAI,EACxCG,KAAM,SAAC24C,EAAKc,GAAA,IAAIz5C,EAAIy5C,EAAJz5C,KAAI,OAAOzC,WAAWyC,EAAK,EAC3CD,OAAQ,SAAA25C,EAAAC,GAAA,IAAGr9C,EAACo9C,EAADp9C,EAAOuD,EAAG85C,EAAH95C,IAAG,OAAOtC,WAAWsC,IAAQvD,EAAEa,IAAMb,EAAEY,IAAI,EAC7D4C,MAAO,SAAA85C,EAAAC,GAAA,IAAGx9C,EAACu9C,EAADv9C,EAAO2D,EAAI65C,EAAJ75C,KAAI,OAAOzC,WAAWyC,IAAS3D,EAAEc,IAAMd,EAAEa,IAAI,EAE9Db,EAAGm8C,GAAuB,EAAG,IAC7Bl8C,EAAGk8C,GAAuB,EAAG,KAGjCS,GAAiB33C,WAAa23C,GAAiB58C,EAC/C48C,GAAiB13C,WAAa03C,GAAiB38C,EAC/C,IAAMw9C,GAA2B,SAACj2C,EAAQpL,EAAeshD,GACrD,IAAMC,EAAavhD,EAAc2kC,qBAC3B70B,EAAU9P,EAAcQ,QACxBghD,EAAuB3C,iBAAiB/uC,GACtC8qC,EAAY4G,EAAZ5G,QACFntC,EAAS,CAAC,EAGA,SAAZmtC,GACA56C,EAAc08C,eAAe,UAAWtxC,EAAOwvC,SAAW,SAK9D0G,EAAY/uC,SAAQ,SAAChU,GACjBkP,EAAOlP,GAAOiiD,GAAiBjiD,GAAKgjD,EAAYC,EACpD,IAEAxhD,EAAce,SACd,IAAM0gD,EAAazhD,EAAc2kC,qBAQjC,OAPA2c,EAAY/uC,SAAQ,SAAChU,GAGjB,IAAMiD,EAAQxB,EAAc+5B,SAASx7B,GACrCiD,GAASA,EAAMkgD,KAAKj0C,EAAOlP,IAC3B6M,EAAO7M,GAAOiiD,GAAiBjiD,GAAKkjD,EAAYD,EACpD,IACOp2C,CACX,EAyHA,SAASu2C,GAAe3hD,EAAeoL,EAAQqC,EAAQgF,GACnD,OA3MqB,SAACrH,GACtB,OAAO1P,OAAO0R,KAAKhC,GAAQ1O,KAAKgjD,GACpC,CAyMWkC,CAAiBx2C,GAzHa,SAACpL,EAAeoL,GAA4C,IAApCqC,EAAMpL,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGoQ,EAAapQ,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3F+I,GAAM9L,EAAAA,EAAAA,GAAA,GAAQ8L,GACdqH,GAAanT,EAAAA,EAAAA,GAAA,GAAQmT,GACrB,IAAMovC,EAAuBnmD,OAAO0R,KAAKhC,GAAQ0pB,OAAO4qB,IAGpDoC,EAAyB,GACzBC,GAAsC,EACpCC,EAAuB,GAkF7B,GAjFAH,EAAqBtvC,SAAQ,SAAChU,GAC1B,IAAMiD,EAAQxB,EAAc+5B,SAASx7B,GACrC,GAAKyB,EAAc85B,SAASv7B,GAA5B,CAEA,IAGI0jD,EAHA99B,EAAO1W,EAAOlP,GACd2jD,EAAWvoB,GAAuBxV,GAChCC,EAAKhZ,EAAO7M,GAMlB,GAAI4S,GAAkBiT,GAAK,CACvB,IAAM+9B,EAAe/9B,EAAG9hB,OAClB8/C,EAAsB,OAAVh+B,EAAG,GAAc,EAAI,EACvCD,EAAOC,EAAGg+B,GACVF,EAAWvoB,GAAuBxV,GAClC,IAAK,IAAIvZ,EAAIw3C,EAAWx3C,EAAIu3C,GAKV,OAAV/9B,EAAGxZ,GAL+BA,IAOjCq3C,EAMD/iC,GAAUya,GAAuBvV,EAAGxZ,MAAQq3C,EAAQ,2CALpDA,EAAStoB,GAAuBvV,EAAGxZ,IACnCsU,GAAU+iC,IAAWC,GAChBvC,GAAcuC,IAAavC,GAAcsC,GAAU,gEAMpE,MAEIA,EAAStoB,GAAuBvV,GAEpC,GAAI89B,IAAaD,EAGb,GAAItC,GAAcuC,IAAavC,GAAcsC,GAAS,CAClD,IAAMzhD,EAAUgB,EAAMkB,MACC,kBAAZlC,GACPgB,EAAMqB,IAAIiC,WAAWtE,IAEP,kBAAP4jB,EACPhZ,EAAO7M,GAAOuG,WAAWsf,GAEpBpoB,MAAMC,QAAQmoB,IAAO69B,IAAWn8C,KACrCsF,EAAO7M,GAAO6lB,EAAGzD,IAAI7b,YAE7B,MACuB,OAAbo9C,QAAkC,IAAbA,OAAsB,EAASA,EAAS39C,aACvD,OAAX09C,QAA8B,IAAXA,OAAoB,EAASA,EAAO19C,aAC9C,IAAT4f,GAAqB,IAAPC,GAGF,IAATD,EACA3iB,EAAMqB,IAAIo/C,EAAO19C,UAAU4f,IAG3B/Y,EAAO7M,GAAO2jD,EAAS39C,UAAU6f,IAMhC29B,IACDD,EACIxB,GAAgCtgD,GACpC+hD,GAAsC,GAE1CC,EAAqB1uC,KAAK/U,GAC1BkU,EAAclU,QACapB,IAAvBsV,EAAclU,GACRkU,EAAclU,GACd6M,EAAO7M,GACjBiD,EAAMkgD,KAAKt9B,GA1ET,CA6Ed,IACI49B,EAAqB1/C,OAAQ,CAC7B,IAAM+/C,EAAUL,EAAqB/+C,QAAQ,WAAa,EACpDpC,OAAOyhD,YACP,KACAC,EAAkBlB,GAAyBj2C,EAAQpL,EAAegiD,GAaxE,OAXIF,EAAuBx/C,QACvBw/C,EAAuBvvC,SAAQ,SAAAiwC,GAAkB,IAAAC,GAAA3iC,EAAAA,GAAAA,GAAA0iC,EAAA,GAAhBjkD,EAAGkkD,EAAA,GAAEjhD,EAAKihD,EAAA,GACvCziD,EAAc+5B,SAASx7B,GAAKsE,IAAIrB,EACpC,IAGJxB,EAAce,SAEVnG,GAAyB,OAAZynD,GACbxhD,OAAO6hD,SAAS,CAAEt7C,IAAKi7C,IAEpB,CAAEj3C,OAAQm3C,EAAiB9vC,cAAAA,EACtC,CAEI,MAAO,CAAErH,OAAAA,EAAQqH,cAAAA,EAEzB,CAUUkwC,CAAiC3iD,EAAeoL,EAAQqC,EAAQgF,GAChE,CAAErH,OAAAA,EAAQqH,cAAAA,EACpB,CC5NA,IAAMmwC,GAAkB,SAAC5iD,EAAeoL,EAAQqC,EAAQgF,GACpD,IAAMD,EFuCV,SAA6BxS,EAAajB,EAAiB0T,GAAe,IAAzBrH,EAAM1P,OAAA6P,OAAA,GAAAxM,GAC7C+Q,EAAU9P,EAAcQ,QAC9B,KAAMsP,aAAmB4iB,SACrB,MAAO,CAAEtnB,OAAAA,EAAQqH,cAAAA,GAiBrB,IAAK,IAAMlU,KAdPkU,IACAA,GAAanT,EAAAA,EAAAA,GAAA,GAAQmT,IAGzBzS,EAAcgN,OAAOuF,SAAQ,SAAC/Q,GAC1B,IAAMhB,EAAUgB,EAAMkB,MACtB,GAAK0B,EAAmB5D,GAAxB,CAEA,IAAMgS,EAAW2sC,GAAiB3+C,EAASsP,GACvC0C,GACAhR,EAAMqB,IAAI2P,EAHJ,CAId,IAGkBpH,EAAQ,CACtB,IAAM5K,EAAU4K,EAAO7M,GACvB,GAAK6F,EAAmB5D,GAAxB,CAEA,IAAMgS,EAAW2sC,GAAiB3+C,EAASsP,GACtC0C,IAGLpH,EAAO7M,GAAOiU,EACTC,IACDA,EAAgB,CAAC,QAIMtV,IAAvBsV,EAAclU,KACdkU,EAAclU,GAAOiC,GAZb,CAchB,CACA,MAAO,CAAE4K,OAAAA,EAAQqH,cAAAA,EACrB,CE9EqBowC,CAAoB7iD,EAAeoL,EAAQqH,GAG5D,OAAOkvC,GAAe3hD,EAFtBoL,EAASoH,EAASpH,OAE2BqC,EAD7CgF,EAAgBD,EAASC,cAE7B,ECXMqwC,GAAuB,CAAEtiD,QAAS,MAClCuiD,GAA2B,CAAEviD,SAAS,GCF5C,IAAMwiD,GAAqB,IAAI/mC,Q,kCCoBzBgnC,GAAevnD,OAAO0R,KAAK/O,GAC3B6kD,GAAcD,GAAa3gD,OAC3B6gD,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkB/mD,EAAaiG,OAK/B+gD,GAAa,WACf,SAAAA,EAAAtkD,GAAiG,IAAA0a,EAAA,KAAnFxZ,EAAMlB,EAANkB,OAAQzD,EAAKuC,EAALvC,MAAO2D,EAAepB,EAAfoB,gBAAiBC,EAAmBrB,EAAnBqB,oBAAqBL,EAAWhB,EAAXgB,YAAgB6J,EAAOvH,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAAC0Q,EAAAA,GAAAA,GAAA,KAAAswC,GAK3FrwC,KAAKxS,QAAU,KAIfwS,KAAKtD,SAAW,IAAIpM,IAIpB0P,KAAKpW,eAAgB,EACrBoW,KAAKzW,uBAAwB,EAQ7ByW,KAAKsoB,mBAAqB,KAM1BtoB,KAAKhG,OAAS,IAAIvK,IAIlBuQ,KAAK3T,SAAW,CAAC,EAKjB2T,KAAKswC,mBAAqB,IAAI7gD,IAM9BuQ,KAAKuwC,iBAAmB,CAAC,EAIzBvwC,KAAKilB,OAAS,CAAC,EAMfjlB,KAAKwwC,uBAAyB,CAAC,EAC/BxwC,KAAKywC,aAAe,kBAAMhqC,EAAK4e,OAAO,SAAU5e,EAAK9P,aAAa,EAClEqJ,KAAKjS,OAAS,WACL0Y,EAAKjZ,UAEViZ,EAAKiqC,eACLjqC,EAAKkqC,eAAelqC,EAAKjZ,QAASiZ,EAAKpJ,YAAaoJ,EAAKjd,MAAMsN,MAAO2P,EAAKzJ,YAC/E,EACAgD,KAAKg+B,eAAiB,kBAAMh7B,GAAAA,OAAayD,EAAK1Y,QAAQ,GAAO,EAAK,EAClE,IAAQ4I,EAA8B5J,EAA9B4J,aAAc0G,EAAgBtQ,EAAhBsQ,YACtB2C,KAAKrJ,aAAeA,EACpBqJ,KAAK4wC,YAAUtkD,EAAAA,EAAAA,GAAA,GAAQqK,GACvBqJ,KAAK6wC,cAAgBrnD,EAAMU,SAAOoC,EAAAA,EAAAA,GAAA,GAAQqK,GAAiB,CAAC,EAC5DqJ,KAAK3C,YAAcA,EACnB2C,KAAK/S,OAASA,EACd+S,KAAKxW,MAAQA,EACbwW,KAAK7S,gBAAkBA,EACvB6S,KAAKu/B,MAAQtyC,EAASA,EAAOsyC,MAAQ,EAAI,EACzCv/B,KAAK5S,oBAAsBA,EAC3B4S,KAAKpJ,QAAUA,EACfoJ,KAAKzW,sBAAwBA,EAAsBC,GACnDwW,KAAKpW,cAAgBA,EAAcJ,GAC/BwW,KAAKpW,gBACLoW,KAAK4oB,gBAAkB,IAAIt4B,KAE/B0P,KAAK+qB,uBAAyBlhC,QAAQoD,GAAUA,EAAOO,SAWvD,IAAAsjD,EAA+C9wC,KAAKxC,4BAA4BhU,EAAO,CAAC,GAAhFu+B,EAAU+oB,EAAV/oB,WAAegpB,EAAmB92C,GAAA62C,EAAAt1C,IAC1C,IAAK,IAAMjQ,KAAOwlD,EAAqB,CACnC,IAAMviD,EAAQuiD,EAAoBxlD,QACRpB,IAAtBwM,EAAapL,IAAsBkF,EAAcjC,KACjDA,EAAMqB,IAAI8G,EAAapL,IAAM,GACzB24B,GAAwB6D,IACxBA,EAAW1nB,IAAI9U,GAG3B,CACJ,CA+WC,OA9WD4U,EAAAA,GAAAA,GAAAkwC,EAAA,EAAA9kD,IAAA,8BAAAiD,MAOA,SAA4BwiD,EAAQC,GAChC,MAAO,CAAC,CACZ,GAAC,CAAA1lD,IAAA,QAAAiD,MACD,SAAME,GAAU,IAAAkY,EAAA,KACZ5G,KAAKxS,QAAUkB,EACfshD,GAAmBngD,IAAInB,EAAUsR,MAC7BA,KAAKhD,aAAegD,KAAKhD,WAAWtO,UACpCsR,KAAKhD,WAAWrO,MAAMD,GAEtBsR,KAAK/S,QAAU+S,KAAKpW,gBAAkBoW,KAAKzW,wBAC3CyW,KAAKkxC,sBAAwBlxC,KAAK/S,OAAOkkD,gBAAgBnxC,OAE7DA,KAAKhG,OAAOuF,SAAQ,SAAC/Q,EAAOjD,GAAG,OAAKqb,EAAKwqC,kBAAkB7lD,EAAKiD,EAAM,IACjEuhD,GAAyBviD,SC1JtC,WAEI,GADAuiD,GAAyBviD,SAAU,EAC9B5F,EAEL,GAAIiG,OAAOwjD,WAAY,CACnB,IAAMC,EAAmBzjD,OAAOwjD,WAAW,4BACrCE,EAA8B,WAAH,OAAUzB,GAAqBtiD,QAAU8jD,EAAiB3qC,OAAO,EAClG2qC,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIzB,GAAqBtiD,SAAU,CAEvC,CD8IYikD,GAEJzxC,KAAKsoB,mBAC4B,UAA7BtoB,KAAK5S,sBAE8B,WAA7B4S,KAAK5S,qBAED0iD,GAAqBtiD,SAI/BwS,KAAK/S,QACL+S,KAAK/S,OAAOyP,SAAS2D,IAAIL,MAC7BA,KAAKrS,OAAOqS,KAAKxW,MAAOwW,KAAK7S,gBACjC,GAAC,CAAA5B,IAAA,UAAAiD,MACD,WAQI,IAAK,IAAMjD,KAPXykD,GAAAA,OAA0BhwC,KAAKxS,SAC/BwS,KAAKhD,YAAcgD,KAAKhD,WAAWpO,UACnCqU,GAAYjD,KAAKywC,cACjBxtC,GAAYjD,KAAKjS,QACjBiS,KAAKswC,mBAAmB/wC,SAAQ,SAAC4C,GAAM,OAAKA,GAAQ,IACpDnC,KAAKkxC,uBAAyBlxC,KAAKkxC,wBACnClxC,KAAK/S,QAAU+S,KAAK/S,OAAOyP,SAAS+D,OAAOT,MACzBA,KAAKilB,OACnBjlB,KAAKilB,OAAO15B,GAAKmV,QAErB,IAAK,IAAMnV,KAAOyU,KAAK3T,SACnB2T,KAAK3T,SAASd,GAAKqD,UAEvBoR,KAAKxS,QAAU,IACnB,GAAC,CAAAjC,IAAA,oBAAAiD,MACD,SAAkBjD,EAAKiD,GAAO,IAAA03B,EAAA,KACpBwrB,EAAmBrhD,EAAeT,IAAIrE,GACtComD,EAAiBnjD,EAAMm3B,GAAG,UAAU,SAACisB,GACvC1rB,EAAKvvB,aAAapL,GAAOqmD,EACzB1rB,EAAK18B,MAAM0zB,UACPla,GAAAA,OAAakjB,EAAKuqB,cAAc,GAAO,GACvCiB,GAAoBxrB,EAAKlpB,aACzBkpB,EAAKlpB,WAAWmkC,kBAAmB,EAE3C,IACM0Q,EAAwBrjD,EAAMm3B,GAAG,gBAAiB3lB,KAAKg+B,gBAC7Dh+B,KAAKswC,mBAAmBzgD,IAAItE,GAAK,WAC7BomD,IACAE,GACJ,GACJ,GAAC,CAAAtmD,IAAA,mBAAAiD,MACD,SAAiBsjD,GAIb,OAAK9xC,KAAKxS,SACLwS,KAAK+xC,0BACN/xC,KAAK1O,OAASwgD,EAAMxgD,KAGjB0O,KAAK+xC,yBAAyB/xC,KAAKxS,QAASskD,EAAMtkD,SAF9C,CAGf,GAAC,CAAAjC,IAAA,eAAAiD,MACD,SAAAM,EAA6CT,EAAUrC,EAAmBoC,GAetE,IAfgG,IAC5F4jD,EACArlD,EAF4FqpC,EAAA,KAAxEic,GAALnjD,EAAR4N,SAA0BzC,GAAAnL,EAAAojD,KAe5Bt6C,EAAI,EAAGA,EAAIs4C,GAAat4C,IAAK,CAClC,IAAMjO,EAAOsmD,GAAar4C,GAC1Bu6C,EAA2G9mD,EAAmB1B,GAAtH6B,EAAS2mD,EAAT3mD,UAAoB4mD,EAAkBD,EAA3B3sC,QAA6Bs7B,EAAcqR,EAAdrR,eAA+BuR,EAAsBF,EAArCxlD,cAC5Dm0C,IACAkR,EAA4BlR,GAC5Bt1C,EAAUymD,MACLjyC,KAAK3T,SAAS1C,IAASyoD,IACxBpyC,KAAK3T,SAAS1C,GAAQ,IAAIyoD,EAAmBpyC,OAE7CqyC,IACA1lD,EAAgB0lD,GAG5B,CACA,IAAKryC,KAAKhD,YAAcg1C,EAA2B,CAC/ChyC,KAAKhD,WAAa,IAAIg1C,EAA0BhyC,KAAKrJ,aAAcqJ,KAAK/S,QAAU+S,KAAK/S,OAAO+P,YAC9F,IAAQnQ,EAAuEolD,EAAvEplD,SAAUzB,EAA6D6mD,EAA7D7mD,OAAQN,EAAqDmnD,EAArDnnD,KAAMupC,EAA+C4d,EAA/C5d,gBAAiBiR,EAA8B2M,EAA9B3M,aAAczB,EAAgBoO,EAAhBpO,WAC/D7jC,KAAKhD,WAAWu9B,WAAW,CACvB1tC,SAAAA,EACAzB,OAAAA,EACA65C,oBAAqBp7C,QAAQiB,IACxBupC,GAAmB7rC,EAAY6rC,GACpCrnC,cAAegT,KACfg+B,eAAgB,kBAAMhI,EAAKgI,gBAAgB,EAQ3CmL,cAAiC,kBAAX/9C,EAAsBA,EAAS,OACrDk+C,uBAAwBl7C,EACxBk3C,aAAAA,EACAzB,WAAAA,GAER,CACA,OAAOl3C,CACX,GAAC,CAAApB,IAAA,iBAAAiD,MACD,WACI,IAAK,IAAMjD,KAAOyU,KAAK3T,SAAU,CAC7B,IAAMimD,EAAUtyC,KAAK3T,SAASd,GAC1B+mD,EAAQ5sC,UACR4sC,EAAQ3kD,UAGR2kD,EAAQ3jD,QACR2jD,EAAQ5sC,WAAY,EAE5B,CACJ,GAAC,CAAAna,IAAA,eAAAiD,MACD,WACIwR,KAAKuyC,MAAMvyC,KAAK3C,YAAa2C,KAAKrJ,aAAcqJ,KAAKpJ,QAASoJ,KAAKxW,MACvE,GACA,CAAA+B,IAAA,qBAAAiD,MAKA,WACI,OAAOwR,KAAKxS,QACNwS,KAAKwyC,2BAA2BxyC,KAAKxS,QAASwS,KAAKxW,O7BzRxC,CACrBoH,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,G6B4RrC,GAAC,CAAAnG,IAAA,iBAAAiD,MACD,SAAejD,GACX,OAAOyU,KAAKrJ,aAAapL,EAC7B,GAAC,CAAAA,IAAA,iBAAAiD,MACD,SAAejD,EAAKiD,GAChBwR,KAAKrJ,aAAapL,GAAOiD,CAC7B,GACA,CAAAjD,IAAA,uBAAAiD,MAOA,SAAqB4J,GAA0B,IAAlBq6C,IAASpjD,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,KAAAA,UAAA,GAClC,OAAO2Q,KAAK0yC,iCAAiCt6C,EAAQ4H,KAAKxW,MAAOipD,EACrE,GACA,CAAAlnD,IAAA,SAAAiD,MAIA,SAAOhF,EAAO2D,IACN3D,EAAMqN,mBAAqBmJ,KAAKxW,MAAMqN,oBACtCmJ,KAAKg+B,iBAETh+B,KAAKvC,UAAYuC,KAAKxW,MACtBwW,KAAKxW,MAAQA,EACbwW,KAAKwsB,oBAAsBxsB,KAAK7S,gBAChC6S,KAAK7S,gBAAkBA,EAIvB,IAAK,IAAIyK,EAAI,EAAGA,EAAIu4C,GAAkB7gD,OAAQsI,IAAK,CAC/C,IAAMrM,EAAM4kD,GAAkBv4C,GAC1BoI,KAAKwwC,uBAAuBjlD,KAC5ByU,KAAKwwC,uBAAuBjlD,YACrByU,KAAKwwC,uBAAuBjlD,IAEvC,IAAMonD,EAAWnpD,EAAM,KAAO+B,GAC1BonD,IACA3yC,KAAKwwC,uBAAuBjlD,GAAOyU,KAAK2lB,GAAGp6B,EAAKonD,GAExD,CACA3yC,KAAKuwC,iBE5Ub,SAAqCzzC,EAAS6O,EAAMC,GAChD,IAAQmc,EAAepc,EAAfoc,WACR,IAAK,IAAMx8B,KAAOogB,EAAM,CACpB,IAAMinC,EAAYjnC,EAAKpgB,GACjBsnD,EAAYjnC,EAAKrgB,GACvB,GAAIkF,EAAcmiD,GAKd91C,EAAQkqB,SAASz7B,EAAKqnD,GAClB1uB,GAAwB6D,IACxBA,EAAW1nB,IAAI9U,QAUlB,GAAIkF,EAAcoiD,GAKnB/1C,EAAQkqB,SAASz7B,EAAKi7B,GAAYosB,EAAW,CAAEryB,MAAOzjB,KAClDonB,GAAwB6D,IACxBA,EAAW5lB,OAAO5W,QAGrB,GAAIsnD,IAAcD,EAMnB,GAAI91C,EAAQgqB,SAASv7B,GAAM,CACvB,IAAMunD,EAAgBh2C,EAAQiqB,SAASx7B,IAEtCunD,EAAcrtB,aAAeqtB,EAAcjjD,IAAI+iD,EACpD,KACK,CACD,IAAMhB,EAAc90C,EAAQi2C,eAAexnD,GAC3CuR,EAAQkqB,SAASz7B,EAAKi7B,QAA4Br8B,IAAhBynD,EAA4BA,EAAcgB,EAAW,CAAEryB,MAAOzjB,IACpG,CAER,CAEA,IAAK,IAAMvR,KAAOqgB,OACIzhB,IAAdwhB,EAAKpgB,IACLuR,EAAQk2C,YAAYznD,GAE5B,OAAOogB,CACX,CFqRgCsnC,CAA4BjzC,KAAMA,KAAKxC,4BAA4BhU,EAAOwW,KAAKvC,WAAYuC,KAAKuwC,kBACpHvwC,KAAKkzC,wBACLlzC,KAAKkzC,wBAEb,GAAC,CAAA3nD,IAAA,WAAAiD,MACD,WACI,OAAOwR,KAAKxW,KAChB,GACA,CAAA+B,IAAA,aAAAiD,MAGA,SAAW7E,GACP,OAAOqW,KAAKxW,MAAMM,SAAWkW,KAAKxW,MAAMM,SAASH,QAAQQ,CAC7D,GACA,CAAAoB,IAAA,uBAAAiD,MAGA,WACI,OAAOwR,KAAKxW,MAAMkW,UACtB,GAAC,CAAAnU,IAAA,wBAAAiD,MACD,WACI,OAAOwR,KAAKxW,MAAMlC,kBACtB,GAAC,CAAAiE,IAAA,wBAAAiD,MACD,WACI,OAAOwR,KAAKpW,cACNoW,KACAA,KAAK/S,OACD+S,KAAK/S,OAAOkmD,6BACZhpD,CACd,GAAC,CAAAoB,IAAA,oBAAAiD,MACD,WAAyC,IAAvB4kD,EAAa/jD,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,IAAAA,UAAA,GAC3B,GAAI+jD,EACA,OAAOpzC,KAAK/S,OAAS+S,KAAK/S,OAAOs9B,yBAAsBpgC,EAE3D,IAAK6V,KAAKzW,sBAAuB,CAC7B,IAAMU,EAAU+V,KAAK/S,QACf+S,KAAK/S,OAAOs9B,qBACZ,CAAC,EAIP,YAH2BpgC,IAAvB6V,KAAKxW,MAAMU,UACXD,EAAQC,QAAU8V,KAAKxW,MAAMU,SAE1BD,CACX,CAEA,IADA,IAAMA,EAAU,CAAC,EACR2N,EAAI,EAAGA,EAAIw4C,GAAiBx4C,IAAK,CACtC,IAAMjO,EAAON,EAAauO,GACpBnN,EAAOuV,KAAKxW,MAAMG,IACpBb,EAAe2B,KAAkB,IAATA,KACxBR,EAAQN,GAAQc,EAExB,CACA,OAAOR,CACX,GACA,CAAAsB,IAAA,kBAAAiD,MAGA,SAAgBwY,GACZ,IAAMqsC,EAAqBrzC,KAAKmzC,wBAChC,GAAIE,EAGA,OAFAA,EAAmBzqB,iBACfyqB,EAAmBzqB,gBAAgBvoB,IAAI2G,GACpC,kBAAMqsC,EAAmBzqB,gBAAgBnoB,OAAOuG,EAAM,CAErE,GACA,CAAAzb,IAAA,WAAAiD,MAGA,SAASjD,EAAKiD,GAENA,IAAUwR,KAAKhG,OAAOtK,IAAInE,KAC1ByU,KAAKgzC,YAAYznD,GACjByU,KAAKoxC,kBAAkB7lD,EAAKiD,IAEhCwR,KAAKhG,OAAOnK,IAAItE,EAAKiD,GACrBwR,KAAKrJ,aAAapL,GAAOiD,EAAMkB,KACnC,GACA,CAAAnE,IAAA,cAAAiD,MAGA,SAAYjD,GACRyU,KAAKhG,OAAOyG,OAAOlV,GACnB,IAAMq6B,EAAc5lB,KAAKswC,mBAAmB5gD,IAAInE,GAC5Cq6B,IACAA,IACA5lB,KAAKswC,mBAAmB7vC,OAAOlV,WAE5ByU,KAAKrJ,aAAapL,GACzByU,KAAKszC,2BAA2B/nD,EAAKyU,KAAK3C,YAC9C,GACA,CAAA9R,IAAA,WAAAiD,MAGA,SAASjD,GACL,OAAOyU,KAAKhG,OAAOpK,IAAIrE,EAC3B,GAAC,CAAAA,IAAA,WAAAiD,MACD,SAASjD,EAAKq2B,GACV,GAAI5hB,KAAKxW,MAAMwQ,QAAUgG,KAAKxW,MAAMwQ,OAAOzO,GACvC,OAAOyU,KAAKxW,MAAMwQ,OAAOzO,GAE7B,IAAIiD,EAAQwR,KAAKhG,OAAOtK,IAAInE,GAK5B,YAJcpB,IAAVqE,QAAwCrE,IAAjBy3B,IACvBpzB,EAAQg4B,GAAY5E,EAAc,CAAErB,MAAOvgB,OAC3CA,KAAKgnB,SAASz7B,EAAKiD,IAEhBA,CACX,GACA,CAAAjD,IAAA,YAAAiD,MAKA,SAAUjD,GACN,IAAIoO,EACJ,YAAkCxP,IAA3B6V,KAAKrJ,aAAapL,IAAuByU,KAAKxS,QAES,QAAvDmM,EAAKqG,KAAKuzC,uBAAuBvzC,KAAKxW,MAAO+B,UAAyB,IAAPoO,EAAgBA,EAAKqG,KAAKwzC,sBAAsBxzC,KAAKxS,QAASjC,EAAKyU,KAAKpJ,SADxIoJ,KAAKrJ,aAAapL,EAE5B,GACA,CAAAA,IAAA,gBAAAiD,MAIA,SAAcjD,EAAKiD,GACfwR,KAAK4wC,WAAWrlD,GAAOiD,CAC3B,GACA,CAAAjD,IAAA,gBAAAiD,MAIA,SAAcjD,GACV,IAAIoO,EACIzP,EAAY8V,KAAKxW,MAAjBU,QACFupD,EAAsC,kBAAZvpD,GAA2C,kBAAZA,EACD,QAAvDyP,EAAKoE,GAAwBiC,KAAKxW,MAAOU,UAA6B,IAAPyP,OAAgB,EAASA,EAAGpO,QAC5FpB,EAIN,GAAID,QAAgCC,IAArBspD,EACX,OAAOA,EAMX,IAAMr7C,EAAS4H,KAAKuzC,uBAAuBvzC,KAAKxW,MAAO+B,GACvD,YAAepB,IAAXiO,GAAyB3H,EAAc2H,QAMRjO,IAA5B6V,KAAK6wC,cAActlD,SACDpB,IAArBspD,OACEtpD,EACA6V,KAAK4wC,WAAWrlD,GARX6M,CASf,GAAC,CAAA7M,IAAA,KAAAiD,MACD,SAAGiV,EAAW1B,GAIV,OAHK/B,KAAKilB,OAAOxhB,KACbzD,KAAKilB,OAAOxhB,GAAa,IAAI8gB,IAE1BvkB,KAAKilB,OAAOxhB,GAAWpD,IAAI0B,EACtC,GAAC,CAAAxW,IAAA,SAAAiD,MACD,SAAOiV,GACH,GAAIzD,KAAKilB,OAAOxhB,GAAY,SAAAiwC,EAAA9uC,EAAAvV,UAAAC,OADXqzC,EAAI,IAAA35C,MAAA4b,EAAA,EAAAA,EAAA,KAAA+uC,EAAA,EAAAA,EAAA/uC,EAAA+uC,IAAJhR,EAAIgR,EAAA,GAAAtkD,UAAAskD,IAEjBD,EAAA1zC,KAAKilB,OAAOxhB,IAAW4hB,OAAM9e,MAAAmtC,EAAI/Q,EACrC,CACJ,KAAC0N,CAAA,CAndc,G,kCGhCbuD,GAAgB,SAAAC,IAAAztC,EAAAA,GAAAA,GAAAwtC,EAAAC,GAAA,IAAAxtC,GAAAC,EAAAA,GAAAA,GAAAstC,GAAA,SAAAA,IAAA,OAAA7zC,EAAAA,GAAAA,GAAA,KAAA6zC,GAAAvtC,EAAAE,MAAA,KAAAlX,UAAA,CAwCjB,OAxCiB8Q,EAAAA,GAAAA,GAAAyzC,EAAA,EAAAroD,IAAA,2BAAAiD,MAClB,SAAyBiW,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEqvC,wBAAwBpvC,GAAS,GAAK,CACnD,GAAC,CAAAnZ,IAAA,yBAAAiD,MACD,SAAuBhF,EAAO+B,GAC1B,OAAO/B,EAAMsN,MAAQtN,EAAMsN,MAAMvL,QAAOpB,CAC5C,GAAC,CAAAoB,IAAA,6BAAAiD,MACD,SAA2BjD,EAAGQ,GAAmB,IAAfgL,EAAIhL,EAAJgL,KAAMD,EAAK/K,EAAL+K,aAC7BC,EAAKxL,UACLuL,EAAMvL,EACjB,GAAC,CAAAA,IAAA,mCAAAiD,MACD,SAAAM,EAAAo6B,EAAgGxjB,GAAW,IAAxEhG,EAAU5Q,EAAV4Q,WAAYD,EAAa3Q,EAAb2Q,cAAkBrH,EAAM6B,GAAAnL,EAAA0M,IAAM/C,EAAeywB,EAAfzwB,gBACrEgC,EnDqFZ,SAAmBrC,EAAQsH,EAAY1S,GACnC,IAAMyN,EAAS,CAAC,EAChB,IAAK,IAAMlP,KAAO6M,EAAQ,CACtB,IAAM27C,EAAmB3sB,GAAwB77B,EAAKmU,GACtD,QAAyBvV,IAArB4pD,EACAt5C,EAAOlP,GAAOwoD,MAEb,CACD,IAAMvlD,EAAQxB,EAAc+5B,SAASx7B,GACjCiD,IACAiM,EAAOlP,GAAOiD,EAAMkB,MAE5B,CACJ,CACA,OAAO+K,CACX,CmDpGqBu5C,CAAU57C,EAAQsH,GAAc,CAAC,EAAGM,MAYjD,GARIvH,IACIgH,IACAA,EAAgBhH,EAAgBgH,IAChCrH,IACAA,EAASK,EAAgBL,IACzBqC,IACAA,EAAShC,EAAgBgC,KAE7BiL,EAAW,EnDoBvB,SAAiC1Y,EAAeoL,EAAQqC,GACpD,IAAId,EAAI+Z,ED1CW3qB,EC2CbkrD,EAAevrD,OAAO0R,KAAKhC,GAAQ0pB,QAAO,SAACv2B,GAAG,OAAMyB,EAAc85B,SAASv7B,EAAI,IAC/E2oD,EAAeD,EAAa3kD,OAClC,GAAK4kD,EAEL,IAAK,IAAIt8C,EAAI,EAAGA,EAAIs8C,EAAct8C,IAAK,CACnC,IAAMrM,EAAM0oD,EAAar8C,GACnBu8C,EAAc/7C,EAAO7M,GACvBiD,EAAQ,KAKRxF,MAAMC,QAAQkrD,KACd3lD,EAAQ2lD,EAAY,IAOV,OAAV3lD,IACAA,EAAoG,QAA3FklB,EAA4B,QAAtB/Z,EAAKc,EAAOlP,UAAyB,IAAPoO,EAAgBA,EAAK3M,EAAconD,UAAU7oD,UAAyB,IAAPmoB,EAAgBA,EAAKtb,EAAO7M,SAM9HpB,IAAVqE,GAAiC,OAAVA,IAEN,kBAAVA,IACN21B,GAAkB31B,IAAUo0B,GAAkBp0B,IAE/CA,EAAQsD,WAAWtD,ID3ERzF,EC6ESyF,GD7EHo4B,GAAW/U,KAAK4U,GAAc19B,KC6EjB0qB,GAAQvjB,KAAKikD,KAC3C3lD,EAAQolB,GAAkBroB,EAAK4oD,KAEnCnnD,EAAcg6B,SAASz7B,EAAKi7B,GAAYh4B,EAAO,CAAE+xB,MAAOvzB,UACpC7C,IAAhBsQ,EAAOlP,KACPkP,EAAOlP,GAAOiD,GAEJ,OAAVA,GACAxB,EAAcqnD,cAAc9oD,EAAKiD,GACzC,CACJ,CmDjEY8lD,CAAwBt0C,KAAM5H,EAAQqC,GACtC,IAAMoZ,EAAS+7B,GAAgB5vC,KAAM5H,EAAQqC,EAAQgF,GACrDA,EAAgBoU,EAAOpU,cACvBrH,EAASyb,EAAOzb,MACpB,CACA,OAAA9L,EAAAA,EAAAA,GAAA,CACIoT,WAAAA,EACAD,cAAAA,GACGrH,EAEX,KAACw7C,CAAA,CAxCiB,CAASvD,ICQ9B,IACKkE,GAAiB,SAAAC,IAAApuC,EAAAA,GAAAA,GAAAmuC,EAAAC,GAAA,IAAAnuC,GAAAC,EAAAA,GAAAA,GAAAiuC,GAAA,SAAAA,IAAA,OAAAx0C,EAAAA,GAAAA,GAAA,KAAAw0C,GAAAluC,EAAAE,MAAA,KAAAlX,UAAA,CAsClB,OAtCkB8Q,EAAAA,GAAAA,GAAAo0C,EAAA,EAAAhpD,IAAA,wBAAAiD,MACnB,SAAsBE,EAAUnD,GAC5B,GAAI8E,EAAeT,IAAIrE,GAAM,CACzB,IAAMkpD,EAAc/xB,GAAoBn3B,GACxC,OAAOkpD,GAAcA,EAAYxiD,SAAe,CACpD,CAEI,IAVc6K,EAUR43C,GAVQ53C,EAUyBpO,EATxCb,OAAOg+C,iBAAiB/uC,IAUjBtO,GAAS2C,EAAkB5F,GAC3BmpD,EAAcnI,iBAAiBhhD,GAC/BmpD,EAAcnpD,KAAS,EAC7B,MAAwB,kBAAViD,EAAqBA,EAAMqJ,OAASrJ,CAE1D,GAAC,CAAAjD,IAAA,6BAAAiD,MACD,SAA2BE,EAAQ3C,GAC/B,OAAO4lC,GAAmBjjC,EAD2B3C,EAAlBzE,mBAEvC,GAAC,CAAAiE,IAAA,QAAAiD,MACD,SAAM6O,EAAa1G,EAAcC,EAASpN,GACtCiN,GAAgB4G,EAAa1G,EAAcC,EAASpN,EAAMqN,kBAC9D,GAAC,CAAAtL,IAAA,8BAAAiD,MACD,SAA4BhF,EAAOiU,GAC/B,OAAOD,GAA4BhU,EAAOiU,EAC9C,GAAC,CAAAlS,IAAA,yBAAAiD,MACD,WAAyB,IAAAiY,EAAA,KACjBzG,KAAK20C,oBACL30C,KAAK20C,2BACE30C,KAAK20C,mBAEhB,IAAQj4C,EAAasD,KAAKxW,MAAlBkT,SACJjM,EAAciM,KACdsD,KAAK20C,kBAAoBj4C,EAASipB,GAAG,UAAU,SAAC1K,GACxCxU,EAAKjZ,UACLiZ,EAAKjZ,QAAQonD,YAAc,GAAHtrD,OAAM2xB,GACtC,IAER,GAAC,CAAA1vB,IAAA,iBAAAiD,MACD,SAAeE,EAAU2O,EAAaN,EAAWC,GAC7CH,GAAWnO,EAAU2O,EAAaN,EAAWC,EACjD,KAACu3C,CAAA,CAtCkB,CAASX,I,UCZjB,SAASiB,GAAeC,EAAQC,GAC7C,MAAQrsD,OAAOC,UAAUC,eAAeC,KAAKisD,EAAQC,IAEpC,QADfD,GAAS,EAAAE,GAAA,GAAeF,MAI1B,OAAOA,CACT,CCPe,SAASG,KAiBtB,OAfEA,GADqB,qBAAZC,SAA2BA,QAAQxlD,IACrCwlD,QAAQxlD,IAER,SAAc0I,EAAQ28C,EAAUI,GACrC,IAAIC,EAAO,GAAch9C,EAAQ28C,GACjC,GAAKK,EAAL,CACA,IAAIC,EAAO3sD,OAAO4sD,yBAAyBF,EAAML,GAEjD,OAAIM,EAAK3lD,IACA2lD,EAAK3lD,IAAI7G,KAAKwG,UAAUC,OAAS,EAAI8I,EAAS+8C,GAGhDE,EAAK7mD,KAPK,CAQnB,EAGKymD,GAAK1uC,MAAMvG,KAAM3Q,UAC1B,CCVkD,IAE5CkmD,GAAgB,SAAAf,IAAApuC,EAAAA,GAAAA,GAAAmvC,EAAAf,GAAA,IAAAnuC,GAAAC,EAAAA,GAAAA,GAAAivC,GAClB,SAAAA,IAAc,IAAA9uC,EAEY,OAFZ1G,EAAAA,GAAAA,GAAA,KAAAw1C,IACV9uC,EAAAJ,EAAAE,MAAA,KAASlX,YACJ0L,UAAW,EAAM0L,CAC1B,CA2BC,OA3BAtG,EAAAA,GAAAA,GAAAo1C,EAAA,EAAAhqD,IAAA,yBAAAiD,MACD,SAAuBhF,EAAO+B,GAC1B,OAAO/B,EAAM+B,EACjB,GAAC,CAAAA,IAAA,wBAAAiD,MACD,SAAsBE,EAAUnD,GAC5B,GAAI8E,EAAeT,IAAIrE,GAAM,CACzB,IAAMkpD,EAAc/xB,GAAoBn3B,GACxC,OAAOkpD,GAAcA,EAAYxiD,SAAe,CACpD,CAEA,OADA1G,EAAO4R,GAAoBvN,IAAIrE,GAA0BA,EAAnBpD,EAAYoD,GAC3CmD,EAAS8mD,aAAajqD,EACjC,GAAC,CAAAA,IAAA,6BAAAiD,MACD,WACI,MpCjBiB,CACrBoC,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,GoCmBrC,GAAC,CAAAnG,IAAA,8BAAAiD,MACD,SAA4BhF,EAAOiU,GAC/B,OAAOD,GAA4BhU,EAAOiU,EAC9C,GAAC,CAAAlS,IAAA,QAAAiD,MACD,SAAM6O,EAAa1G,EAAcC,EAASpN,GACtCsR,GAAcuC,EAAa1G,EAAcC,EAASoJ,KAAKjF,SAAUvR,EAAMqN,kBAC3E,GAAC,CAAAtL,IAAA,iBAAAiD,MACD,SAAeE,EAAU2O,EAAaN,EAAWC,GAC7CI,GAAU1O,EAAU2O,EAAaN,EAAWC,EAChD,GAAC,CAAAzR,IAAA,QAAAiD,MACD,SAAME,GACFsR,KAAKjF,SAAWA,GAASrM,EAAS4U,SAClC2xC,IAAAQ,EAAAA,GAAAA,GAAAF,EAAA5sD,WAAA,cAAAE,KAAA,KAAY6F,EAChB,KAAC6mD,CAAA,CA/BiB,CAAS3B,ICPzB8B,GAAyB,SAACtpD,EAAWwK,GACvC,OAAO7G,EAAe3D,GAChB,IAAImpD,GAAiB3+C,EAAS,CAAEY,4BAA4B,IAC5D,IAAI+8C,GAAkB39C,EAAS,CAAEY,4BAA4B,GACvE,ECLMpM,GAAS,CACXA,OAAQ,CACJ01C,eAAgB6K,GAChBh/C,cAAAA,KCGFX,IAAiBM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB07B,IACAvc,IACA3gB,IACAM,IAQDuqD,GAAuB1mD,GAAkB,SAAC7C,EAAWqS,GAAM,OChBjE,SAA+BrS,EAASL,EAAkCC,EAAmBC,GAAqB,IAAA2pD,EAAA7pD,EAAtE+N,mBAAAA,OAAkB,IAAA87C,GAAQA,EAC5DC,EAAa9lD,EAAe3D,GAC5B8W,GACAK,GACN,OAAAjX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOupD,GAAU,IACb7pD,kBAAAA,EACAE,UAAWsQ,GAAgB1C,GAC3B7N,oBAAAA,EACAG,UAAAA,GAER,CDKsE0pD,CAAsB1pD,EAAWqS,EAAQzS,GAAmB0pD,GAAuB,G","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","key","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","i","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","_objectWithoutProperties","excluded","sourceKeys","keys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","_classCallCheck","this","order","scheduled","_createClass","process","add","push","index","splice","delete","clear","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","queue","cancel","remove","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","wake","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","_ref3","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","contextWindow","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","parseCSSVariable","exec","_match","getVariableValue","_parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","receiver","base","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}